var child_process   = require('child_process');
var tmp             = require('tmp')
var fs              = require('fs')

var expect          = require('chai').expect

var baseDir         = process.env.BASE_SIESTA_DIR || 'http://lh/siesta'

exports.runSuite = function (args, callback) {
    var options     = []

    for (var name in args) {
        if (/^\$/.test(name)) continue

        var optionName  = name

        if (!/^--/.test(optionName)) optionName = '--' + optionName

        options.push(optionName + '=' + args[ name ])
    }

    var bin         = args.$binary || 'bin/webdriver'
    var isWindows   = process.platform == 'win32'

    if (isWindows) {
        bin         = bin.replace(/\//g, '\\') + '.bat'
    }

    var res     = child_process.execFile(
        bin,
        [
            // allow empty $harnessUrl
            args.hasOwnProperty('$harnessUrl') ? args.$harnessUrl : baseDir + '/examples/browser/',
            '--no-color',
            args.$noXvfb ? '' : '--xvfb'
        ].concat(options, args.$more || []),
        { encoding : 'utf8', shell : true },
        function (error, stdout, stderr) {
            callback({
                exitCode        : error ? error.code : 0,
                stdout          : stdout,
                stderr          : stderr
            })
        }
    )
}


exports.runCoverageSuite = function (args, callback) {
    var tmpFolder       = tmp.dirSync({ unsafeCleanup : true })

    exports.runSuite(Object.assign({
        $harnessUrl                 : baseDir + '/examples/sencha-extjs/',
        'include'                   : 'code_coverage',
        'nyc.include'               : '**/*code_coverage',
        'coverage-report-format'    : 'html',
        'coverage-report-dir'       : tmpFolder.name
    }, args), function (res) {
        if (res.exitCode != 0) console.log("STDOUT: ", res.stdout, '\nSTDERR: ', res.stderr)

        expect(res.exitCode).to.equal(0)

        exports.verifyCoverageReportDirContent(tmpFolder.name)

        callback(Object.assign(res, {
            reportDir       : tmpFolder.name
        }))
    })
}

exports.verifyCoverageReportDirContent = function (reportDir) {
    // will throw if absent
    fs.accessSync(reportDir + '/index.html')
    fs.accessSync(reportDir + '/sorter.js')

    fs.accessSync(reportDir + '/5.code_coverage/some_folder/folder2/preload_file.js.html')
}


exports.runJSONReportSuite = function (args, callback) {
    var tmpFile     = tmp.fileSync()

    exports.runSuite(Object.assign({
        'include'                   : 'basic',
        'report-format'             : 'JSON',
        'report-file'               : tmpFile.name
    }, args), function (res) {
        if (res.exitCode != 0) console.log("STDOUT: ", res.stdout, '\nSTDERR: ', res.stderr)

        expect(res.exitCode).to.equal(0)

        exports.verifyJSONReportFile(tmpFile.name)

        callback(Object.assign(res, {
            reportFile      : tmpFile.name
        }))
    })
}


exports.verifyJSONReportFile = function (reportFile) {
    var report      = fs.readFileSync(reportFile)

    JSON.parse(report)
}


exports.runScreenshotSuite = function (args, callback) {
    var tmpName     = args.$tmpName || tmp.dirSync({ unsafeCleanup : true }).name

    exports.runSuite(Object.assign({
        $harnessUrl                 : baseDir + '/examples/sencha-extjs/',
        'include'                   : "editing.t.js",
        'screenshot-dir'            : tmpName
    }, args), function (res) {
        if (res.exitCode != 0) console.log("STDOUT: ", res.stdout, '\nSTDERR: ', res.stderr)

        expect(res.exitCode).to.equal(0)

        fs.accessSync(tmpName + '/screenshots/editing.png')
        fs.accessSync(tmpName + '/screenshots/editing-first-row.png')

        callback(Object.assign(res, {
            $tmpName        : tmpName
        }))
    })
}
