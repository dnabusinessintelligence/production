import {Constructable, Mixin} from "../Common.js";

export enum LogLevel {
    info,
    debug,
    log,
    warn,
    error
}

export const CanLog = <T extends Constructable>(base : T) => class CanLog extends base {
    logLevel        : LogLevel = LogLevel.warn


    printLn (message : string) {
        throw "Abstract method"
    }


    info (message : string) {
        if (this.logLevel <= LogLevel.info) this.printLn(message)
    }


    debug (message : string) {
        if (this.logLevel <= LogLevel.debug) this.printLn(message)
    }


    log (message : string) {
        if (this.logLevel <= LogLevel.log) this.printLn(message)
    }


    warn (message : string) {
        if (this.logLevel <= LogLevel.warn) this.printLn(message)
    }


    error (message : string) {
        if (this.logLevel <= LogLevel.error) this.printLn(message)
    }
}

export type CanLog = Mixin<typeof CanLog>
