StartTest(t => {

    let someAsyncOperation =
        () => new Promise((resolve, reject) => {
            setTimeout(() => {
                resolve("someValue")
            }, 300)
        })

    t.it('Doing async stuff', t => {

        t.chain(
            // function step, that returns a promise (sugared with async/await)
            async () => {
                return await someAsyncOperation()
            },

            // desugared version
            function (next, result) {
                t.is(result, 'someValue', "Correct result returned")

                return someAsyncOperation()
            }
        )
    })

})