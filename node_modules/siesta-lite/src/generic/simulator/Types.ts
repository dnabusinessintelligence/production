import {Point} from "../util/Point.js";


export enum KeyState {
    Up      = "up",
    Down    = "down"
}

// Siesta's key "codes" for control keys
export type ModifierKey = 'CMD' | 'ALT' | 'CTRL' | 'SHIFT'


export type KeyCanBePressed = string


export enum PointerState {
    Up      = "up",
    Down    = "down"
}


export enum PointerModifier {
    Left    = "left",
    Right   = "right",
    Middle  = "middle"
}


export interface SimulatorClient {
    type                : string;

    currentPosition     : Point;


    simulateMouseMove(x: number, y: number, options, params: any): Promise<any>


    simulateMouseDown(clickInfo, options): Promise<any>

    simulateMouseUp(clickInfo, options): Promise<any>

    simulateMouseClick(clickInfo, options): Promise<any>

    simulateRightClick(clickInfo, options): Promise<any>

    simulateDoubleClick(clickInfo, options): Promise<any>

    simulateMouseWheel(clickInfo, options): Promise<any>


    simulateDrag(sourceXY, targetXY, options, dragOnly): Promise<any>


    simulateType(text, options, params): Promise<any>

    onTestLaunch(test)

    cleanup()
}
