Ext.data.JsonP.Siesta_Test_Browser({"tagname":"class","name":"Siesta.Test.Browser","autodetected":{},"files":[{"filename":"Browser.js","href":"Browser2.html#Siesta-Test-Browser"}],"extends":"Siesta.Test","mixins":["Siesta.Test.Browser.Role.CanGetElementFromPoint","Siesta.Test.Element","Siesta.Test.TextSelection","Siesta.Test.UserAgent.Keyboard","Siesta.Test.UserAgent.Mouse","Siesta.Test.UserAgent.Touch"],"members":[{"name":"isReadyTimeout","tagname":"cfg","owner":"Siesta.Test","id":"cfg-isReadyTimeout","meta":{}},{"name":"moveCursorBetweenPoints","tagname":"cfg","owner":"Siesta.Test.UserAgent.Mouse","id":"cfg-moveCursorBetweenPoints","meta":{}},{"name":"waitForTimeout","tagname":"cfg","owner":"Siesta.Test.More","id":"cfg-waitForTimeout","meta":{}},{"name":"bowser","tagname":"property","owner":"Siesta.Test.Browser","id":"property-bowser","meta":{}},{"name":"url","tagname":"property","owner":"Siesta.Test","id":"property-url","meta":{}},{"name":"afterEach","tagname":"method","owner":"Siesta.Test.BDD","id":"method-afterEach","meta":{}},{"name":"any","tagname":"method","owner":"Siesta.Test.BDD","id":"method-any","meta":{}},{"name":"anyNumberApprox","tagname":"method","owner":"Siesta.Test.BDD","id":"method-anyNumberApprox","meta":{}},{"name":"anyStringLike","tagname":"method","owner":"Siesta.Test.BDD","id":"method-anyStringLike","meta":{}},{"name":"assertTextPresent","tagname":"method","owner":"Siesta.Test.Element","id":"method-assertTextPresent","meta":{}},{"name":"beforeEach","tagname":"method","owner":"Siesta.Test.BDD","id":"method-beforeEach","meta":{}},{"name":"beginAsync","tagname":"method","owner":"Siesta.Test","id":"method-beginAsync","meta":{}},{"name":"chain","tagname":"method","owner":"Siesta.Test.More","id":"method-chain","meta":{}},{"name":"chainForArray","tagname":"method","owner":"Siesta.Test.More","id":"method-chainForArray","meta":{}},{"name":"clearTimeout","tagname":"method","owner":"Siesta.Test.Browser","id":"method-clearTimeout","meta":{}},{"name":"click","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-click","meta":{}},{"name":"clickAll","tagname":"method","owner":"Siesta.Test.Element","id":"method-clickAll","meta":{}},{"name":"clickSelector","tagname":"method","owner":"Siesta.Test.Element","id":"method-clickSelector","meta":{}},{"name":"compareObjects","tagname":"method","owner":"Siesta.Util.Role.CanCompareObjects","id":"method-compareObjects","meta":{}},{"name":"contentLike","tagname":"method","owner":"Siesta.Test.Element","id":"method-contentLike","meta":{}},{"name":"contentNotLike","tagname":"method","owner":"Siesta.Test.Element","id":"method-contentNotLike","meta":{}},{"name":"createSpy","tagname":"method","owner":"Siesta.Test.BDD","id":"method-createSpy","meta":{}},{"name":"createSpyObj","tagname":"method","owner":"Siesta.Test.BDD","id":"method-createSpyObj","meta":{}},{"name":"ddescribe","tagname":"method","owner":"Siesta.Test.BDD","id":"method-ddescribe","meta":{}},{"name":"describe","tagname":"method","owner":"Siesta.Test.BDD","id":"method-describe","meta":{}},{"name":"diag","tagname":"method","owner":"Siesta.Test","id":"method-diag","meta":{}},{"name":"done","tagname":"method","owner":"Siesta.Test","id":"method-done","meta":{}},{"name":"doubleClick","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-doubleClick","meta":{}},{"name":"doubleTap","tagname":"method","owner":"Siesta.Test.UserAgent.Touch","id":"method-doubleTap","meta":{}},{"name":"dragBy","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-dragBy","meta":{}},{"name":"dragTo","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-dragTo","meta":{}},{"name":"earlySetup","tagname":"method","owner":"Siesta.Test","id":"method-earlySetup","meta":{}},{"name":"elementFromPoint","tagname":"method","owner":"Siesta.Test.Browser.Role.CanGetElementFromPoint","id":"method-elementFromPoint","meta":{}},{"name":"elementIsAt","tagname":"method","owner":"Siesta.Test.Element","id":"method-elementIsAt","meta":{}},{"name":"elementIsEmpty","tagname":"method","owner":"Siesta.Test.Element","id":"method-elementIsEmpty","meta":{}},{"name":"elementIsInView","tagname":"method","owner":"Siesta.Test.Element","id":"method-elementIsInView","meta":{}},{"name":"elementIsNotEmpty","tagname":"method","owner":"Siesta.Test.Element","id":"method-elementIsNotEmpty","meta":{}},{"name":"elementIsNotTopElement","tagname":"method","owner":"Siesta.Test.Element","id":"method-elementIsNotTopElement","meta":{}},{"name":"elementIsNotVisible","tagname":"method","owner":"Siesta.Test.Element","id":"method-elementIsNotVisible","meta":{}},{"name":"elementIsTop","tagname":"method","owner":"Siesta.Test.Element","id":"method-elementIsTop","meta":{}},{"name":"elementIsTopElement","tagname":"method","owner":"Siesta.Test.Element","id":"method-elementIsTopElement","meta":{}},{"name":"elementIsVisible","tagname":"method","owner":"Siesta.Test.Element","id":"method-elementIsVisible","meta":{}},{"name":"endAsync","tagname":"method","owner":"Siesta.Test","id":"method-endAsync","meta":{}},{"name":"exact","tagname":"method","owner":"Siesta.Test","id":"method-exact","meta":{}},{"name":"exit","tagname":"method","owner":"Siesta.Test","id":"method-exit","meta":{}},{"name":"expect","tagname":"method","owner":"Siesta.Test.BDD","id":"method-expect","meta":{}},{"name":"expectAlertMessage","tagname":"method","owner":"Siesta.Test.Browser","id":"method-expectAlertMessage","meta":{}},{"name":"expectGlobals","tagname":"method","owner":"Siesta.Test.More","id":"method-expectGlobals","meta":{}},{"name":"fail","tagname":"method","owner":"Siesta.Test","id":"method-fail","meta":{}},{"name":"findCenter","tagname":"method","owner":"Siesta.Test.Element","id":"method-findCenter","meta":{}},{"name":"getElementAtCursor","tagname":"method","owner":"Siesta.Test.Browser","id":"method-getElementAtCursor","meta":{}},{"name":"getSelectedText","tagname":"method","owner":"Siesta.Test.TextSelection","id":"method-getSelectedText","meta":{}},{"name":"getSubTest","tagname":"method","owner":"Siesta.Test","id":"method-getSubTest","meta":{}},{"name":"hasAttributeValue","tagname":"method","owner":"Siesta.Test.Element","id":"method-hasAttributeValue","meta":{}},{"name":"hasCls","tagname":"method","owner":"Siesta.Test.Element","id":"method-hasCls","meta":{}},{"name":"hasNotCls","tagname":"method","owner":"Siesta.Test.Element","id":"method-hasNotCls","meta":{}},{"name":"hasNotStyle","tagname":"method","owner":"Siesta.Test.Element","id":"method-hasNotStyle","meta":{}},{"name":"hasSameHeight","tagname":"method","owner":"Siesta.Test.Element","id":"method-hasSameHeight","meta":{}},{"name":"hasSameWidth","tagname":"method","owner":"Siesta.Test.Element","id":"method-hasSameWidth","meta":{}},{"name":"hasStyle","tagname":"method","owner":"Siesta.Test.Element","id":"method-hasStyle","meta":{}},{"name":"hasValue","tagname":"method","owner":"Siesta.Test.Element","id":"method-hasValue","meta":{}},{"name":"iit","tagname":"method","owner":"Siesta.Test.BDD","id":"method-iit","meta":{}},{"name":"is","tagname":"method","owner":"Siesta.Test","id":"method-is","meta":{}},{"name":"isApprox","tagname":"method","owner":"Siesta.Test.More","id":"method-isApprox","meta":{}},{"name":"isArray","tagname":"method","owner":"Siesta.Test.More","id":"method-isArray","meta":{}},{"name":"isBoolean","tagname":"method","owner":"Siesta.Test.More","id":"method-isBoolean","meta":{}},{"name":"isCalled","tagname":"method","owner":"Siesta.Test.Function","id":"method-isCalled","meta":{}},{"name":"isCalledNTimes","tagname":"method","owner":"Siesta.Test.Function","id":"method-isCalledNTimes","meta":{}},{"name":"isCalledOnce","tagname":"method","owner":"Siesta.Test.Function","id":"method-isCalledOnce","meta":{}},{"name":"isDate","tagname":"method","owner":"Siesta.Test.More","id":"method-isDate","meta":{}},{"name":"isDateEqual","tagname":"method","owner":"Siesta.Test.Date","id":"method-isDateEqual","meta":{}},{"name":"isDeeply","tagname":"method","owner":"Siesta.Test.More","id":"method-isDeeply","meta":{}},{"name":"isDeeplyStrict","tagname":"method","owner":"Siesta.Test.More","id":"method-isDeeplyStrict","meta":{}},{"name":"isElementVisible","tagname":"method","owner":"Siesta.Test.Element","id":"method-isElementVisible","meta":{}},{"name":"isFunction","tagname":"method","owner":"Siesta.Test.More","id":"method-isFunction","meta":{}},{"name":"isGreater","tagname":"method","owner":"Siesta.Test.More","id":"method-isGreater","meta":{}},{"name":"isGreaterOrEqual","tagname":"method","owner":"Siesta.Test.More","id":"method-isGreaterOrEqual","meta":{}},{"name":"isInView","tagname":"method","owner":"Siesta.Test.Element","id":"method-isInView","meta":{}},{"name":"isInstanceOf","tagname":"method","owner":"Siesta.Test.More","id":"method-isInstanceOf","meta":{}},{"name":"isLess","tagname":"method","owner":"Siesta.Test.More","id":"method-isLess","meta":{}},{"name":"isLessOrEqual","tagname":"method","owner":"Siesta.Test.More","id":"method-isLessOrEqual","meta":{}},{"name":"isNot","tagname":"method","owner":"Siesta.Test","id":"method-isNot","meta":{}},{"name":"isNotStrict","tagname":"method","owner":"Siesta.Test","id":"method-isNotStrict","meta":{}},{"name":"isNumber","tagname":"method","owner":"Siesta.Test.More","id":"method-isNumber","meta":{}},{"name":"isObject","tagname":"method","owner":"Siesta.Test.More","id":"method-isObject","meta":{}},{"name":"isReady","tagname":"method","owner":"Siesta.Test","id":"method-isReady","meta":{}},{"name":"isRegExp","tagname":"method","owner":"Siesta.Test.More","id":"method-isRegExp","meta":{}},{"name":"isStrict","tagname":"method","owner":"Siesta.Test","id":"method-isStrict","meta":{}},{"name":"isString","tagname":"method","owner":"Siesta.Test.More","id":"method-isString","meta":{}},{"name":"isntCalled","tagname":"method","owner":"Siesta.Test.Function","id":"method-isntCalled","meta":{}},{"name":"it","tagname":"method","owner":"Siesta.Test.BDD","id":"method-it","meta":{}},{"name":"keyPress","tagname":"method","owner":"Siesta.Test.UserAgent.Keyboard","id":"method-keyPress","meta":{}},{"name":"launchSubTest","tagname":"method","owner":"Siesta.Test","id":"method-launchSubTest","meta":{}},{"name":"like","tagname":"method","owner":"Siesta.Test.More","id":"method-like","meta":{}},{"name":"livesOk","tagname":"method","owner":"Siesta.Test.More","id":"method-livesOk","meta":{}},{"name":"livesOkAsync","tagname":"method","owner":"Siesta.Test.Browser","id":"method-livesOkAsync","meta":{}},{"name":"longPress","tagname":"method","owner":"Siesta.Test.UserAgent.Touch","id":"method-longPress","meta":{}},{"name":"methodIsCalled","tagname":"method","owner":"Siesta.Test.Function","id":"method-methodIsCalled","meta":{}},{"name":"methodIsCalledNTimes","tagname":"method","owner":"Siesta.Test.Function","id":"method-methodIsCalledNTimes","meta":{}},{"name":"methodIsntCalled","tagname":"method","owner":"Siesta.Test.Function","id":"method-methodIsntCalled","meta":{}},{"name":"monkeyTest","tagname":"method","owner":"Siesta.Test.Element","id":"method-monkeyTest","meta":{}},{"name":"mouseDown","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-mouseDown","meta":{}},{"name":"mouseUp","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-mouseUp","meta":{}},{"name":"moveCursorAlongPath","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-moveCursorAlongPath","meta":{}},{"name":"moveCursorBy","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-moveCursorBy","meta":{}},{"name":"moveCursorTo","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-moveCursorTo","meta":{}},{"name":"moveMouseBy","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-moveMouseBy","meta":{}},{"name":"moveMouseTo","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-moveMouseTo","meta":{}},{"name":"notOk","tagname":"method","owner":"Siesta.Test","id":"method-notOk","meta":{}},{"name":"ok","tagname":"method","owner":"Siesta.Test","id":"method-ok","meta":{}},{"name":"pass","tagname":"method","owner":"Siesta.Test","id":"method-pass","meta":{}},{"name":"pinch","tagname":"method","owner":"Siesta.Test.UserAgent.Touch","id":"method-pinch","meta":{}},{"name":"query","tagname":"method","owner":"Siesta.Test.Browser","id":"method-query","meta":{}},{"name":"rightClick","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-rightClick","meta":{}},{"name":"scrollHorizontallyTo","tagname":"method","owner":"Siesta.Test.Element","id":"method-scrollHorizontallyTo","meta":{}},{"name":"scrollTo","tagname":"method","owner":"Siesta.Test.Element","id":"method-scrollTo","meta":{}},{"name":"scrollVerticallyTo","tagname":"method","owner":"Siesta.Test.Element","id":"method-scrollVerticallyTo","meta":{}},{"name":"selectText","tagname":"method","owner":"Siesta.Test.TextSelection","id":"method-selectText","meta":{}},{"name":"selectorCountIs","tagname":"method","owner":"Siesta.Test.Element","id":"method-selectorCountIs","meta":{}},{"name":"selectorExists","tagname":"method","owner":"Siesta.Test.Element","id":"method-selectorExists","meta":{}},{"name":"selectorIsAt","tagname":"method","owner":"Siesta.Test.Element","id":"method-selectorIsAt","meta":{}},{"name":"selectorNotExists","tagname":"method","owner":"Siesta.Test.Element","id":"method-selectorNotExists","meta":{}},{"name":"setHash","tagname":"method","owner":"Siesta.Test.Browser","id":"method-setHash","meta":{}},{"name":"setNextConfirmReturnValue","tagname":"method","owner":"Siesta.Test.Browser","id":"method-setNextConfirmReturnValue","meta":{}},{"name":"setNextPromptReturnValue","tagname":"method","owner":"Siesta.Test.Browser","id":"method-setNextPromptReturnValue","meta":{}},{"name":"setTimeout","tagname":"method","owner":"Siesta.Test.Browser","id":"method-setTimeout","meta":{}},{"name":"setUrl","tagname":"method","owner":"Siesta.Test.Browser","id":"method-setUrl","meta":{}},{"name":"setWindowSize","tagname":"method","owner":"Siesta.Test.Browser","id":"method-setWindowSize","meta":{}},{"name":"setup","tagname":"method","owner":"Siesta.Test","id":"method-setup","meta":{}},{"name":"simulateActivateWindow","tagname":"method","owner":"Siesta.Test.Browser","id":"method-simulateActivateWindow","meta":{}},{"name":"simulateDeactivateWindow","tagname":"method","owner":"Siesta.Test.Browser","id":"method-simulateDeactivateWindow","meta":{}},{"name":"snooze","tagname":"method","owner":"Siesta.Test","id":"method-snooze","meta":{}},{"name":"spyOn","tagname":"method","owner":"Siesta.Test.BDD","id":"method-spyOn","meta":{}},{"name":"subTest","tagname":"method","owner":"Siesta.Test","id":"method-subTest","meta":{}},{"name":"swipe","tagname":"method","owner":"Siesta.Test.UserAgent.Touch","id":"method-swipe","meta":{}},{"name":"switchTo","tagname":"method","owner":"Siesta.Test.Browser","id":"method-switchTo","meta":{}},{"name":"switchToMain","tagname":"method","owner":"Siesta.Test.Browser","id":"method-switchToMain","meta":{}},{"name":"tap","tagname":"method","owner":"Siesta.Test.UserAgent.Touch","id":"method-tap","meta":{}},{"name":"tearDown","tagname":"method","owner":"Siesta.Test","id":"method-tearDown","meta":{}},{"name":"throwsOk","tagname":"method","owner":"Siesta.Test.More","id":"method-throwsOk","meta":{}},{"name":"throwsOkAsync","tagname":"method","owner":"Siesta.Test.Browser","id":"method-throwsOkAsync","meta":{}},{"name":"todo","tagname":"method","owner":"Siesta.Test","id":"method-todo","meta":{}},{"name":"touchDragBy","tagname":"method","owner":"Siesta.Test.UserAgent.Touch","id":"method-touchDragBy","meta":{}},{"name":"touchDragTo","tagname":"method","owner":"Siesta.Test.UserAgent.Touch","id":"method-touchDragTo","meta":{}},{"name":"type","tagname":"method","owner":"Siesta.Test.UserAgent.Keyboard","id":"method-type","meta":{}},{"name":"unlike","tagname":"method","owner":"Siesta.Test.More","id":"method-unlike","meta":{}},{"name":"verifyGlobals","tagname":"method","owner":"Siesta.Test.More","id":"method-verifyGlobals","meta":{}},{"name":"waitFor","tagname":"method","owner":"Siesta.Test.More","id":"method-waitFor","meta":{}},{"name":"waitForContentLike","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForContentLike","meta":{}},{"name":"waitForContentNotLike","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForContentNotLike","meta":{}},{"name":"waitForElementEmpty","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForElementEmpty","meta":{}},{"name":"waitForElementNotEmpty","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForElementNotEmpty","meta":{}},{"name":"waitForElementNotTop","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForElementNotTop","meta":{}},{"name":"waitForElementNotVisible","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForElementNotVisible","meta":{}},{"name":"waitForElementTop","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForElementTop","meta":{}},{"name":"waitForElementVisible","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForElementVisible","meta":{}},{"name":"waitForFn","tagname":"method","owner":"Siesta.Test.More","id":"method-waitForFn","meta":{}},{"name":"waitForMs","tagname":"method","owner":"Siesta.Test.More","id":"method-waitForMs","meta":{}},{"name":"waitForPageLoad","tagname":"method","owner":"Siesta.Test.Browser","id":"method-waitForPageLoad","meta":{}},{"name":"waitForScrollChange","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForScrollChange","meta":{}},{"name":"waitForScrollLeftChange","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForScrollLeftChange","meta":{}},{"name":"waitForScrollTopChange","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForScrollTopChange","meta":{}},{"name":"waitForSelector","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForSelector","meta":{}},{"name":"waitForSelectorAt","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForSelectorAt","meta":{}},{"name":"waitForSelectorAtCursor","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForSelectorAtCursor","meta":{}},{"name":"waitForSelectorNotFound","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForSelectorNotFound","meta":{}},{"name":"waitForSelectors","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitForSelectors","meta":{}},{"name":"waitForTarget","tagname":"method","owner":"Siesta.Test.Browser","id":"method-waitForTarget","meta":{}},{"name":"waitForTextNotPresent","tagname":"method","owner":"Siesta.Test.Browser","id":"method-waitForTextNotPresent","meta":{}},{"name":"waitForTextPresent","tagname":"method","owner":"Siesta.Test.Browser","id":"method-waitForTextPresent","meta":{}},{"name":"waitUntilInView","tagname":"method","owner":"Siesta.Test.Element","id":"method-waitUntilInView","meta":{}},{"name":"wheel","tagname":"method","owner":"Siesta.Test.UserAgent.Mouse","id":"method-wheel","meta":{}},{"name":"xdescribe","tagname":"method","owner":"Siesta.Test.BDD","id":"method-xdescribe","meta":{}},{"name":"xit","tagname":"method","owner":"Siesta.Test.BDD","id":"method-xit","meta":{}},{"name":"beforetestfinalize","tagname":"event","owner":"Siesta.Test","id":"event-beforetestfinalize","meta":{}},{"name":"testfailedwithexception","tagname":"event","owner":"Siesta.Test","id":"event-testfailedwithexception","meta":{}},{"name":"testfinalize","tagname":"event","owner":"Siesta.Test","id":"event-testfinalize","meta":{}},{"name":"teststart","tagname":"event","owner":"Siesta.Test","id":"event-teststart","meta":{}},{"name":"testupdate","tagname":"event","owner":"Siesta.Test","id":"event-testupdate","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Siesta.Test.Browser","short_doc":"A base class for testing a generic browser functionality. ...","component":false,"superclasses":["Siesta.Test"],"subclasses":["Siesta.Test.ExtJS","Siesta.Test.SenchaTouch","Siesta.Test.jQuery"],"mixedInto":[],"parentMixins":["Siesta.Test.BDD","Siesta.Test.Date","Siesta.Test.Function","Siesta.Test.More","Siesta.Util.Role.CanCompareObjects"],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='docClass'>Siesta.Test</a><div class='subclass '><strong>Siesta.Test.Browser</strong></div></div><h4>Mixins</h4><div class='dependency'><a href='#!/api/Siesta.Test.Browser.Role.CanGetElementFromPoint' rel='Siesta.Test.Browser.Role.CanGetElementFromPoint' class='docClass'>Siesta.Test.Browser.Role.CanGetElementFromPoint</a></div><div class='dependency'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='docClass'>Siesta.Test.Element</a></div><div class='dependency'><a href='#!/api/Siesta.Test.TextSelection' rel='Siesta.Test.TextSelection' class='docClass'>Siesta.Test.TextSelection</a></div><div class='dependency'><a href='#!/api/Siesta.Test.UserAgent.Keyboard' rel='Siesta.Test.UserAgent.Keyboard' class='docClass'>Siesta.Test.UserAgent.Keyboard</a></div><div class='dependency'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='docClass'>Siesta.Test.UserAgent.Mouse</a></div><div class='dependency'><a href='#!/api/Siesta.Test.UserAgent.Touch' rel='Siesta.Test.UserAgent.Touch' class='docClass'>Siesta.Test.UserAgent.Touch</a></div><h4>Inherited mixins</h4><div class='dependency'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='docClass'>Siesta.Test.BDD</a></div><div class='dependency'><a href='#!/api/Siesta.Test.Date' rel='Siesta.Test.Date' class='docClass'>Siesta.Test.Date</a></div><div class='dependency'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='docClass'>Siesta.Test.Function</a></div><div class='dependency'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='docClass'>Siesta.Test.More</a></div><div class='dependency'><a href='#!/api/Siesta.Util.Role.CanCompareObjects' rel='Siesta.Util.Role.CanCompareObjects' class='docClass'>Siesta.Util.Role.CanCompareObjects</a></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/Siesta.Test.ExtJS' rel='Siesta.Test.ExtJS' class='docClass'>Siesta.Test.ExtJS</a></div><div class='dependency'><a href='#!/api/Siesta.Test.SenchaTouch' rel='Siesta.Test.SenchaTouch' class='docClass'>Siesta.Test.SenchaTouch</a></div><div class='dependency'><a href='#!/api/Siesta.Test.jQuery' rel='Siesta.Test.jQuery' class='docClass'>Siesta.Test.jQuery</a></div><h4>Files</h4><div class='dependency'><a href='source/Browser2.html#Siesta-Test-Browser' target='_blank'>Browser.js</a></div></pre><div class='doc-contents'><p>A base class for testing a generic browser functionality. It has various DOM-related assertions, and is not optimized for any framework.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-isReadyTimeout' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-cfg-isReadyTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-cfg-isReadyTimeout' class='name expandable'>isReadyTimeout</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Timeout in milliseconds to wait for test start. ...</div><div class='long'><p>Timeout in milliseconds to wait for test start. Default value is 10000. See also <a href=\"#!/api/Siesta.Test-method-isReady\" rel=\"Siesta.Test-method-isReady\" class=\"docClass\">isReady</a></p>\n<p>Defaults to: <code>10000</code></p></div></div></div><div id='cfg-moveCursorBetweenPoints' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-cfg-moveCursorBetweenPoints' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-cfg-moveCursorBetweenPoints' class='name expandable'>moveCursorBetweenPoints</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>True to move the mouse cursor between for example two clicks on\n separate elements (for better visual experience) ...</div><div class='long'><p>True to move the mouse cursor between for example two clicks on\n separate elements (for better visual experience)</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-waitForTimeout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-cfg-waitForTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-cfg-waitForTimeout' class='name expandable'>waitForTimeout</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Default timeout for waitFor (in milliseconds). ...</div><div class='long'><p>Default timeout for <code>waitFor</code> (in milliseconds). Default value is 10000.</p>\n<p>Defaults to: <code>10000</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-bowser' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-property-bowser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-property-bowser' class='name expandable'>bowser</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'><p>Alias for <a href=\"#!/api/Siesta.Test.Browser-property-bowser\" rel=\"Siesta.Test.Browser-property-bowser\" class=\"docClass\">bowser</a></p>\n</div><div class='long'><p>Alias for <a href=\"#!/api/Siesta.Test.Browser-property-bowser\" rel=\"Siesta.Test.Browser-property-bowser\" class=\"docClass\">bowser</a></p>\n</div></div></div><div id='property-url' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-property-url' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-property-url' class='name expandable'>url</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>The url of this test, as given to the start method. ...</div><div class='long'><p>The url of this test, as given to the <a href=\"#!/api/Siesta.Project-method-start\" rel=\"Siesta.Project-method-start\" class=\"docClass\">start</a> method. All subtests of some top-level test shares the same url.</p>\n<p>Defaults to: <code>{required: true}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-afterEach' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-afterEach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-afterEach' class='name expandable'>afterEach</a>( <span class='pre'>code, isAsync</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method allows you to execute some \"setup\" code hook after every spec (\"it\" block) of the current test. ...</div><div class='long'><p>This method allows you to execute some \"setup\" code hook after every spec (\"it\" block) of the current test.\nSuch hooks are <strong>not</strong> executed for the \"describe\" blocks and sub-tests generated with\nthe <a href=\"#!/api/Siesta.Test-method-getSubTest\" rel=\"Siesta.Test-method-getSubTest\" class=\"docClass\">getSubTest</a> method.</p>\n\n<p>Note, that specs can be nested and all <code>afterEach</code> hooks are executed in order, starting from the most-nested one.</p>\n\n<p>The 1st argument of the hook function is always the test instance being launched.</p>\n\n<p>If the hook function is async (<code>async () =&gt; {}</code>) Siesta will \"await\" until it completes.</p>\n\n<p>If hook is declared with 2 arguments - it is supposed to be asynchronous (you can also force the asynchronous\nmode with the <code>isAsync</code> argument, see below). The completion callback will be provided as the 2nd argument for the hook.</p>\n\n<p>This method can be called several times, providing several \"hook\" functions.</p>\n\n<p>For example:</p>\n\n<pre><code>StartTest(function (t) {\n    var baz     = 0\n\n    t.afterEach(function (t) {\n        // the `t` instance here is the \"t\" instance from the \"it\" block below\n        baz     = 0\n    })\n\n    t.it(\"This feature should work\", function (t) {\n        t.expect(myFunction(baz++)).toEqual('someResult')\n    })\n})\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>A function to execute after every spec</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>t</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>A test instance being completed</p>\n</div></li><li><span class='pre'>next</span> : Function<div class='sub-desc'><p>A callback to call when the <code>afterEach</code> method completes. This argument is only provided\nwhen hook function is declared with 2 arguments (or the <code>isAsync</code> argument is passed as <code>true</code>)</p>\n</div></li></ul></div></li><li><span class='pre'>isAsync</span> : Boolean<div class='sub-desc'><p>When passed as <code>true</code> this argument makes the <code>afterEach</code> method asynchronous. In this case,\nthe <code>code</code> function will receive an additional callback argument, which should be called once the method has completed its work.</p>\n\n<p>Note, that <code>afterEach</code> method should complete within defaultTimeout time, otherwise\nfailing assertion will be added to the test.</p>\n\n<p>Example of asynchronous hook:</p>\n\n<pre><code>StartTest(function (t) {\n    var baz     = 0\n    var delay = (time) =&gt; new Promise(resolve =&gt; setTimeout(resolve, time))\n\n    // asynchronous hook function\n    t.beforeEach(async t =&gt; {\n        await delay(100)\n        baz     = 0\n    })\n\n    // asynchronous setup code\n    t.afterEach(function (t, next) {\n\n        // `afterEach` will complete in 100ms\n        setTimeout(function () {\n            baz     = 0\n            next()\n        }, 100)\n    })\n\n    t.describe(\"This feature should work\", function (t) {\n        t.expect(myFunction(baz++)).toEqual('someResult')\n    })\n})\n</code></pre>\n</div></li></ul></div></div></div><div id='method-any' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-any' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-any' class='name expandable'>any</a>( <span class='pre'>clsConstructor</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>This method returns a placeholder, denoting any instance of the provided class constructor. ...</div><div class='long'><p>This method returns a <em>placeholder</em>, denoting any instance of the provided class constructor. Such placeholder can be used in various\ncomparison assertions, like is, isDeeply, <a href=\"#!/api/Siesta.Test.BDD.Expectation-method-toBe\" rel=\"Siesta.Test.BDD.Expectation-method-toBe\" class=\"docClass\">expect().toBe()</a>,\n<a href=\"#!/api/Siesta.Test.BDD.Expectation-method-toBe\" rel=\"Siesta.Test.BDD.Expectation-method-toBe\" class=\"docClass\">expect().toEqual()</a> and so on.</p>\n\n<p>For example:</p>\n\n<pre><code>t.is(1, t.any(Number))\n\nt.expect(1).toBe(t.any(Number))\n\nt.isDeeply({ name : 'John', age : 45 }, { name : 'John', age : t.any(Number))\n\nt.expect({ name : 'John', age : 45 }).toEqual({ name : 'John', age : t.any(Number))\n\nt.is(NaN, t.any(), 'When class constructor is not provided `t.any()` should match anything')\n</code></pre>\n\n<p>See also <a href=\"#!/api/Siesta.Test.BDD-method-anyNumberApprox\" rel=\"Siesta.Test.BDD-method-anyNumberApprox\" class=\"docClass\">anyNumberApprox</a>, <a href=\"#!/api/Siesta.Test.BDD-method-anyStringLike\" rel=\"Siesta.Test.BDD-method-anyStringLike\" class=\"docClass\">anyStringLike</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clsConstructor</span> : Function<div class='sub-desc'><p>A class constructor instances of which are denoted with this placeholder. As a special case if this argument\nis not provided, a placeholder will match any value.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A placeholder object</p>\n</div></li></ul></div></div></div><div id='method-anyNumberApprox' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-anyNumberApprox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-anyNumberApprox' class='name expandable'>anyNumberApprox</a>( <span class='pre'>value, [threshold]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>This method returns a placeholder, denoting any number approximately equal to the provided value. ...</div><div class='long'><p>This method returns a <em>placeholder</em>, denoting any number approximately equal to the provided value.\nSuch placeholder can be used in various comparison assertions, like is, isDeeply,\n<a href=\"#!/api/Siesta.Test.BDD.Expectation-method-toBe\" rel=\"Siesta.Test.BDD.Expectation-method-toBe\" class=\"docClass\">expect().toBe()</a>,\n<a href=\"#!/api/Siesta.Test.BDD.Expectation-method-toBe\" rel=\"Siesta.Test.BDD.Expectation-method-toBe\" class=\"docClass\">expect().toEqual()</a> and so on.</p>\n\n<p>For example:</p>\n\n<pre><code>t.is(1, t.anyNumberApprox(1.2, 0.5))\n\nt.expect(1).toBe(t.anyNumberApprox(1.2, 0.5))\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>The approximate value</p>\n</div></li><li><span class='pre'>threshold</span> : Number (optional)<div class='sub-desc'><p>The threshold. If omitted, it is set to 5% from the <code>value</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A placeholder object</p>\n</div></li></ul></div></div></div><div id='method-anyStringLike' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-anyStringLike' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-anyStringLike' class='name expandable'>anyStringLike</a>( <span class='pre'>value</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>This method returns a placeholder, denoting any string that matches provided value. ...</div><div class='long'><p>This method returns a <em>placeholder</em>, denoting any string that matches provided value.\nSuch placeholder can be used in various comparison assertions, like is, isDeeply,\n<a href=\"#!/api/Siesta.Test.BDD.Expectation-method-toBe\" rel=\"Siesta.Test.BDD.Expectation-method-toBe\" class=\"docClass\">expect().toBe()</a>,\n<a href=\"#!/api/Siesta.Test.BDD.Expectation-method-toBe\" rel=\"Siesta.Test.BDD.Expectation-method-toBe\" class=\"docClass\">expect().toEqual()</a> and so on.</p>\n\n<p>For example:</p>\n\n<pre><code>t.is('foo', t.anyStringLike('oo'))\n\nt.expect('bar').toBe(t.anyStringLike(/ar$/))\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : String/RegExp<div class='sub-desc'><p>If given as string will denote a substring a string being checked should contain,\nif given as RegExp instance then string being checked should match this RegExp</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A placeholder object</p>\n</div></li></ul></div></div></div><div id='method-assertTextPresent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-assertTextPresent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-assertTextPresent' class='name expandable'>assertTextPresent</a>( <span class='pre'>text, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the innerText property of the &lt;body&gt; element contains the text passed ...</div><div class='long'><p>Passes if the <code>innerText</code> property of the &lt;body&gt; element contains the text passed</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to match</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-beforeEach' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-beforeEach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-beforeEach' class='name expandable'>beforeEach</a>( <span class='pre'>code, isAsync</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method allows you to execute some \"setup\" code hook before every spec (\"it\" block) of the current test. ...</div><div class='long'><p>This method allows you to execute some \"setup\" code hook before every spec (\"it\" block) of the current test.\nSuch hooks are <strong>not</strong> executed for the \"describe\" blocks and sub-tests generated with\nthe <a href=\"#!/api/Siesta.Test-method-getSubTest\" rel=\"Siesta.Test-method-getSubTest\" class=\"docClass\">getSubTest</a> method.</p>\n\n<p>Note, that specs can be nested and all <code>beforeEach</code> hooks are executed in order, starting from the outer-most one.</p>\n\n<p>The 1st argument of the hook function is always the test instance being launched.</p>\n\n<p>If the hook function is async (<code>async () =&gt; {}</code>) Siesta will \"await\" until it completes.</p>\n\n<p>If hook is declared with 2 arguments - it is supposed to be asynchronous (you can also force the asynchronous\nmode with the <code>isAsync</code> argument, see below). The completion callback will be provided as the 2nd argument for the hook.</p>\n\n<p>This method can be called several times, providing several \"hook\" functions.</p>\n\n<p>For example:</p>\n\n<pre><code>StartTest(function (t) {\n    var baz     = 0\n\n    t.beforeEach(function (t) {\n        // the `t` instance here is the \"t\" instance from the \"it\" block below\n        baz     = 0\n    })\n\n    t.it(\"This feature should work\", function (t) {\n        t.expect(myFunction(baz++)).toEqual('someResult')\n    })\n})\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>A function to execute before every spec</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>t</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>A test instance being launched</p>\n</div></li><li><span class='pre'>next</span> : Function<div class='sub-desc'><p>A callback to call when the <code>beforeEach</code> method completes. This argument is only provided\nwhen hook function is declared with 2 arguments (or the <code>isAsync</code> argument is passed as <code>true</code>)</p>\n</div></li></ul></div></li><li><span class='pre'>isAsync</span> : Boolean<div class='sub-desc'><p>When passed as <code>true</code> this argument makes the <code>beforeEach</code> method asynchronous. In this case,\nthe <code>code</code> function will receive an additional callback argument, which should be called once the method has completed its work.</p>\n\n<p>Note, that <code>beforeEach</code> method should complete within defaultTimeout time, otherwise\nfailing assertion will be added to the test.</p>\n\n<p>Example of asynchronous hook:</p>\n\n<pre><code>StartTest(function (t) {\n    var baz     = 0\n    var delay = (time) =&gt; new Promise(resolve =&gt; setTimeout(resolve, time))\n\n    // asynchronous hook function\n    t.beforeEach(async t =&gt; {\n        await delay(100)\n        baz     = 0\n    })\n\n    // asynchronous setup code\n    t.beforeEach(function (t, next) {\n\n        // `beforeEach` will complete in 100ms\n        setTimeout(function () {\n            baz     = 0\n            next()\n        }, 100)\n    })\n\n    t.describe(\"This feature should work\", function (t) {\n        t.expect(myFunction(baz++)).toEqual('someResult')\n    })\n})\n</code></pre>\n</div></li></ul></div></div></div><div id='method-beginAsync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-beginAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-beginAsync' class='name expandable'>beginAsync</a>( <span class='pre'>time, errback</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>This method starts the \"asynchronous frame\". ...</div><div class='long'><p>This method starts the \"asynchronous frame\". The test will wait for all asynchronous frames to complete before it will finalize.\nThe frame should be finished with the <a href=\"#!/api/Siesta.Test-method-endAsync\" rel=\"Siesta.Test-method-endAsync\" class=\"docClass\">endAsync</a> call within the provided <code>time</code>, otherwise a failure will be reported.</p>\n\n<p>For example:</p>\n\n<pre><code> var async = t.beginAsync()\n\n Ext.require('Some.Class', function () {\n\n     t.ok(Some.Class, 'Some class was loaded')\n\n     t.endAsync(async)\n })\n</code></pre>\n\n<p>Additionally, if you return a <code>Promise</code> instance from the test function itself, Siesta will wait until that promise is resolved before finalizing the test.\nIn modern browsers, this allows us to use <code>async/await</code> functions:</p>\n\n<pre><code> StartTest(t =&gt; {\n    let someAsyncOperation = () =&gt; new Promise((resolve, reject) =&gt; {\n        setTimeout(() =&gt; resolve(true), 1000)\n    })\n\n    t.it('Doing async stuff', async t =&gt; {\n        let res = await someAsyncOperation()\n\n        t.ok(res, \"Async stuff finished correctly\")\n    })\n})\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>time</span> : Number<div class='sub-desc'><p>The maximum time (in ms) to wait until force the finalization of this async frame. Optional. Default time is 15000 ms.</p>\n</div></li><li><span class='pre'>errback</span> : Function<div class='sub-desc'><p>Optional. The function to call in case the call to <a href=\"#!/api/Siesta.Test-method-endAsync\" rel=\"Siesta.Test-method-endAsync\" class=\"docClass\">endAsync</a> was not detected withing <code>time</code>. If function\nwill return any \"truthy\" value, the failure will not be reported (you can report own failure with this errback).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The frame object, which can be used in <a href=\"#!/api/Siesta.Test-method-endAsync\" rel=\"Siesta.Test-method-endAsync\" class=\"docClass\">endAsync</a> call</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-chain' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-chain' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-chain' class='name expandable'>chain</a>( <span class='pre'>step1, step2, stepN</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method accepts a variable number of steps, either as individual arguments or as a single array containing them. ...</div><div class='long'><p>This method accepts a variable number of steps, either as individual arguments or as a single array containing them. Steps and arrays\nof steps are handled just fine, and any step-arrays passed will be flattened. Each step should be either a function or configuration\nobject for <a href=\"#!/api/Siesta.Test.Action\" rel=\"Siesta.Test.Action\" class=\"docClass\">test actions</a>. These functions / actions will be executed in order.</p>\n\n<p>1) For a function step, it will receive a callback as the 1st argument, to call when the step is completed.\nAs the 2nd and further arguments, the step function will receive the arguments passed to the previous callback.</p>\n\n<p>If a function step returns a promise, it should not call the callback, but instead Siesta will wait until the promise returned is\nresolved / rejected. This plays nicely with the <code>async/await</code> functions:</p>\n\n<pre><code>let someAsyncOperation =\n    t =&gt; new Promise((resolve, reject) =&gt; {\n        setTimeout(() =&gt; { resolve(\"someValue\") }, 300)\n    })\n\nt.it('Doing async stuff', t =&gt; {\n    t.chain(\n        // function step, that returns a promise (sugared with async/await)\n        async () =&gt; {\n            return await someAsyncOperation(t)\n        },\n        // desugared version\n        function (next, result) {\n            return someAsyncOperation(t)\n        }\n    )\n})\n</code></pre>\n\n<p>The last step will receive a no-op callback, which can be ignored or still called. <strong>Note</strong>, that last step is assumed to\ncomplete synchronously! If you need to launch some asynchronous process in the last step, you may need to add another empty function step\nto the end of the chain.</p>\n\n<p>2) For <code><a href=\"#!/api/Siesta.Test.Action\" rel=\"Siesta.Test.Action\" class=\"docClass\">Siesta.Test.Action</a></code> objects, the callback will be called by the action class automatically,\nthere's no need to provide any callback manually. The configuration object should contain an \"action\" property, specifying the action class\nalong with other config options depending on the action class. For brevity, instead of using the \"action\" property, the configuration\nobject can contain the property corresponding to the action name itself, with the action's target (or even a test method with arguments).\nSee the following examples and also refer to the documentation of the action classes.</p>\n\n<p>If the configuration object will contain a <code>desc</code> property, a passing assertion with its value will be added to the test, after this step has completed.</p>\n\n<p>3) If a step is a sub test instance, created with getSubTest method, then the step will launch it.</p>\n\n<p>It's better to see how it works in action. For example, when using using only functions:</p>\n\n<pre><code>t.chain(\n    // function receives a callback as 1st argument\n    function (next) {\n        // we pass that callback to the \"click\" method\n        t.click(buttonEl, next)\n    },\n    function (next) {\n        t.type(fieldEl, 'Something', next)\n    },\n    function (next) {\n        t.is(fieldEl.value == 'Something', 'Correct value in the field')\n\n        // call the callback with some arguments\n        next('foo', 'bar')\n    },\n    // those arguments are now available as arguments of next step\n    function (next, value1, value2) {\n        t.is(value1, 'foo', 'The arguments for the callback are translated to the arguments of the step')\n        t.is(value2, 'bar', 'The arguments for the callback are translated to the arguments of the step')\n    }\n)\n</code></pre>\n\n<p>The same example, using action configuration objects for first 2 steps. For the list of available actions\nplease refer to the classes in the <code><a href=\"#!/api/Siesta.Test.Action\" rel=\"Siesta.Test.Action\" class=\"docClass\">Siesta.Test.Action</a></code> namespace.</p>\n\n<pre><code>t.chain(\n    {\n        action      : 'click',\n        target      : buttonEl,\n        desc        : \"Clicked on the button\"\n    },\n    // or\n    {\n        click       : buttonEl,\n        desc        : \"Clicked on the button\"\n    },\n\n    {\n        action      : 'type',\n        target      : fieldEl,\n        text        : 'Something',\n        desc        : \"Typed in the field\"\n    },\n    // or\n    {\n        type        : 'Something',\n        target      : fieldEl,\n        desc        : \"Typed in the field\"\n    },\n\n    {\n        waitFor     : 'Selector',\n        args        : '.selector'\n    }\n    // or, using <a href=\"#!/api/Siesta.Test.Action.MethodCall\" rel=\"Siesta.Test.Action.MethodCall\" class=\"docClass\">Siesta.Test.Action.MethodCall</a> notation:\n    {\n        waitForSelector : '.selector'\n    }\n\n    function (next) {\n        t.is(fieldEl.value == 'Something', 'Correct value in the field')\n\n        next('foo', 'bar')\n    },\n    ...\n)\n</code></pre>\n\n<p>Please note, that by default, each step is expected to complete within the <a href=\"#!/api/Siesta.Project-cfg-defaultTimeout\" rel=\"Siesta.Project-cfg-defaultTimeout\" class=\"docClass\">Siesta.Project.defaultTimeout</a> time.\nYou can change this with the <code>timeout</code> property of the step configuration object, allowing some steps to last longer.\nSteps with sub-tests are expected to complete within <a href=\"#!/api/Siesta.Project-cfg-subTestTimeout\" rel=\"Siesta.Project-cfg-subTestTimeout\" class=\"docClass\">Siesta.Project.subTestTimeout</a>.</p>\n\n<p>In a special case, <code>action</code> property of the step configuration object can be a function. In this case you can also\nprovide a <code>timeout</code> property, otherwise this case is identical to using functions:</p>\n\n<pre><code>t.chain(\n    {\n        action      : function (next) { ... },\n        // allow 50s for the function to call \"next\" before step will be considered timed-out\n        timeout     : 50000\n    },\n    ...\n)\n</code></pre>\n\n<p> <strong>Tip</strong>:</p>\n\n<p> If a step is presented with a <code>null</code> or <code>undefined</code> value it will be ignored. Additionally, a step can be\n an array of steps - all arrays passed to t.chain will be flattened.</p>\n\n<p> These tips allows us to implement conditional steps processing, like this:</p>\n\n<pre><code>var el1IsInDom          = t.$('.some-class1')[ 0 ]\nvar el2IsInDom          = t.$('.some-class2')[ 0 ]\n\nt.chain(\n    { click : '.some-other-el' },\n\n    el1IsInDom ? [\n        { click : el1IsInDom },\n\n        el2IsInDom ? [\n            { click : el1IsInDom }\n        ] : null,\n    ] : null,\n\n    ...\n)\n</code></pre>\n\n<p> See also : <a href=\"#!/api/Siesta.Test.More-method-chainForArray\" rel=\"Siesta.Test.More-method-chainForArray\" class=\"docClass\">chainForArray</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>step1</span> : Function/Object/Array<div class='sub-desc'><p>The function to execute or action configuration, or an array of steps</p>\n</div></li><li><span class='pre'>step2</span> : Function/Object<div class='sub-desc'><p>The function to execute or action configuration</p>\n</div></li><li><span class='pre'>stepN</span> : Function/Object<div class='sub-desc'><p>The function to execute or action configuration</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-chainForArray' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-chainForArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-chainForArray' class='name expandable'>chainForArray</a>( <span class='pre'>array, generator, [callback]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is a wrapper around the chain method, which allows you to run the chain over the steps, generated from the eleme...</div><div class='long'><p>This is a wrapper around the <a href=\"#!/api/Siesta.Test.More-method-chain\" rel=\"Siesta.Test.More-method-chain\" class=\"docClass\">chain</a> method, which allows you to run the chain over the steps, generated from the elements\nof some array. For example, if in some step of outer chain, we need to click the elements with ids, given as the array, we can do:</p>\n\n<pre><code>function (next) {\n    var ids     = [ 'button-1', 'button-2', 'button-3' ]\n\n    t.chainForArray(ids, function (elId) {\n        return { click : '#' + elId }\n    }, next)\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>An array with arbitrary elements</p>\n</div></li><li><span class='pre'>generator</span> : Function<div class='sub-desc'><p>A function, which will be called for every element of the <code>array</code>. It should return\na chain step, generated from that element. This function can return an array of steps as well. If generator will return <code>null</code> or\n<code>undefined</code> nothing will be added to the chain.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : Function<div class='sub-desc'><p>An element of the <code>array</code></p>\n</div></li><li><span class='pre'>index</span> : Function<div class='sub-desc'><p>An index of the element</p>\n</div></li></ul></div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call, once the chain is completed.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-clearTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-clearTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-clearTimeout' class='name expandable'>clearTimeout</a>( <span class='pre'>timeoutId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will just call the clearTimeout method from the scope of the test page. ...</div><div class='long'><p>This method will just call the <code>clearTimeout</code> method from the scope of the test page.</p>\n\n<p>Usually you don't need to use it - you can just call <code>clearTimeout</code>, but if your test scripts resides in the\nseparate context, you need to use this method for <code>clearTimeout</code> functionality. See documentation for enablePageRedirect\noption and <a href=\"#!/guide/cross_page_testing\">Cross page testing</a> guide.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timeoutId</span> : Number<div class='sub-desc'><p>The id of the timeout, recevied from the <a href=\"#!/api/Siesta.Test.Browser-method-setTimeout\" rel=\"Siesta.Test.Browser-method-setTimeout\" class=\"docClass\">setTimeout</a> call</p>\n</div></li></ul></div></div></div><div id='method-click' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-click' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-click' class='name expandable'>click</a>( <span class='pre'>[el], [callback], [scope], [options], [offset]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a mouse click in the center of the specified DOM element,\nor at current cursor position if ...</div><div class='long'><p>This method will simulate a mouse click in the center of the specified DOM element,\nor at current cursor position if no target is provided.</p>\n\n<p>Note, that it will first calculate the central point of the specified element and then\nwill pick the top-most DOM element from that point. For example, if you will provide a grid row as the <code>el</code>,\nthen click will happen on top of the central cell, and then will bubble to the row itself.\nIn most cases this is the desired behavior.</p>\n\n<p>Example:</p>\n\n<pre><code> t.click(t.getFirstRow(grid), function () { ... })\n</code></pre>\n\n<p>The 1st argument for this method can be omitted. In this case, Siesta will use the current cursor position:</p>\n\n<pre><code> t.click(function () { ... })\n</code></pre>\n\n<p>This method returns a <code>Promise</code> which is resolved once the click has completed:</p>\n\n<pre><code> t.click('#someEl').then(function () {\n     return t.click('#anotherEl')\n }).then(function () {\n     return t.click('#yetAnotherEl')\n })\n</code></pre>\n\n<p>See also <a href=\"#!/api/Siesta.Test-method-chain\" rel=\"Siesta.Test-method-chain\" class=\"docClass\">chain</a> method for slimer chaining notation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> (optional)<div class='sub-desc'><p>One of the <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> values to convert to DOM element</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call after the click</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any options to use for the simulated DOM event</p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"]\nto click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the click has completed</p>\n</div></li></ul></div></div></div><div id='method-clickAll' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-clickAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-clickAll' class='name expandable'>clickAll</a>( <span class='pre'>elements, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method accepts an array of the DOM elements and performs a mouse click on them, in order. ...</div><div class='long'><p>This method accepts an array of the DOM elements and performs a mouse click on them, in order. After that, it calls the provided callback:</p>\n\n<pre><code class=\"javascript\">t.clickAll([ el1, el2 ], function () {\n    ...\n})\n\nthe elements can be also provided inline, w/o wrapping array:\n\nt.clickAll(el1, el2, function () {\n    ...\n})\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>elements</span> : Array[Siesta.Test.ActionTarget]<div class='sub-desc'><p>The array of elements to click</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The function to call after clicking all elements</p>\n</div></li></ul></div></div></div><div id='method-clickSelector' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-clickSelector' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-clickSelector' class='name expandable'>clickSelector</a>( <span class='pre'>selector, [root], [callback], [scope]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is a wrapper around the clickAll, it performs a click on the every element found by the DOM query. ...</div><div class='long'><p>This method is a wrapper around the <a href=\"#!/api/Siesta.Test.Element-method-clickAll\" rel=\"Siesta.Test.Element-method-clickAll\" class=\"docClass\">clickAll</a>, it performs a click on the every element found by the DOM query.</p>\n\n<p>You can specify the optional <code>root</code> element to start the query from:</p>\n\n<pre><code> t.clickSelector('.my-grid .x-grid-row', someEl, function () {})\n</code></pre>\n\n<p>or omit it (query will start from the document):</p>\n\n<pre><code> t.clickSelector('.my-grid .x-grid-row', function () {})\n</code></pre>\n\n<p>The provided callback will receive an array with DOM elements - result of query.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The selector/xpath query</p>\n</div></li><li><span class='pre'>root</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> (optional)<div class='sub-desc'><p>The root of the query, defaults to the <code>document</code>. You can omit this parameter.</p>\n<p>Defaults to: <code>document</code></p></div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-compareObjects' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Util.Role.CanCompareObjects' rel='Siesta.Util.Role.CanCompareObjects' class='defined-in docClass'>Siesta.Util.Role.CanCompareObjects</a><br/><a href='source/CanCompareObjects.html#Siesta-Util-Role-CanCompareObjects-method-compareObjects' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Util.Role.CanCompareObjects-method-compareObjects' class='name expandable'>compareObjects</a>( <span class='pre'>obj1, obj2, strict, onlyPrimitives, asObjects</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This method performs a deep comparison of the passed JavaScript objects. ...</div><div class='long'><p>This method performs a deep comparison of the passed JavaScript objects. Objects must not contain cyclic references.\nSupported objects are: Object, Array, Function, RegExp, Date, Map (the latter only for keys of primitive values - strings, numbers and browser >= MS Edge).\nWhen comparing Maps, the order of insertion does not matter.</p>\n\n<p>You can use this method in your own assertions, since it does not create an actual assertion in the test results,\nbut rather just returns a boolean value with comparison result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj1</span> : Mixed<div class='sub-desc'><p>The 1st object to compare</p>\n</div></li><li><span class='pre'>obj2</span> : Mixed<div class='sub-desc'><p>The 2nd object to compare</p>\n</div></li><li><span class='pre'>strict</span> : Boolean<div class='sub-desc'><p>When passed the <code>true</code> value, the comparison of the primitive values will be performed with the\n<code>===</code> operator (so [ 1 ] and [ \"1\" ] object will be different). Additionally, when this flag is set to <code>true</code>, then\nwhen comparing Function, RegExp and Date instances, additional check that objects contains the same set of own properties (\"hasOwnProperty\")\nwill be performed.</p>\n</div></li><li><span class='pre'>onlyPrimitives</span> : Boolean<div class='sub-desc'><p>When set to <code>true</code>, the function will not recurse into composite objects (like [] or {}) and will just report that\nobjects are different. Use this mode when you are only interested in comparison of primitive values (numbers, strings, etc).</p>\n</div></li><li><span class='pre'>asObjects</span> : Boolean<div class='sub-desc'><p>When set to <code>true</code>, the function will compare various special Object instances, like Functions, RegExp etc,\nby comparison of their properties only and not taking the anything else into account.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if the passed objects are equal</p>\n</div></li></ul></div></div></div><div id='method-contentLike' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-contentLike' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-contentLike' class='name expandable'>contentLike</a>( <span class='pre'>el, text, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the innerHTML of the passed element contains the text passed ...</div><div class='long'><p>Passes if the innerHTML of the passed element contains the text passed</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to match</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-contentNotLike' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-contentNotLike' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-contentNotLike' class='name expandable'>contentNotLike</a>( <span class='pre'>el, text, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the innerHTML of the passed element does not contain the text passed ...</div><div class='long'><p>Passes if the innerHTML of the passed element does not contain the text passed</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to match</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-createSpy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-createSpy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-createSpy' class='name expandable'>createSpy</a>( <span class='pre'>[spyName]</span> ) : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>This method create a standalone spy function, which tracks all calls to it. ...</div><div class='long'><p>This method create a standalone spy function, which tracks all calls to it. Tracking is done using the associated\nspy instance, which is available as <code>and</code> property. One can use the <a href=\"#!/api/Siesta.Test.BDD.Spy\" rel=\"Siesta.Test.BDD.Spy\" class=\"docClass\">Siesta.Test.BDD.Spy</a> class API to\nverify the calls to the spy function.</p>\n\n<p>Example:</p>\n\n<pre><code>var spyFunc     = t.createSpy('onadd listener')\n\nmyObservable.addEventListener('add', spyFunc)\n\n// do something that triggers the `add` event on the `myObservable`\n\nt.expect(spyFunc).toHaveBeenCalled()\n\nt.expect(spyFunc.calls.argsFor(1)).toEqual([ 'Arg1', 'Arg2' ])\n</code></pre>\n\n<p>See also: <a href=\"#!/api/Siesta.Test.BDD-method-spyOn\" rel=\"Siesta.Test.BDD-method-spyOn\" class=\"docClass\">spyOn</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>spyName</span> : String (optional)<div class='sub-desc'><p>A name of the spy for debugging purposes</p>\n<p>Defaults to: <code>&#39;James Bond&#39;</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>Created function. The associated spy instance is assigned to it as the <code>and</code> property</p>\n</div></li></ul></div></div></div><div id='method-createSpyObj' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-createSpyObj' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-createSpyObj' class='name expandable'>createSpyObj</a>( <span class='pre'>spyName, properties</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>This method creates an object, which properties are spy functions. ...</div><div class='long'><p>This method creates an object, which properties are spy functions. Such object can later be used as a mockup.</p>\n\n<p>This method can be called with one argument only, which should be an array of properties.</p>\n\n<p>Example:</p>\n\n<pre><code>var mockup      = t.createSpyObj('encoder-mockup', [ 'encode', 'decode' ])\n// or just\nvar mockup      = t.createSpyObj([ 'encode', 'decode' ])\n\nmockup.encode('string')\nmockup.decode('string')\n\nt.expect(mockup.encode).toHaveBeenCalled()\n</code></pre>\n\n<p>See also: <a href=\"#!/api/Siesta.Test.BDD-method-createSpy\" rel=\"Siesta.Test.BDD-method-createSpy\" class=\"docClass\">createSpy</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>spyName</span> : String<div class='sub-desc'><p>A name of the spy object. Can be omitted.</p>\n</div></li><li><span class='pre'>properties</span> : Array[String]<div class='sub-desc'><p>An array of the property names. For each property name a spy function will be created.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A mockup object</p>\n</div></li></ul></div></div></div><div id='method-ddescribe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-ddescribe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-ddescribe' class='name expandable'>ddescribe</a>( <span class='pre'>name, code, [timeout]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is an \"exclusive\" version of the regular describe suite. ...</div><div class='long'><p>This is an \"exclusive\" version of the regular <a href=\"#!/api/Siesta.Test.BDD-method-describe\" rel=\"Siesta.Test.BDD-method-describe\" class=\"docClass\">describe</a> suite. When such suites presents in some test file,\nthe other regular suites at the same level will not be executed, only \"exclusive\" ones.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name or description of the suite</p>\n</div></li><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>The code function for this suite. It will receive a test instance as the first argument which should be used for all assertion methods.</p>\n</div></li><li><span class='pre'>timeout</span> : Number (optional)<div class='sub-desc'><p>A maximum duration for this suite. If not provided <a href=\"#!/api/Siesta.Project-cfg-subTestTimeout\" rel=\"Siesta.Project-cfg-subTestTimeout\" class=\"docClass\">Siesta.Project.subTestTimeout</a> value is used.</p>\n</div></li></ul></div></div></div><div id='method-describe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-describe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-describe' class='name expandable'>describe</a>( <span class='pre'>name, code, [timeout]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method starts a sub test with suite (in BDD terms). ...</div><div class='long'><p>This method starts a sub test with <em>suite</em> (in BDD terms). Such suite consists from one or more <em>specs</em> (see method <a href=\"#!/api/Siesta.Test.BDD-method-it\" rel=\"Siesta.Test.BDD-method-it\" class=\"docClass\">it</a>} or other suites.\nThe number of nesting levels is not limited. All suites of the same nesting level are executed sequentially.</p>\n\n<p>For example:</p>\n\n<pre><code>t.describe('A product', function (t) {\n\n    t.it('should have feature X', function (t) {\n        ...\n    })\n\n    t.describe('feature X', function (t) {\n        t.it('should be cool', function (t) {\n            ...\n        })\n    })\n})\n</code></pre>\n\n<p>See also <a href=\"#!/api/Siesta.Test.BDD-method-beforeEach\" rel=\"Siesta.Test.BDD-method-beforeEach\" class=\"docClass\">beforeEach</a>, <a href=\"#!/api/Siesta.Test.BDD-method-afterEach\" rel=\"Siesta.Test.BDD-method-afterEach\" class=\"docClass\">afterEach</a>, <a href=\"#!/api/Siesta.Test.BDD-method-xdescribe\" rel=\"Siesta.Test.BDD-method-xdescribe\" class=\"docClass\">xdescribe</a>, <a href=\"#!/api/Siesta.Test.BDD-method-ddescribe\" rel=\"Siesta.Test.BDD-method-ddescribe\" class=\"docClass\">ddescribe</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name or description of the suite</p>\n</div></li><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>The code function for this suite. It will receive a test instance as the first argument which should be used for all assertion methods.</p>\n</div></li><li><span class='pre'>timeout</span> : Number (optional)<div class='sub-desc'><p>A maximum duration for this suite. If not provided <a href=\"#!/api/Siesta.Project-cfg-subTestTimeout\" rel=\"Siesta.Project-cfg-subTestTimeout\" class=\"docClass\">Siesta.Project.subTestTimeout</a> value is used.</p>\n</div></li></ul></div></div></div><div id='method-diag' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-diag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-diag' class='name expandable'>diag</a>( <span class='pre'>desc</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method output the diagnostic message. ...</div><div class='long'><p>This method output the diagnostic message.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The text of diagnostic message</p>\n</div></li></ul></div></div></div><div id='method-done' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-done' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-done' class='name expandable'>done</a>( <span class='pre'>delay</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method indicates that the test has reached the expected point of its completion and no more assertions are planned. ...</div><div class='long'><p>This method indicates that the test has reached the expected point of its completion and no more assertions are planned.\nAdding assertions after the call to <code>done</code> will be considered as a failure.</p>\n\n<p>This method <strong>does not</strong> stop the execution of the test. For that, see the <a href=\"#!/api/Siesta.Test-method-exit\" rel=\"Siesta.Test-method-exit\" class=\"docClass\">exit</a> method.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Project-cfg-needDone\" rel=\"Siesta.Project-cfg-needDone\" class=\"docClass\">Siesta.Project.needDone</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delay</span> : Number<div class='sub-desc'><p>Optional. When provided, the test will not complete right away, but will wait for <code>delay</code> milliseconds for additional assertions.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-doubleClick' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-doubleClick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-doubleClick' class='name expandable'>doubleClick</a>( <span class='pre'>[el], [callback], [scope], [options], [offset]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a mouse double click in the center of the specified DOM/Ext element,\nor at current cursor p...</div><div class='long'><p>This method will simulate a mouse double click in the center of the specified DOM/Ext element,\nor at current cursor position if no target is provided.</p>\n\n<p>Note, that it will first calculate the centeral point of the specified element and then\nwill pick the top-most DOM element from that point. For example, if you will provide a grid row as the <code>el</code>,\nthen click will happen on top of the central cell, and then will bubble to the row itself.\nIn most cases this is the desired behavior.</p>\n\n<p>Example:</p>\n\n<pre><code> t.doubleClick(t.getFirstRow(grid), function () { ... })\n</code></pre>\n\n<p>The 1st argument for this method can be omitted. In this case, Siesta will use the current cursor position:</p>\n\n<pre><code> t.doubleClick(function () { ... })\n</code></pre>\n\n<p>This method returns a <code>Promise</code> which is resolved once the double click has completed</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> (optional)<div class='sub-desc'><p>One of the <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> values to convert to DOM element</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call after click.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any options to use for the simulated DOM event</p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"]\nto click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the double click has completed</p>\n</div></li></ul></div></div></div><div id='method-doubleTap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Touch' rel='Siesta.Test.UserAgent.Touch' class='defined-in docClass'>Siesta.Test.UserAgent.Touch</a><br/><a href='source/Touch.html#Siesta-Test-UserAgent-Touch-method-doubleTap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Touch-method-doubleTap' class='name expandable'>doubleTap</a>( <span class='pre'>target, [callback], [scope], [options], [offset]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method double taps the passed target, which can be of several different types, see Siesta.Test.ActionTarget ...</div><div class='long'><p>This method double taps the passed target, which can be of several different types, see <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>Target for this action</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call after action.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any optionsthat will be used when simulating the event. For information about possible\nconfig options, please see: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent\">https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent</a></p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul></div></div></div><div id='method-dragBy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-dragBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-dragBy' class='name expandable'>dragBy</a>( <span class='pre'>source, delta, [callback], [scope], options, dragOnly, [offset]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a drag and drop operation from a point (or DOM element) and move by a delta. ...</div><div class='long'><p>This method will simulate a drag and drop operation from a point (or DOM element) and move by a delta.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p><a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> value as the drag starting point</p>\n</div></li><li><span class='pre'>delta</span> : Array<div class='sub-desc'><p>The amount to drag from the source coordinate, expressed as [x,y]. E.g. [50, 10] will drag 50px to the right and 10px down.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the drag operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li><li><span class='pre'>dragOnly</span> : Boolean<div class='sub-desc'><p>true to skip the mouseup and not finish the drop operation.</p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-dragTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-dragTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-dragTo' class='name expandable'>dragTo</a>( <span class='pre'>source, target, [callback], [scope], options, dragOnly, [sourceOffset], [targetOffset]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a drag and drop operation between either two points or two DOM elements. ...</div><div class='long'><p>This method will simulate a drag and drop operation between either two points or two DOM elements.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p><a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> value for the drag starting point</p>\n</div></li><li><span class='pre'>target</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p><a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> value for the drag end point</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the drag operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li><li><span class='pre'>dragOnly</span> : Boolean<div class='sub-desc'><p>true to skip the mouseup and not finish the drop operation.</p>\n</div></li><li><span class='pre'>sourceOffset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the source. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li><li><span class='pre'>targetOffset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-earlySetup' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-earlySetup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-earlySetup' class='name expandable'>earlySetup</a>( <span class='pre'>callback, errback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method can perform any setup code your tests need. ...</div><div class='long'><p>This method can perform any setup code your tests need. It is the earliest point for doing setup, it is called\neven before the iframe of the test is created and started loading. Note, that this means there's no DOM or <code>window</code>\nelement the test can access at this point. Normally, you should use the <a href=\"#!/api/Siesta.Test-method-setup\" rel=\"Siesta.Test-method-setup\" class=\"docClass\">setup</a> method\nfor tests initialization purposes.</p>\n\n<p><strong> IMPORTANT </strong> Make sure you've called the \"SUPER\" <code>earlySetup</code> method, to perform default setup actions. See below for example.</p>\n\n<p>Typical usage for this method can be, for example, to clear the database, before starting to\nload the <a href=\"#!/api/Siesta.Project.Browser-cfg-pageUrl\" rel=\"Siesta.Project.Browser-cfg-pageUrl\" class=\"docClass\">pageUrl</a> link.</p>\n\n<p>This method receives a callback and errback, either of these should be called once the setup has completed (or failed).</p>\n\n<pre><code>Class('My.Test.Class', {\n\n    isa         : <a href=\"#!/api/Siesta.Test.Browser\" rel=\"Siesta.Test.Browser\" class=\"docClass\">Siesta.Test.Browser</a>,\n\n    override : {\n\n        earlySetup : function (callback, errback) {\n            this.SUPER(\n                function () {\n                    Ext.Ajax.request({\n                        url     : 'clear_test_db.php',\n\n                        params  : { ... },\n\n                        success : function () {\n                            callback()\n                        },\n                        failure : function () {\n                            errback('Reseting DB has failed')\n                        }\n                    })\n                },\n                errback\n            )\n        }\n    },\n\n    ....\n})\n</code></pre>\n\n<p>If the setup has failed for some reason, then an errback should be called and a failing assertion will be added to the test\n(though the test will be launched anyway). A text of the failed assertion can be given as the 1st argument for the errback.</p>\n\n<p>Note, that the setup is supposed to be completed within the <a href=\"#!/api/Siesta.Test-cfg-isReadyTimeout\" rel=\"Siesta.Test-cfg-isReadyTimeout\" class=\"docClass\">isReadyTimeout</a> timeout, otherwise it will be\nconsidered failed and the test will be launched with a failed assertion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the setup has completed successfully</p>\n</div></li><li><span class='pre'>errback</span> : Function<div class='sub-desc'><p>A function to call when the setup has completed with an error</p>\n</div></li></ul></div></div></div><div id='method-elementFromPoint' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Browser.Role.CanGetElementFromPoint' rel='Siesta.Test.Browser.Role.CanGetElementFromPoint' class='defined-in docClass'>Siesta.Test.Browser.Role.CanGetElementFromPoint</a><br/><a href='source/CanGetElementFromPoint.html#Siesta-Test-Browser-Role-CanGetElementFromPoint-method-elementFromPoint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser.Role.CanGetElementFromPoint-method-elementFromPoint' class='name expandable'>elementFromPoint</a>( <span class='pre'>x, y, [shallow]</span> ) : HTMLElement<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will return the top-most DOM element at the specified coordinates from the test page. ...</div><div class='long'><p>This method will return the top-most DOM element at the specified coordinates from the test page. If\nthe resulting element is an iframe and <code>shallow</code> argument is not passed as <code>true</code>\nit'll query the iframe for its element from the local point inside it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>The X coordinate, relative to the viewport area (currently visible part of the page)</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>The Y coordinate, relative to the viewport area (currently visible part of the page)</p>\n</div></li><li><span class='pre'>shallow</span> : Boolean (optional)<div class='sub-desc'><p>Pass <code>true</code> to <em>not</em> check the nested iframe if element at original coordinates is an iframe.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement</span><div class='sub-desc'><p>The top-most element at the specified position on the test page</p>\n</div></li></ul></div></div></div><div id='method-elementIsAt' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-elementIsAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-elementIsAt' class='name expandable'>elementIsAt</a>( <span class='pre'>el, xy, allowChildren, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element is found at the supplied xy coordinates. ...</div><div class='long'><p>Passes if the element is found at the supplied xy coordinates.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>xy</span> : Array<div class='sub-desc'><p>The xy coordinate to query.</p>\n</div></li><li><span class='pre'>allowChildren</span> : Boolean<div class='sub-desc'><p>true to also include child nodes. False to strictly check for the passed element.</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-elementIsEmpty' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-elementIsEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-elementIsEmpty' class='name expandable'>elementIsEmpty</a>( <span class='pre'>el, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the passed element has no content (whitespace will be trimmed) ...</div><div class='long'><p>Passes if the passed element has no content (whitespace will be trimmed)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-elementIsInView' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-elementIsInView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-elementIsInView' class='name expandable'>elementIsInView</a>( <span class='pre'>el</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the passed element is inside of the visible viewport ...</div><div class='long'><p>Returns true if the passed element is inside of the visible viewport</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li></ul></div></div></div><div id='method-elementIsNotEmpty' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-elementIsNotEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-elementIsNotEmpty' class='name expandable'>elementIsNotEmpty</a>( <span class='pre'>el, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the passed element has some non-whitespace content ...</div><div class='long'><p>Passes if the passed element has some non-whitespace content</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-elementIsNotTopElement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-elementIsNotTopElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-elementIsNotTopElement' class='name expandable'>elementIsNotTopElement</a>( <span class='pre'>el, allowChildren, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element is not the top element (using its center xy coordinates). ...</div><div class='long'><p>Passes if the element is not the top element (using its center xy coordinates).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to look for.</p>\n</div></li><li><span class='pre'>allowChildren</span> : Boolean<div class='sub-desc'><p>true to also include child nodes. False to strictly check for the passed element.</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-elementIsNotVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-elementIsNotVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-elementIsNotVisible' class='name expandable'>elementIsNotVisible</a>( <span class='pre'>el, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element is not visible. ...</div><div class='long'><p>Passes if the element is not visible.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-elementIsTop' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-elementIsTop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-elementIsTop' class='name expandable'>elementIsTop</a>( <span class='pre'>el, allowChildren, offset</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Utility method which checks if the passed method is the 'top' element at its position. ...</div><div class='long'><p>Utility method which checks if the passed method is the 'top' element at its position. By default, \"top\" element means,\nthat center point of the element is not covered with any other elements. You can also check any other point reachability\nusing the \"offset\" argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to look for.</p>\n</div></li><li><span class='pre'>allowChildren</span> : Boolean<div class='sub-desc'><p>true to also include child nodes. False to strictly check for the passed element.</p>\n</div></li><li><span class='pre'>offset</span> : Array<div class='sub-desc'><p>An array of 2 elements, defining \"x\" and \"y\" offset from the left-top corner of the element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the element is the top element.</p>\n</div></li></ul></div></div></div><div id='method-elementIsTopElement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-elementIsTopElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-elementIsTopElement' class='name expandable'>elementIsTopElement</a>( <span class='pre'>el, allowChildren, [description], strict</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element is the top element (using its center xy coordinates). ...</div><div class='long'><p>Passes if the element is the top element (using its center xy coordinates). \"Top\" element means,\nthat element is not covered with any other elements.</p>\n\n<p>This assertion can be used for example to test, that some element, that appears only when mouse hovers some other element is accessible by user\nwith mouse (which is not always true because of various z-index issues).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to look for.</p>\n</div></li><li><span class='pre'>allowChildren</span> : Boolean<div class='sub-desc'><p>true to also include child nodes. False to strictly check for the passed element.</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li><li><span class='pre'>strict</span> : Boolean<div class='sub-desc'><p>true to check all four corners of the element. False to only check at element center.</p>\n</div></li></ul></div></div></div><div id='method-elementIsVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-elementIsVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-elementIsVisible' class='name expandable'>elementIsVisible</a>( <span class='pre'>el, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element is in the DOM and visible. ...</div><div class='long'><p>Passes if the element is in the DOM and visible.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-endAsync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-endAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-endAsync' class='name expandable'>endAsync</a>( <span class='pre'>frame</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method finalize the \"asynchronous frame\" started with beginAsync. ...</div><div class='long'><p>This method finalize the \"asynchronous frame\" started with <a href=\"#!/api/Siesta.Test-method-beginAsync\" rel=\"Siesta.Test-method-beginAsync\" class=\"docClass\">beginAsync</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frame</span> : Object<div class='sub-desc'><p>The frame to finalize (returned by <a href=\"#!/api/Siesta.Test-method-beginAsync\" rel=\"Siesta.Test-method-beginAsync\" class=\"docClass\">beginAsync</a> method</p>\n</div></li></ul></div></div></div><div id='method-exact' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-exact' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-exact' class='name expandable'>exact</a>( <span class='pre'>got, expected, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the comparison of 1st and 2nd arguments with === operator returns true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the comparison of 1st and 2nd arguments with <code>===</code> operator returns true and fails otherwise.</p>\n\n<p>As a special case, one or both arguments can be instance of Siesta.Test.BDD.Placeholder class, generated with method <a href=\"#!/api/Siesta.Test-method-any\" rel=\"Siesta.Test-method-any\" class=\"docClass\">any</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Mixed<div class='sub-desc'><p>The value \"we have\" - will be shown as \"Got:\" in case of failure</p>\n</div></li><li><span class='pre'>expected</span> : Mixed<div class='sub-desc'><p>The value \"we expect\" - will be shown as \"Need:\" in case of failure</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-exit' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-exit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-exit' class='name expandable'>exit</a>( <span class='pre'>[desc], [annotation]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method stops the execution of the test early. ...</div><div class='long'><p>This method stops the execution of the test early. You can use it if, for example, you already know the status of\ntest (failed) and further actions involves long waitings etc.</p>\n\n<p>This method accepts the same arguments as the <a href=\"#!/api/Siesta.Test-method-fail\" rel=\"Siesta.Test-method-fail\" class=\"docClass\">fail</a> method. If at least the one argument is given,\na failed assertion will be added to the test before the exit.</p>\n\n<p>For example:</p>\n\n<pre><code>    t.chain(\n        function (next) {\n            // do something\n\n            next()\n        },\n        function (next) {\n            if (someCondition)\n                t.exit(\"Failure description\")\n            else\n                next()\n        },\n        { waitFor : function () { ... } }\n    )\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li><li><span class='pre'>annotation</span> : String/Object (optional)<div class='sub-desc'><p>The additional description how exactly this assertion fails. Will be shown with monospace font.</p>\n</div></li></ul></div></div></div><div id='method-expect' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-expect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-expect' class='name expandable'>expect</a>( <span class='pre'>value</span> ) : <a href=\"#!/api/Siesta.Test.BDD.Expectation\" rel=\"Siesta.Test.BDD.Expectation\" class=\"docClass\">Siesta.Test.BDD.Expectation</a><span class=\"signature\"></span></div><div class='description'><div class='short'>This method returns an \"expectation\" instance, which can be used to check various assertions about the passed value. ...</div><div class='long'><p>This method returns an \"expectation\" instance, which can be used to check various assertions about the passed value.</p>\n\n<p><strong>Note</strong>, that every expectation has a special property <code>not</code>, that contains another expectation, but with the negated meaning.</p>\n\n<p>For example:</p>\n\n<pre><code>t.expect(1).toBe(1)\nt.expect(1).not.toBe(2)\n\nt.expect('Foo').toContain('oo')\nt.expect('Foo').not.toContain('bar')\n</code></pre>\n\n<p>Please refer to the documentation of the <a href=\"#!/api/Siesta.Test.BDD.Expectation\" rel=\"Siesta.Test.BDD.Expectation\" class=\"docClass\">Siesta.Test.BDD.Expectation</a> class for the list of available methods.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>Any value, that will be assert about</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Siesta.Test.BDD.Expectation\" rel=\"Siesta.Test.BDD.Expectation\" class=\"docClass\">Siesta.Test.BDD.Expectation</a></span><div class='sub-desc'><p>Expectation instance</p>\n</div></li></ul></div></div></div><div id='method-expectAlertMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-expectAlertMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-expectAlertMessage' class='name expandable'>expectAlertMessage</a>( <span class='pre'>message, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Expects an alert message with the specified text to be shown during the test. ...</div><div class='long'><p>Expects an alert message with the specified text to be shown during the test. If no alert is called,\nor the text doesn't match, a failed assertion will be added.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : String/RegExp<div class='sub-desc'><p>The expected alert message or a regular expression to match</p>\n</div></li><li><span class='pre'>callback</span> : Object<div class='sub-desc'><p>Only used internally when this method is called in a t.chain command</p>\n</div></li></ul></div></div></div><div id='method-expectGlobals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-expectGlobals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-expectGlobals' class='name expandable'>expectGlobals</a>( <span class='pre'>name1, name2, nameN</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method accepts a variable number of names of expected properties in the global scope. ...</div><div class='long'><p>This method accepts a variable number of names of expected properties in the global scope. When verifying the globals with <a href=\"#!/api/Siesta.Test.More-method-verifyGlobals\" rel=\"Siesta.Test.More-method-verifyGlobals\" class=\"docClass\">verifyGlobals</a>\nassertions, the expected gloabls will not be counted as failed assertions.</p>\n\n<p>This method has a synonym with singular name: <code>expectGlobal</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name1</span> : String/RegExp<div class='sub-desc'><p>The name of global property or the regular expression to match several properties</p>\n</div></li><li><span class='pre'>name2</span> : String/RegExp<div class='sub-desc'><p>The name of global property or the regular expression to match several properties</p>\n</div></li><li><span class='pre'>nameN</span> : String/RegExp<div class='sub-desc'><p>The name of global property or the regular expression to match several properties</p>\n</div></li></ul></div></div></div><div id='method-fail' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-fail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-fail' class='name expandable'>fail</a>( <span class='pre'>desc, annotation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method add the failed assertion to this test. ...</div><div class='long'><p>This method add the failed assertion to this test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li><li><span class='pre'>annotation</span> : String/Object<div class='sub-desc'><p>The additional description how exactly this assertion fails. Will be shown with monospace font.</p>\n\n<p>Can be either string or an object with the following properties. In the latter case a string will be constructed from the properties of the object.</p>\n\n<ul>\n<li><code>assertionName</code> - the name of assertion, will be shown in the 1st line, along with originating source line (in FF and Chrome only)</li>\n<li><code>got</code> - an arbitrary JavaScript object, when provided will be shown on the next line</li>\n<li><code>need</code> - an arbitrary JavaScript object, when provided will be shown on the next line</li>\n<li><code>gotDesc</code> - a prompt for \"got\", default value is \"Got\", but can be for example: \"We have\"</li>\n<li><code>needDesc</code> - a prompt for \"need\", default value is \"Need\", but can be for example: \"We need\"</li>\n<li><code>annotation</code> - A text to append on the last line, can contain some additional explanations</li>\n</ul>\n\n\n<p> The \"got\" and \"need\" values will be stringified to the \"not quite JSON\" notation. Notably the points of circular references will be\n marked with <code>[Circular]</code> marks and the values at 4th (and following) level of depth will be marked with triple points: <code>[ [ [ ... ] ] ]</code></p>\n</div></li></ul></div></div></div><div id='method-findCenter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-findCenter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-findCenter' class='name expandable'>findCenter</a>( <span class='pre'>el, [local]</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Utility method which returns the center of a passed element. ...</div><div class='long'><p>Utility method which returns the center of a passed element. The coordinates are by default relative to the\ncontaining document of the element (so for example if the element is inside of the nested iframe, coordinates\nwill be \"local\" to that iframe element). To get coordinates relative to the test iframe (\"global\" coordinates),\npass <code>local</code> as <code>false</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to find the center of.</p>\n</div></li><li><span class='pre'>local</span> : Boolean (optional)<div class='sub-desc'><p>Pass <code>true</code> means coordinates are relative to the containing document. This is the default value.\nPass <code>false</code> to make sure the coordinates are global to the test window.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>The array first element of which is the <code>x</code> coordinate and 2nd - <code>y</code></p>\n</div></li></ul></div></div></div><div id='method-getElementAtCursor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-getElementAtCursor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-getElementAtCursor' class='name expandable'>getElementAtCursor</a>( <span class='pre'></span> ) : HTMLElement<span class=\"signature\"></span></div><div class='description'><div class='short'>This method uses native document.elementFromPoint() and returns the DOM element under the current logical cursor\nposi...</div><div class='long'><p>This method uses native <code>document.elementFromPoint()</code> and returns the DOM element under the current logical cursor\nposition in the test. Note, that this method may work not 100% reliable in IE due to its bugs. In cases\nwhen <code>document.elementFromPoint()</code> can't find any element this method returns the &lt;body&gt; element.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getSelectedText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.TextSelection' rel='Siesta.Test.TextSelection' class='defined-in docClass'>Siesta.Test.TextSelection</a><br/><a href='source/TextSelection.html#Siesta-Test-TextSelection-method-getSelectedText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.TextSelection-method-getSelectedText' class='name expandable'>getSelectedText</a>( <span class='pre'>el</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Utility method which returns the selected text in the passed element or in the document ...</div><div class='long'><p>Utility method which returns the selected text in the passed element or in the document</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The selected text</p>\n</div></li></ul></div></div></div><div id='method-getSubTest' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-getSubTest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-getSubTest' class='name expandable'>getSubTest</a>( <span class='pre'>name, code, [timeout]</span> ) : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new instance of the test class, configured as being a \"sub test\" of the current test. ...</div><div class='long'><p>Returns a new instance of the test class, configured as being a \"sub test\" of the current test.</p>\n\n<p>The number of nesting levels is not limited - ie sub-tests may have own sub-tests.</p>\n\n<p>Note, that this method does not starts the sub test, but only instatiate it. To start the sub test,\nuse the <a href=\"#!/api/Siesta.Test-method-launchSubTest\" rel=\"Siesta.Test-method-launchSubTest\" class=\"docClass\">launchSubTest</a> method or the <a href=\"#!/api/Siesta.Test-method-subTest\" rel=\"Siesta.Test-method-subTest\" class=\"docClass\">subTest</a> helper method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the test. Will be used in the UI, as the parent node name in the assertions tree</p>\n</div></li><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>A function with test code. Will receive a test instance as the 1st argument.</p>\n</div></li><li><span class='pre'>timeout</span> : Number (optional)<div class='sub-desc'><p>A maximum duration (in ms) for this sub test. If test will not complete within this time,\nit will be considered failed. If not provided, the <a href=\"#!/api/Siesta.Project-cfg-subTestTimeout\" rel=\"Siesta.Project-cfg-subTestTimeout\" class=\"docClass\">Siesta.Project.subTestTimeout</a> value is used.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a></span><div class='sub-desc'><p>A sub test instance</p>\n</div></li></ul></div></div></div><div id='method-hasAttributeValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-hasAttributeValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-hasAttributeValue' class='name expandable'>hasAttributeValue</a>( <span class='pre'>el, attribute, value, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the target element has an attribute with the provided value. ...</div><div class='long'><p>Passes if the target element has an attribute with the provided value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>attribute</span> : String<div class='sub-desc'><p>The attribute</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>The value</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-hasCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-hasCls' class='name expandable'>hasCls</a>( <span class='pre'>el, cls, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element has the supplied CSS classname ...</div><div class='long'><p>Passes if the element has the supplied CSS classname</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>cls</span> : String<div class='sub-desc'><p>The class name to check for</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasNotCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-hasNotCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-hasNotCls' class='name expandable'>hasNotCls</a>( <span class='pre'>el, cls, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element does not have the supplied CSS classname ...</div><div class='long'><p>Passes if the element does not have the supplied CSS classname</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>cls</span> : String<div class='sub-desc'><p>The class name to check for</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasNotStyle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-hasNotStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-hasNotStyle' class='name expandable'>hasNotStyle</a>( <span class='pre'>el, property, value, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element does not have the supplied style value ...</div><div class='long'><p>Passes if the element does not have the supplied style value</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>property</span> : String<div class='sub-desc'><p>The style property to check for</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>The style value to check for</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasSameHeight' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-hasSameHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-hasSameHeight' class='name expandable'>hasSameHeight</a>( <span class='pre'>el, referenceEl, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the passed element offsetHeight matches the offsetHeight of the reference element ...</div><div class='long'><p>This assertion passes when the passed element offsetHeight matches the offsetHeight of the reference element</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>referenceEl</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to compare against</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasSameWidth' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-hasSameWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-hasSameWidth' class='name expandable'>hasSameWidth</a>( <span class='pre'>el, referenceEl, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the passed element offsetWidth matches the offsetWidth of the reference element ...</div><div class='long'><p>This assertion passes when the passed element offsetWidth matches the offsetWidth of the reference element</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>referenceEl</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to compare against</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasStyle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-hasStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-hasStyle' class='name expandable'>hasStyle</a>( <span class='pre'>el, property, value, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element has the supplied style value ...</div><div class='long'><p>Passes if the element has the supplied style value</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>property</span> : String<div class='sub-desc'><p>The style property to check for</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>The style value to check for</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-hasValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-hasValue' class='name expandable'>hasValue</a>( <span class='pre'>el, value, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the passed element has the expected value as its \"value\" property (use with SELECT, INPUT type elements). ...</div><div class='long'><p>Passes if the passed element has the expected value as its \"value\" property (use with SELECT, INPUT type elements).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to compare to.</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-iit' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-iit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-iit' class='name expandable'>iit</a>( <span class='pre'>name, code, [timeout]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is an \"exclusive\" version of the regular it spec. ...</div><div class='long'><p>This is an \"exclusive\" version of the regular <a href=\"#!/api/Siesta.Test.BDD-method-it\" rel=\"Siesta.Test.BDD-method-it\" class=\"docClass\">it</a> spec. When such specs presents in some suite,\nthe other regular specs at the same level will not be executed, only \"exclusive\" ones. Note, that even \"regular\" suites (<code>t.describe</code>) sections\nwill be ignored, if they are on the same level with the exclusive <code>iit</code> section.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name or description of the spec</p>\n</div></li><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>The code function for this spec. It will receive a test instance as the first argument which should be used for all assertion methods.</p>\n</div></li><li><span class='pre'>timeout</span> : Number (optional)<div class='sub-desc'><p>A maximum duration for this spec. If not provided <a href=\"#!/api/Siesta.Project-cfg-subTestTimeout\" rel=\"Siesta.Project-cfg-subTestTimeout\" class=\"docClass\">Siesta.Project.subTestTimeout</a> value is used.</p>\n</div></li></ul></div></div></div><div id='method-is' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-is' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-is' class='name expandable'>is</a>( <span class='pre'>got, expected, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the comparison of 1st and 2nd arguments with == operator returns true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the comparison of 1st and 2nd arguments with <code>==</code> operator returns true and fails otherwise.</p>\n\n<p>As a special case, one or both arguments can be <em>placeholders</em>, generated with method <a href=\"#!/api/Siesta.Test-method-any\" rel=\"Siesta.Test-method-any\" class=\"docClass\">any</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Mixed<div class='sub-desc'><p>The value \"we have\" - will be shown as \"Got:\" in case of failure</p>\n</div></li><li><span class='pre'>expected</span> : Mixed<div class='sub-desc'><p>The value \"we expect\" - will be shown as \"Need:\" in case of failure</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isApprox' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isApprox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isApprox' class='name expandable'>isApprox</a>( <span class='pre'>value1, value2, threshold, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion suppose to compare the numeric values. ...</div><div class='long'><p>This assertion suppose to compare the numeric values. It passes when the passed values are approximately the same (the difference\nis withing a threshold). A threshold can be provided explicitly (when assertion is called with 4 arguments),\nor it will be set to 5% from the 1st value (when calling assertion with 3 arguments).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>threshold</span> : Number<div class='sub-desc'><p>The maximum allowed difference between values. This argument can be omitted.</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isArray' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isArray' class='name expandable'>isArray</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, if supplied value is an Array ...</div><div class='long'><p>This assertion passes, if supplied value is an Array</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isBoolean' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isBoolean' class='name expandable'>isBoolean</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, if supplied value is a Boolean. ...</div><div class='long'><p>This assertion passes, if supplied value is a Boolean.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isCalled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-isCalled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-isCalled' class='name expandable'>isCalled</a>( <span class='pre'>fn, host, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes if the function is called at least one time during the test life span. ...</div><div class='long'><p>This assertion passes if the function is called at least one time during the test life span.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the function on the host object (2nd argument)</p>\n</div></li><li><span class='pre'>host</span> : Object<div class='sub-desc'><p>The \"owner\" of the method</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-isCalledNTimes' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-isCalledNTimes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-isCalledNTimes' class='name expandable'>isCalledNTimes</a>( <span class='pre'>fn, host, n, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes if the function is called exactly (n) times during the test life span. ...</div><div class='long'><p>This assertion passes if the function is called exactly (n) times during the test life span.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the function on the host object (2nd argument)</p>\n</div></li><li><span class='pre'>host</span> : Object<div class='sub-desc'><p>The \"owner\" of the method</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The expected number of calls</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-isCalledOnce' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-isCalledOnce' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-isCalledOnce' class='name expandable'>isCalledOnce</a>( <span class='pre'>fn, host, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes if the function is called exactly one time during the test life span. ...</div><div class='long'><p>This assertion passes if the function is called exactly one time during the test life span.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the function on the host object (2nd argument)</p>\n</div></li><li><span class='pre'>host</span> : Object<div class='sub-desc'><p>The \"owner\" of the method</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-isDate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isDate' class='name expandable'>isDate</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, if supplied value is a Date. ...</div><div class='long'><p>This assertion passes, if supplied value is a Date.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isDateEqual' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Date' rel='Siesta.Test.Date' class='defined-in docClass'>Siesta.Test.Date</a><br/><a href='source/Date.html#Siesta-Test-Date-method-isDateEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Date-method-isDateEqual' class='name expandable'>isDateEqual</a>( <span class='pre'>got, expectedDate, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the 2 provided dates are equal and fails otherwise. ...</div><div class='long'><p>This assertion passes when the 2 provided dates are equal and fails otherwise.</p>\n\n<p>It has a synonym: <code>isDateEq</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Date<div class='sub-desc'><p>The 1st date to compare</p>\n</div></li><li><span class='pre'>expectedDate</span> : Date<div class='sub-desc'><p>The 2nd date to compare</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isDeeply' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isDeeply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isDeeply' class='name expandable'>isDeeply</a>( <span class='pre'>obj1, obj2, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when in-depth comparison of 1st and 2nd arguments (which are assumed to be JSON objects) shows ...</div><div class='long'><p>This assertion passes when in-depth comparison of 1st and 2nd arguments (which are assumed to be JSON objects) shows that they are equal.\nComparison is performed with '==' operator, so <code>[ 1 ]</code> and `[ \"1\" ] objects will be equal. The objects should not contain cyclic references.</p>\n\n<p>This method works correctly with the <em>placeholders</em> generated with method any.</p>\n\n<p>This method has a synonym: <code>is_deeply</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj1</span> : Object<div class='sub-desc'><p>The 1st object to compare</p>\n</div></li><li><span class='pre'>obj2</span> : Object<div class='sub-desc'><p>The 2nd object to compare</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isDeeplyStrict' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isDeeplyStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isDeeplyStrict' class='name expandable'>isDeeplyStrict</a>( <span class='pre'>obj1, obj2, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when in-depth comparison of 1st and 2nd arguments (which are assumed to be JSON objects) shows ...</div><div class='long'><p>This assertion passes when in-depth comparison of 1st and 2nd arguments (which are assumed to be JSON objects) shows that they are equal.\nComparison is performed with '===' operator, so <code>[ 1 ]</code> and `[ \"1\" ] objects will be different. The objects should not contain cyclic references.</p>\n\n<p>This method works correctly with the <em>placeholders</em> generated with method any.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj1</span> : Object<div class='sub-desc'><p>The 1st object to compare</p>\n</div></li><li><span class='pre'>obj2</span> : Object<div class='sub-desc'><p>The 2nd object to compare</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isElementVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-isElementVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-isElementVisible' class='name expandable'>isElementVisible</a>( <span class='pre'>el</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the element is visible, checking jQuery :visible selector + style visibility value. ...</div><div class='long'><p>Returns true if the element is visible, checking jQuery :visible selector + style visibility value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isFunction' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isFunction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isFunction' class='name expandable'>isFunction</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, if supplied value is a Function. ...</div><div class='long'><p>This assertion passes, if supplied value is a Function.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isGreater' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isGreater' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isGreater' class='name expandable'>isGreater</a>( <span class='pre'>value1, value2, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, when the comparison of 1st with 2nd, using &gt; operator will return true and fails otherwise. ...</div><div class='long'><p>This assertion passes, when the comparison of 1st with 2nd, using <code>&gt;</code> operator will return <code>true</code> and fails otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number/Date<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number/Date<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isGreaterOrEqual' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isGreaterOrEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isGreaterOrEqual' class='name expandable'>isGreaterOrEqual</a>( <span class='pre'>value1, value2, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, when the comparison of 1st with 2nd, using &gt;= operator will return true and fails otherwise. ...</div><div class='long'><p>This assertion passes, when the comparison of 1st with 2nd, using <code>&gt;=</code> operator will return <code>true</code> and fails otherwise.</p>\n\n<p>It has a synonym - <code>isGE</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number/Date<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number/Date<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isInView' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-isInView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-isInView' class='name expandable'>isInView</a>( <span class='pre'>el, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the passed element is inside of the visible viewport ...</div><div class='long'><p>Passes if the passed element is inside of the visible viewport</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-isInstanceOf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isInstanceOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isInstanceOf' class='name expandable'>isInstanceOf</a>( <span class='pre'>value, className, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, when the supplied value is the instance of the className. ...</div><div class='long'><p>This assertion passes, when the supplied <code>value</code> is the instance of the <code>className</code>. The check is performed with\n<code>instanceof</code> operator. The <code>className</code> parameter can be supplied as class constructor or as string, representing the class\nname. In the latter case the <code>class</code> will eval'ed to receive the class constructor.</p>\n\n<p>This method has synonyms: <code>isaOk</code>, <code>isa_ok</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check for 'isa' relationship</p>\n</div></li><li><span class='pre'>className</span> : Class/String<div class='sub-desc'><p>The class to check for 'isa' relationship with <code>value</code></p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isLess' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isLess' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isLess' class='name expandable'>isLess</a>( <span class='pre'>value1, value2, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, when the comparison of 1st with 2nd, using &lt; operator will return true and fails otherwise. ...</div><div class='long'><p>This assertion passes, when the comparison of 1st with 2nd, using <code>&lt;</code> operator will return <code>true</code> and fails otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number/Date<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number/Date<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isLessOrEqual' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isLessOrEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isLessOrEqual' class='name expandable'>isLessOrEqual</a>( <span class='pre'>value1, value2, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, when the comparison of 1st with 2nd, using &lt;= operator will return true and fails otherwise. ...</div><div class='long'><p>This assertion passes, when the comparison of 1st with 2nd, using <code>&lt;=</code> operator will return <code>true</code> and fails otherwise.</p>\n\n<p>It has a synonym - <code>isLE</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number/Date<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number/Date<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isNot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-isNot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-isNot' class='name expandable'>isNot</a>( <span class='pre'>got, expected, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the comparison of 1st and 2nd arguments with != operator returns true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the comparison of 1st and 2nd arguments with <code>!=</code> operator returns true and fails otherwise.\nIt has synonyms - <code>isnot</code> and <code>isnt</code>.</p>\n\n<p>As a special case, one or both arguments can be instance of Siesta.Test.BDD.Placeholder class, generated with method <a href=\"#!/api/Siesta.Test-method-any\" rel=\"Siesta.Test-method-any\" class=\"docClass\">any</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Mixed<div class='sub-desc'><p>The value \"we have\" - will be shown as \"Got:\" in case of failure</p>\n</div></li><li><span class='pre'>expected</span> : Mixed<div class='sub-desc'><p>The value \"we expect\" - will be shown as \"Need:\" in case of failure</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isNotStrict' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-isNotStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-isNotStrict' class='name expandable'>isNotStrict</a>( <span class='pre'>got, expected, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the comparison of 1st and 2nd arguments with !== operator returns true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the comparison of 1st and 2nd arguments with <code>!==</code> operator returns true and fails otherwise.\nIt has synonyms - <code>isntStrict</code>.</p>\n\n<p>As a special case, one or both arguments can be instance of Siesta.Test.BDD.Placeholder class, generated with method <a href=\"#!/api/Siesta.Test-method-any\" rel=\"Siesta.Test-method-any\" class=\"docClass\">any</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Mixed<div class='sub-desc'><p>The value \"we have\" - will be shown as \"Got:\" in case of failure</p>\n</div></li><li><span class='pre'>expected</span> : Mixed<div class='sub-desc'><p>The value \"we expect\" - will be shown as \"Need:\" in case of failure</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isNumber' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isNumber' class='name expandable'>isNumber</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, if supplied value is a Number. ...</div><div class='long'><p>This assertion passes, if supplied value is a Number.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isObject' class='name expandable'>isObject</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, if supplied value is an Object ...</div><div class='long'><p>This assertion passes, if supplied value is an Object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isReady' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-isReady' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-isReady' class='name expandable'>isReady</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>This method allows you to delay the start of the test, for example for performing some asynchronous setup code (like ...</div><div class='long'><p>This method allows you to delay the start of the test, for example for performing some asynchronous setup code (like login into an application).\nNote, that you may want to use the <a href=\"#!/api/Siesta.Test-method-setup\" rel=\"Siesta.Test-method-setup\" class=\"docClass\">setup</a> method instead, as it is a bit simpler to implement.</p>\n\n<p>It is supposed to be overridden in a subclass of the <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a> class and should return an object with two properties: \"ready\" and \"reason\"\n(\"reason\" is only meaningful for the case where \"ready : false\"). The Test instance will poll this method and will only launch\nthe test after this method returns \"ready : true\". If waiting for this condition takes longer than <a href=\"#!/api/Siesta.Test-cfg-isReadyTimeout\" rel=\"Siesta.Test-cfg-isReadyTimeout\" class=\"docClass\">isReadyTimeout</a>, the test\nwill be launched anyway, but a failing assertion will be added to it.</p>\n\n<p><strong>Important</strong> This method should always check the value returned by a <code>this.SUPER</code> call.</p>\n\n<p>A typical example of using this method can be seen below:</p>\n\n<pre><code>Class('My.Test.Class', {\n\n    isa         : <a href=\"#!/api/Siesta.Test.Browser\" rel=\"Siesta.Test.Browser\" class=\"docClass\">Siesta.Test.Browser</a>,\n\n    has         : {\n        isCustomSetupDone           : false\n    },\n\n    override : {\n\n        isReady : function () {\n            var result = this.SUPERARG(arguments);\n\n            if (!result.ready) return result;\n\n            if (!this.isCustomSetupDone) return {\n                ready       : false,\n                reason      : \"Waiting for `isCustomSetupDone` took too long - something wrong?\"\n            }\n\n            return {\n                ready       : true\n            }\n        },\n\n\n        start : function () {\n            var me      = this;\n\n            Ext.Ajax.request({\n                url     : 'do_login.php',\n\n                params  : { ... },\n\n                success : function () {\n                    me.isCustomSetupDone    = true\n                }\n            })\n\n            this.SUPERARG(arguments)\n        }\n    },\n\n    ....\n})\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Object with properties <code>{ ready : true/false, reason : 'description' }</code></p>\n</div></li></ul></div></div></div><div id='method-isRegExp' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isRegExp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isRegExp' class='name expandable'>isRegExp</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, if supplied value is a RegExp. ...</div><div class='long'><p>This assertion passes, if supplied value is a RegExp.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isStrict' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-isStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-isStrict' class='name expandable'>isStrict</a>( <span class='pre'>got, expected, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the comparison of 1st and 2nd arguments with === operator returns true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the comparison of 1st and 2nd arguments with <code>===</code> operator returns true and fails otherwise.</p>\n\n<p>As a special case, one or both arguments can be instance of Siesta.Test.BDD.Placeholder class, generated with method <a href=\"#!/api/Siesta.Test-method-any\" rel=\"Siesta.Test-method-any\" class=\"docClass\">any</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Mixed<div class='sub-desc'><p>The value \"we have\" - will be shown as \"Got:\" in case of failure</p>\n</div></li><li><span class='pre'>expected</span> : Mixed<div class='sub-desc'><p>The value \"we expect\" - will be shown as \"Need:\" in case of failure</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isString' class='name expandable'>isString</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, if supplied value is a String. ...</div><div class='long'><p>This assertion passes, if supplied value is a String.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isntCalled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-isntCalled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-isntCalled' class='name expandable'>isntCalled</a>( <span class='pre'>fn, host, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes if the function is not called during the test life span. ...</div><div class='long'><p>This assertion passes if the function is not called during the test life span.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the function on the host object (2nd argument)</p>\n</div></li><li><span class='pre'>host</span> : Object<div class='sub-desc'><p>The \"owner\" of the method</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-it' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-it' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-it' class='name expandable'>it</a>( <span class='pre'>name, code, [timeout]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method starts a sub test with spec (in BDD terms). ...</div><div class='long'><p>This method starts a sub test with <em>spec</em> (in BDD terms). Such spec consists from one or more assertions (or <em>expectations</em>, <em>matchers</em>, etc) or other nested specs\nand/or suites. See the <a href=\"#!/api/Siesta.Test.BDD-method-expect\" rel=\"Siesta.Test.BDD-method-expect\" class=\"docClass\">expect</a> method. The number of nesting levels is not limited. All specs of the same nesting level are executed sequentially.</p>\n\n<p>For example:</p>\n\n<pre><code>t.describe('A product', function (t) {\n\n    t.it('should have feature X', function (t) {\n        ...\n    })\n\n    t.it('should have feature Y', function (t) {\n        ...\n    })\n})\n</code></pre>\n\n<p>See also <a href=\"#!/api/Siesta.Test.BDD-method-beforeEach\" rel=\"Siesta.Test.BDD-method-beforeEach\" class=\"docClass\">beforeEach</a>, <a href=\"#!/api/Siesta.Test.BDD-method-afterEach\" rel=\"Siesta.Test.BDD-method-afterEach\" class=\"docClass\">afterEach</a>, <a href=\"#!/api/Siesta.Test.BDD-method-xit\" rel=\"Siesta.Test.BDD-method-xit\" class=\"docClass\">xit</a>, <a href=\"#!/api/Siesta.Test.BDD-method-iit\" rel=\"Siesta.Test.BDD-method-iit\" class=\"docClass\">iit</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name or description of the spec</p>\n</div></li><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>The code function for this spec. It will receive a test instance as the first argument which should be used for all assertion methods.</p>\n</div></li><li><span class='pre'>timeout</span> : Number (optional)<div class='sub-desc'><p>A maximum duration for this spec. If not provided <a href=\"#!/api/Siesta.Project-cfg-subTestTimeout\" rel=\"Siesta.Project-cfg-subTestTimeout\" class=\"docClass\">Siesta.Project.subTestTimeout</a> value is used.</p>\n</div></li></ul></div></div></div><div id='method-keyPress' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Keyboard' rel='Siesta.Test.UserAgent.Keyboard' class='defined-in docClass'>Siesta.Test.UserAgent.Keyboard</a><br/><a href='source/Keyboard.html#Siesta-Test-UserAgent-Keyboard-method-keyPress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Keyboard-method-keyPress' class='name expandable'>keyPress</a>( <span class='pre'>el, key, options, callback, scope</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'>\n</div></li><li><span class='pre'>key</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event. This argument can be omitted.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to be called after the type operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n\n<p>This method will simluate the key press, translated to the specified DOM element. It is generally exactly equivalent of\ntyping a single character, special characters are supported in the same way as in <a href=\"#!/api/Siesta.Test.UserAgent.Keyboard-method-type\" rel=\"Siesta.Test.UserAgent.Keyboard-method-type\" class=\"docClass\">type</a> method.</p>\n</div></li></ul></div></div></div><div id='method-launchSubTest' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-launchSubTest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-launchSubTest' class='name expandable'>launchSubTest</a>( <span class='pre'>subTest, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method launch the provided sub test instance. ...</div><div class='long'><p>This method launch the provided sub test instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>subTest</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>A test instance to launch</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call, after the test is completed. This function is called regardless from the test execution result.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-like' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-like' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-like' class='name expandable'>like</a>( <span class='pre'>string, regex, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the passed string matches to a regular expression regex. ...</div><div class='long'><p>This assertion passes when the passed <code>string</code> matches to a regular expression <code>regex</code>. When <code>regex</code> is a string,\nassertion will check that it is a substring of <code>string</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>string</span> : String<div class='sub-desc'><p>The string to check for \"likeness\"</p>\n</div></li><li><span class='pre'>regex</span> : String/RegExp<div class='sub-desc'><p>The regex against which to test the string, can be also a plain string</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-livesOk' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-livesOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-livesOk' class='name expandable'>livesOk</a>( <span class='pre'>func, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes, when the supplied func function doesn't throw an exception during execution. ...</div><div class='long'><p>This assertion passes, when the supplied <code>func</code> function doesn't throw an exception during execution.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Test-method-throwsOk\" rel=\"Siesta.Test-method-throwsOk\" class=\"docClass\">Siesta.Test.throwsOk</a> method.</p>\n\n<p>This method has two synonyms: <code>lives_ok</code> and <code>lives</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>The function which is not supposed to throw an exception</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-livesOkAsync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-livesOkAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-livesOkAsync' class='name expandable'>livesOkAsync</a>( <span class='pre'>[desc], [timeout]</span> ) : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes if no exceptions are thrown, during the time since this method has been called\nand until the do...</div><div class='long'><p>This assertion passes if no exceptions are thrown, during the time since this method has been called\nand until the <code>done</code> function has been called. The <code>done</code> function is returned from this method. It should be called once\nthe code, that is expected to not throw exceptions, has completed. <code>done</code> function can be called asynchronously.</p>\n\n<p>If <code>done</code> is not called for more than <code>timeout</code> time, this assertions finalizes forcefully.</p>\n\n<p>For example:</p>\n\n<pre><code>var done\n\nt.chain(\n    function (next) {\n        done = t.livesOkAsync('No exception thrown')\n        next()\n    },\n    // the exception is expected from the click handler\n    { click : '.some-button' },\n    function (next) {\n        done()\n        next()\n    }\n)\n</code></pre>\n\n<p>See also <a href=\"#!/api/Siesta.Test.Browser-method-throwsOkAsync\" rel=\"Siesta.Test.Browser-method-throwsOkAsync\" class=\"docClass\">throwsOkAsync</a> method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li><li><span class='pre'>timeout</span> : Number (optional)<div class='sub-desc'><p>The timeout after which this assertion will be finalized forcefully. Default value is <a href=\"#!/api/Siesta.Project-cfg-defaultTimeout\" rel=\"Siesta.Project-cfg-defaultTimeout\" class=\"docClass\">Siesta.Project.defaultTimeout</a></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>A function which should be called when the code block, which is expected to now throw exceptions, is completed</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-longPress' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Touch' rel='Siesta.Test.UserAgent.Touch' class='defined-in docClass'>Siesta.Test.UserAgent.Touch</a><br/><a href='source/Touch.html#Siesta-Test-UserAgent-Touch-method-longPress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Touch-method-longPress' class='name expandable'>longPress</a>( <span class='pre'>target, [callback], [scope], [options], [offset]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This performs a long press on the passed target, which can be of several different types, see Siesta.Test.ActionTarget ...</div><div class='long'><p>This performs a long press on the passed target, which can be of several different types, see <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>Target for this action</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call after action.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any optionsthat will be used when simulating the event. For information about possible\nconfig options, please see: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent\">https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent</a></p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul></div></div></div><div id='method-methodIsCalled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-methodIsCalled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-methodIsCalled' class='name expandable'>methodIsCalled</a>( <span class='pre'>fn, className, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes if the class method is called at least one time during the test life span. ...</div><div class='long'><p>This assertion passes if the class method is called at least one time during the test life span.</p>\n\n<p>See <a href=\"#!/api/Siesta.Test.Function-method-methodIsCalledNTimes\" rel=\"Siesta.Test.Function-method-methodIsCalledNTimes\" class=\"docClass\">methodIsCalledNTimes</a> for more details.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the method on the class (2nd argument)</p>\n</div></li><li><span class='pre'>className</span> : Function/String<div class='sub-desc'><p>The class constructor function or name of the class that contains the method</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-methodIsCalledNTimes' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-methodIsCalledNTimes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-methodIsCalledNTimes' class='name expandable'>methodIsCalledNTimes</a>( <span class='pre'>fn, className, n, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the supplied class method is called exactly (n) times during the test life span. ...</div><div class='long'><p>This assertion passes when the supplied class method is called exactly (n) times during the test life span.\nUnder \"class method\" here we mean the function in the prototype. Note, that this assertion counts calls to the method in <em>any</em> class instance.</p>\n\n<p>The <code>className</code> parameter can be supplied as a class constructor function or as a string, representing the class\nname. In the latter case the <code>class</code> will be eval'ed to get a reference to the class constructor.</p>\n\n<p>For example:</p>\n\n<pre><code>StartTest(function (t) {\n\n    function machine(type, version) {\n        this.machineInfo = {\n            type        : type,\n            version     : version\n        };\n    };\n\n    machine.prototype.update = function (type, version) {\n        this.setVersion(type);\n        this.setType(version);\n    };\n\n    machine.prototype.setVersion = function (data) {\n        this.machineInfo.version = data;\n    };\n\n    machine.prototype.setType = function (data) {\n        this.machineInfo.type = data;\n    };\n\n    t.methodIsCalled(\"setVersion\", machine, \"Checking if method 'setVersion' has been called\");\n    t.methodIsCalled(\"setType\", machine, \"Checking if method 'setType' has been called\");\n\n    var m = new machine('rover', '0.1.2');\n\n    m.update('3.2.1', 'New Rover');\n});\n</code></pre>\n\n<p>This assertion is useful when testing for example an Ext JS class where event listeners are added during\nclass instantiation time, which means you need to observe the prototype method before instantiation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the method on the class (2nd argument)</p>\n</div></li><li><span class='pre'>className</span> : Function/String<div class='sub-desc'><p>The constructor function or the name of the class that contains the method</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The expected number of calls</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-methodIsntCalled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-methodIsntCalled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-methodIsntCalled' class='name expandable'>methodIsntCalled</a>( <span class='pre'>fn, className, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes if the class method is not called during the test life span. ...</div><div class='long'><p>This assertion passes if the class method is not called during the test life span.</p>\n\n<p>See <a href=\"#!/api/Siesta.Test.Function-method-methodIsCalledNTimes\" rel=\"Siesta.Test.Function-method-methodIsCalledNTimes\" class=\"docClass\">methodIsCalledNTimes</a> for more details.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the method on the class (2nd argument)</p>\n</div></li><li><span class='pre'>className</span> : Function/String<div class='sub-desc'><p>The class constructor function or name of the class that contains the method</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-monkeyTest' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-monkeyTest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-monkeyTest' class='name expandable'>monkeyTest</a>( <span class='pre'>options, nbrInteractions, [description], callback, scope</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs clicks, double clicks, right clicks and drags at random coordinates within the passed target. ...</div><div class='long'><p>Performs clicks, double clicks, right clicks and drags at random coordinates within the passed target.\nAlso performs random key presses. You can specify an array of DOM selectors to avoid (see <code>skipTargets</code> below).</p>\n\n<p>While doing all these random actions it tracks the number of exceptions thrown and reports a failure\nif there was any. Otherwise it reports a passed assertion.</p>\n\n<p>Use this assertion to \"stress-test\" your component, making sure it will work correctly in various unexpected\ninteraction scenarious.</p>\n\n<p>Note that as a special case, when this method is provided with the document's &lt;body&gt; element as a target,\nit will test the whole browser viewport.</p>\n\n<p>This method supports two call signatures. One is with multiple positional arguments and another with single options object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> | Object<div class='sub-desc'><p>The element to upon which to unleash the \"monkey\", or a config object with the options</p>\n<ul><li><span class='pre'>target</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to upon which to unleash the \"monkey\"</p>\n</div></li><li><span class='pre'>skipTargets</span> : Array[String]<div class='sub-desc'><p>An array of DOM selectors, for the elements inside the <code>target</code>, which will be avoided by monkeys.</p>\n</div></li><li><span class='pre'>nbrInteractions</span> : Number<div class='sub-desc'><p>The number of random interactions to perform. Default value is 30</p>\n</div></li><li><span class='pre'>description</span> : String<div class='sub-desc'><p>The optional description for the assertion.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after all actions are completed</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li></ul></div></li><li><span class='pre'>nbrInteractions</span> : Number<div class='sub-desc'><p>The number of random interactions to perform. Default value is 30</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after all actions are completed</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-mouseDown' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-mouseDown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-mouseDown' class='name expandable'>mouseDown</a>( <span class='pre'>el, options, [offset], [callback], [scope]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a mousedown event in the center of the specified DOM element,\nor at current cursor position...</div><div class='long'><p>This method will simulate a mousedown event in the center of the specified DOM element,\nor at current cursor position if no target is provided.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"]\nto click in the center horizontally and 2px from the bottom edge.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call after mousedown.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-mouseUp' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-mouseUp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-mouseUp' class='name expandable'>mouseUp</a>( <span class='pre'>el, options, [offset]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a mousedown event in the center of the specified DOM element,\nor at current cursor position...</div><div class='long'><p>This method will simulate a mousedown event in the center of the specified DOM element,\nor at current cursor position if no target is provided.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"]\nto click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-moveCursorAlongPath' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-moveCursorAlongPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-moveCursorAlongPath' class='name expandable'>moveCursorAlongPath</a>( <span class='pre'>pathArray, callback</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method sequentially moves a cursor through a series of \"path points\". ...</div><div class='long'><p>This method sequentially moves a cursor through a series of \"path points\".</p>\n\n<p>A path point can be one of the following:</p>\n\n<ul>\n<li>An object <code>{ target : 'query', offset : [ x, y ] }</code>, where 'query' is any valid\n<a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> query. This object will specify an absolute point on the page.</li>\n<li>A more compact notation with single letter properties <code>{ t : 'query', o : [ x, y ] }</code></li>\n<li>An object <code>{ target : [ x, y ] }</code>, where 'x' and 'y' specifies an aboslute point on the page.</li>\n<li>An object <code>{ by : [ dx, dy ] }</code>, where <code>by</code> is an array, with a relative delta from previous point.</li>\n<li>An array with 3 elements: <code>[ 'query', x, y ]</code>, specifying an absolute point on the page, using\n'query' and 'x' 'y' offset.</li>\n<li>An array with 1 element: <code>[ [ x, y ] ]</code>, which is in turn an array, specifying an absolute\npoint on the page, using 'x' and 'y' page coordinates.</li>\n<li>An array with 2 elements: <code>[ dx, dy ]</code>, specifying a relative delta from previous point</li>\n</ul>\n\n\n<p>This method is generally intended to be used by <a href=\"#!/api/Siesta.Recorder.Recorder\" rel=\"Siesta.Recorder.Recorder\" class=\"docClass\">Siesta.Recorder.Recorder</a> with enabled\n<a href=\"#!/api/Siesta.Recorder.Recorder-cfg-recordMouseMovePath\" rel=\"Siesta.Recorder.Recorder-cfg-recordMouseMovePath\" class=\"docClass\">recordMouseMovePath</a> option. That option can generate\na substantial amount of data, thus there is a focus on having a compact notation for it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pathArray</span> : Array[path point]<div class='sub-desc'><p>An array of \"path points\"</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call after visiting all points</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-moveCursorBy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-moveCursorBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-moveCursorBy' class='name expandable'>moveCursorBy</a>( <span class='pre'>delta, [callback], [scope], [options]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a mouse move by an x and y delta amount ...</div><div class='long'><p>This method will simulate a mouse move by an x and y delta amount</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delta</span> : Array<div class='sub-desc'><p>The delta x and y distance to move, e.g. [20, 20] for 20px down/right, or [0, -10] for 10px up.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any options to use for the simulated DOM events</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-moveCursorTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-moveCursorTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-moveCursorTo' class='name expandable'>moveCursorTo</a>( <span class='pre'>target, [callback], [scope], [offset]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias for moveMouseTo, this method will simulate a mouse move to an xy-coordinate or an element (the center of it) ...</div><div class='long'><p>Alias for moveMouseTo, this method will simulate a mouse move to an xy-coordinate or an element (the center of it)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>Target point to move the mouse to.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"50%\"] to click in the center.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-moveMouseBy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-moveMouseBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-moveMouseBy' class='name expandable'>moveMouseBy</a>( <span class='pre'>delta, [callback], [scope], [options]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a mouse move by an x a y delta amount ...</div><div class='long'><p>This method will simulate a mouse move by an x a y delta amount</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delta</span> : Array<div class='sub-desc'><p>The delta x and y distance to move, e.g. [20, 20] for 20px down/right, or [0, 10] for just 10px down.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any options to use for the simulated DOM events</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-moveMouseTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-moveMouseTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-moveMouseTo' class='name expandable'>moveMouseTo</a>( <span class='pre'>target, [callback], [scope], [offset], [waitForTarget], [options]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a mouse move to an xy-coordinate or an element (the center of it) ...</div><div class='long'><p>This method will simulate a mouse move to an xy-coordinate or an element (the center of it)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>Target point to move the mouse to.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"50%\"] to click in the center.</p>\n</div></li><li><span class='pre'>waitForTarget</span> : Object (optional)<div class='sub-desc'><p><em>private</em> True to wait for the target to exist before moving mouse</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any options to use for the simulated DOM event</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-notOk' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-notOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-notOk' class='name expandable'>notOk</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the supplied value evalutes to false and fails otherwise. ...</div><div class='long'><p>This assertion passes when the supplied <code>value</code> evalutes to <code>false</code> and fails otherwise.</p>\n\n<p>It has a synonym - <code>notok</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value, indicating wheter assertions passes or fails</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-ok' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-ok' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-ok' class='name expandable'>ok</a>( <span class='pre'>value, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the supplied value evalutes to true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the supplied <code>value</code> evalutes to <code>true</code> and fails otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value, indicating wheter assertions passes or fails</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-pass' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-pass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-pass' class='name expandable'>pass</a>( <span class='pre'>desc, [annotation]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method add the passed assertion to this test. ...</div><div class='long'><p>This method add the passed assertion to this test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li><li><span class='pre'>annotation</span> : String/Object (optional)<div class='sub-desc'><p>The string with additional description how exactly this assertion passes. Will be shown with monospace font.\nCan be also an object with the following properties:</p>\n<ul><li><span class='pre'>annotation</span> : String<div class='sub-desc'><p>The actual annotation text</p>\n</div></li><li><span class='pre'>descTpl</span> : String<div class='sub-desc'><p>The template for the default description text. Will be used if user did not provide any description for\nassertion. Template can contain variables in braces. The values for variables are taken as properties of <code>annotation</code> parameters with the same name:</p>\n\n<pre><code>this.pass(desc, {\n    descTpl         : '{value1} sounds like {value2}',\n    value1          : '1',\n    value2          : 'one\n})\n</code></pre>\n</div></li></ul></div></li></ul></div></div></div><div id='method-pinch' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Touch' rel='Siesta.Test.UserAgent.Touch' class='defined-in docClass'>Siesta.Test.UserAgent.Touch</a><br/><a href='source/Touch.html#Siesta-Test-UserAgent-Touch-method-pinch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Touch-method-pinch' class='name expandable'>pinch</a>( <span class='pre'>target1, target2, scale, callback, scope, [options], offset1, offset2</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method performs a pinch between the two specified points. ...</div><div class='long'><p>This method performs a pinch between the two specified points. It draws a line between the specified points and then moves 2 touches along that line,\nso that the final distance between the touches becomes <code>scale * original distance</code>.</p>\n\n<p>This method can be called either in the full form with 2 different targets:</p>\n\n<pre><code>t.pinch(\"#grid &gt; .col1\", \"#grid &gt; .col2\", 3, function () { ... })\n</code></pre>\n\n<p>or, in the short form, where the 2nd target argument is omitted:</p>\n\n<pre><code>t.pinch(\"#grid &gt; .col1\", 3, function () { ... })\n</code></pre>\n\n<p>In the latter form, <code>target2</code> is considered to be the same as <code>target1</code>.</p>\n\n<p>If <code>target1</code> and <code>target2</code> are the same, and no offsets are provided, offsets are set to the following values:</p>\n\n<pre><code>offset1     = [ '25%', '50%' ]\noffset2     = [ '75%', '50%' ]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target1</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>First point for pinch</p>\n</div></li><li><span class='pre'>target2</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>Second point for pinch. Can be omitted, in this case both points will belong to <code>target1</code></p>\n</div></li><li><span class='pre'>scale</span> : Number<div class='sub-desc'><p>The multiplier for a final distance between the points</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call after the pinch has completed</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>A scope for the <code>callback</code></p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any optionsthat will be used when simulating the event. For information about possible\nconfig options, please see: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent\">https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent</a></p>\n</div></li><li><span class='pre'>offset1</span> : Array<div class='sub-desc'><p>An X,Y offset relative to the target1. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"]\nfor the point in the center horizontally and 2px from the bottom edge.</p>\n</div></li><li><span class='pre'>offset2</span> : Array<div class='sub-desc'><p>An X,Y offset relative to the target1. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"]\nfor the point in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-query' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-query' class='name expandable'>query</a>( <span class='pre'>selector</span> ) : Array[Element]<span class=\"signature\"></span></div><div class='description'><div class='short'>This method resolves a query string. ...</div><div class='long'><p>This method resolves a query string. At the generic browser level, this is supposed to be a CSS selector\n(other framework specific layers, like ExtJS adds additional semantic).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array[Element]</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-rightClick' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-rightClick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-rightClick' class='name expandable'>rightClick</a>( <span class='pre'>[el], [callback], [scope], [options], [offset]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a mouse right click in the center of the specified DOM/Ext element,\nor at current cursor po...</div><div class='long'><p>This method will simulate a mouse right click in the center of the specified DOM/Ext element,\nor at current cursor position if no target is provided.</p>\n\n<p>Note, that it will first calculate the centeral point of the specified element and then\nwill pick the top-most DOM element from that point. For example, if you will provide a grid row as the <code>el</code>,\nthen click will happen on top of the central cell, and then will bubble to the row itself.\nIn most cases this is the desired behavior.</p>\n\n<p>Example:</p>\n\n<pre><code> t.rightClick(t.getFirstRow(grid), function () { ... })\n</code></pre>\n\n<p>The 1st argument for this method can be omitted. In this case, Siesta will use the current cursor position:</p>\n\n<pre><code> t.rightClick(function () { ... })\n</code></pre>\n\n<p>This method returns a <code>Promise</code> which is resolved once the right click has completed</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> (optional)<div class='sub-desc'><p>One of the <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> values to convert to DOM element</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call after click.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any options to use for the simulated DOM event</p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"]\nto click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the right click has completed</p>\n</div></li></ul></div></div></div><div id='method-scrollHorizontallyTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-scrollHorizontallyTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-scrollHorizontallyTo' class='name expandable'>scrollHorizontallyTo</a>( <span class='pre'>el, newLeft, [delay], callback</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>This method changes the \"scrollLeft\" property of the dom element, then waits for the \"scroll\" event from it and calls...</div><div class='long'><p>This method changes the \"scrollLeft\" property of the dom element, then waits for the \"scroll\" event from it and calls the provided callback.</p>\n\n<p>For example:</p>\n\n<pre><code>// scroll the domEl to the 100px offset, wait for \"scroll\" event, call the callback\nt.scrollHorizontallyTo(domEl, 100, function () { ... })\n</code></pre>\n\n<p>Optionally it can also wait some additional time before calling the callback:</p>\n\n<pre><code>// scroll the domEl to the 100px offset, wait for \"scroll\" event, wait 1000ms more, call the callback\nt.scrollHorizontallyTo(domEl, 100, 1000, function () { ... })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>newLeft</span> : Number<div class='sub-desc'><p>The value for the \"scrollLeft\" property</p>\n</div></li><li><span class='pre'>delay</span> : Number (optional)<div class='sub-desc'><p>Additional delay, this argument can be omitted</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call after \"scroll\" event has been fired and additional delay completed (if any)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The new value of the \"scrollLeft\" property of the dom element</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-scrollTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-scrollTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-scrollTo' class='name expandable'>scrollTo</a>( <span class='pre'>el, newLeft, newTop, callback, [delay]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>This method changes the scrollLeft and scrollTop properties of the dom element, then waits for the \"scroll\" event\nfro...</div><div class='long'><p>This method changes the <code>scrollLeft</code> and <code>scrollTop</code> properties of the dom element, then waits for the \"scroll\" event\nfrom it and calls the provided callback.</p>\n\n<p>For example:</p>\n\n<pre><code>// scroll the domEl to the 50px horizontal offset, 100px vertical, wait for \"scroll\" event, call the callback\nt.scrollTo(domEl, 50, 100, function () { ... })\n</code></pre>\n\n<p>Optionally it can also wait some additional time before calling the callback:</p>\n\n<pre><code>// scroll the domEl to the 50px horizontal offset, 100px vertical, wait for \"scroll\" event, wait 1000ms more, call the callback\nt.scrollTo(domEl, 50, 100, function () { ... }, 1000)\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>newLeft</span> : Number<div class='sub-desc'><p>The value for the <code>scrollLeft</code> property</p>\n</div></li><li><span class='pre'>newTop</span> : Number<div class='sub-desc'><p>The value for the <code>scrollTop</code> property</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call after \"scroll\" event has been fired and additional delay completed (if any)</p>\n</div></li><li><span class='pre'>delay</span> : Number (optional)<div class='sub-desc'><p>Optional, additional delay before calling a callback</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>An object with new scrolling position</p>\n<ul><li><span class='pre'>scrollLeft</span> : Number<div class='sub-desc'><p>The new value of the <code>scrollLeft</code> property of the dom element</p>\n</div></li><li><span class='pre'>scrollTop</span> : Number<div class='sub-desc'><p>The new value of the <code>scrollTop</code> property of the dom element</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-scrollVerticallyTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-scrollVerticallyTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-scrollVerticallyTo' class='name expandable'>scrollVerticallyTo</a>( <span class='pre'>el, newTop, [delay], callback</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>This method changes the \"scrollTop\" property of the dom element, then waits for the \"scroll\" event from it and calls ...</div><div class='long'><p>This method changes the \"scrollTop\" property of the dom element, then waits for the \"scroll\" event from it and calls the provided callback.</p>\n\n<p>For example:</p>\n\n<pre><code>// scroll the domEl to the 100px offset, wait for \"scroll\" event, call the callback\nt.scrollVerticallyTo(domEl, 100, function () { ... })\n</code></pre>\n\n<p>Optionally it can also wait some additional time before calling the callback:</p>\n\n<pre><code>// scroll the domEl to the 100px offset, wait for \"scroll\" event, wait 1000ms more, call the callback\nt.scrollVerticallyTo(domEl, 100, 1000, function () { ... })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>newTop</span> : Number<div class='sub-desc'><p>The value for the \"scrollTop\" property</p>\n</div></li><li><span class='pre'>delay</span> : Number (optional)<div class='sub-desc'><p>Additional delay, this argument can be omitted</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call after \"scroll\" event has been fired and additional delay completed (if any)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The new value of the \"scrollTop\" property of the dom element</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-selectText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.TextSelection' rel='Siesta.Test.TextSelection' class='defined-in docClass'>Siesta.Test.TextSelection</a><br/><a href='source/TextSelection.html#Siesta-Test-TextSelection-method-selectText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.TextSelection-method-selectText' class='name expandable'>selectText</a>( <span class='pre'>el, [start], [end]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Utility method which selects text in the passed element (should be an &lt;input&gt; element). ...</div><div class='long'><p>Utility method which selects text in the passed element (should be an &lt;input&gt; element).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>start</span> : Int (optional)<div class='sub-desc'><p>The selection start index</p>\n</div></li><li><span class='pre'>end</span> : Int (optional)<div class='sub-desc'><p>The selection end index</p>\n</div></li></ul></div></div></div><div id='method-selectorCountIs' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-selectorCountIs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-selectorCountIs' class='name expandable'>selectorCountIs</a>( <span class='pre'>selector, [root], count, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes when the DOM query with specified selector returns the expected number of elements\n\nYou can spe...</div><div class='long'><p>This assertion passes when the DOM query with specified selector returns the expected number of elements</p>\n\n<p>You can specify the optional <code>root</code> element to start the query from:</p>\n\n<pre><code> t.selectorCountIs('.x-grid-row', grid, 5, \"Grid has 5 rows\")\n</code></pre>\n\n<p>or omit it (query will start from the document):</p>\n\n<pre><code> t.selectorCountIs('.x-grid-row', 0, \"No grid rows on the page\")\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>DOM query selector</p>\n</div></li><li><span class='pre'>root</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> (optional)<div class='sub-desc'><p>An optional root element to start the query from, if omited query will start from the document</p>\n</div></li><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>The expected number of elements in the query result</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-selectorExists' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-selectorExists' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-selectorExists' class='name expandable'>selectorExists</a>( <span class='pre'>selector, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the selector is found in the DOM ...</div><div class='long'><p>Passes if the selector is found in the DOM</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The selector to query for</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-selectorIsAt' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-selectorIsAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-selectorIsAt' class='name expandable'>selectorIsAt</a>( <span class='pre'>selector, xy, allowChildren, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the element is found at the supplied xy coordinates. ...</div><div class='long'><p>Passes if the element is found at the supplied xy coordinates.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The selector to query for</p>\n</div></li><li><span class='pre'>xy</span> : Array<div class='sub-desc'><p>The xy coordinate to query.</p>\n</div></li><li><span class='pre'>allowChildren</span> : Boolean<div class='sub-desc'><p>true to also include child nodes. False to strictly check for the passed element.</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-selectorNotExists' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-selectorNotExists' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-selectorNotExists' class='name expandable'>selectorNotExists</a>( <span class='pre'>selector, [description]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes if the selector is not found in the DOM ...</div><div class='long'><p>Passes if the selector is not found in the DOM</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The selector to query for</p>\n</div></li><li><span class='pre'>description</span> : String (optional)<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-setHash' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-setHash' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-setHash' class='name expandable'>setHash</a>( <span class='pre'>url, callback, scope</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the hash value of the location object ...</div><div class='long'><p>Sets the hash value of the location object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The new hash</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li></ul></div></div></div><div id='method-setNextConfirmReturnValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-setNextConfirmReturnValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-setNextConfirmReturnValue' class='name expandable'>setNextConfirmReturnValue</a>( <span class='pre'>value, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the confirm dialog return value for the next window.confirm() call. ...</div><div class='long'><p>Sets the confirm dialog return value for the next window.confirm() call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Boolean<div class='sub-desc'><p>The confirm dialog return value (true or false)</p>\n</div></li><li><span class='pre'>callback</span> : Object<div class='sub-desc'><p>Only used internally when this method is called in a t.chain command</p>\n</div></li></ul></div></div></div><div id='method-setNextPromptReturnValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-setNextPromptReturnValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-setNextPromptReturnValue' class='name expandable'>setNextPromptReturnValue</a>( <span class='pre'>value, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the prompt dialog return value for the next window.prompt() call. ...</div><div class='long'><p>Sets the prompt dialog return value for the next window.prompt() call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : String<div class='sub-desc'><p>The confirm dialog return value</p>\n</div></li><li><span class='pre'>callback</span> : Object<div class='sub-desc'><p>Only used internally when this method is called in a t.chain command</p>\n</div></li></ul></div></div></div><div id='method-setTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-setTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-setTimeout' class='name expandable'>setTimeout</a>( <span class='pre'>func, delay</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will just call the setTimeout method from the scope of the test page. ...</div><div class='long'><p>This method will just call the <code>setTimeout</code> method from the scope of the test page.</p>\n\n<p>Usually you don't need to use it - you can just call <code>setTimeout</code>, but if your test scripts resides in the\nseparate context, you need to use this method for <code>setTimeout</code> functionality. See documentation for enablePageRedirect\noption and <a href=\"#!/guide/cross_page_testing\">Cross page testing</a> guide.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>The function to call after specified <code>delay</code></p>\n</div></li><li><span class='pre'>delay</span> : Number<div class='sub-desc'><p>The time to wait (in ms) before calling the <code>func</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>timeoutId The id of the timeout, can be passed to <a href=\"#!/api/Siesta.Test.Browser-method-clearTimeout\" rel=\"Siesta.Test.Browser-method-clearTimeout\" class=\"docClass\">clearTimeout</a> to cancel the function execution.</p>\n</div></li></ul></div></div></div><div id='method-setUrl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-setUrl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-setUrl' class='name expandable'>setUrl</a>( <span class='pre'>url, callback, scope</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>setUrl Opens the url provided (make sure you use the Siesta.Project.Browser.enablePageRedirect option on the Harness ...</div><div class='long'><p>setUrl Opens the url provided (make sure you use the Siesta.Project.Browser.enablePageRedirect option on the Harness when using this API method)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The new url for current page</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the page has been loaded</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-setWindowSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-setWindowSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-setWindowSize' class='name expandable'>setWindowSize</a>( <span class='pre'>width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets a new size for the test iframe ...</div><div class='long'><p>Sets a new size for the test iframe</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Int<div class='sub-desc'><p>The new width</p>\n</div></li><li><span class='pre'>height</span> : Int<div class='sub-desc'><p>The new height</p>\n</div></li></ul></div></div></div><div id='method-setup' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-setup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-setup' class='name expandable'>setup</a>( <span class='pre'>callback, errback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method can perform any setup code your tests need. ...</div><div class='long'><p>This method can perform any setup code your tests need. It is called before the begining of every test and receives\na callback and errback, either of those should be called once the setup has completed (or failed).\nSee also <a href=\"#!/api/Siesta.Test-method-tearDown\" rel=\"Siesta.Test-method-tearDown\" class=\"docClass\">tearDown</a>.</p>\n\n<p><strong> IMPORTANT </strong> Make sure you've called the \"super\" <code>setup</code> method, to perform default setup actions. See below for example.</p>\n\n<p>Typical usage for this method can be for example to log in into the application, before interacting with it:</p>\n\n<pre><code>Class('My.Test.Class', {\n\n    isa         : <a href=\"#!/api/Siesta.Test.Browser\" rel=\"Siesta.Test.Browser\" class=\"docClass\">Siesta.Test.Browser</a>,\n\n    override : {\n\n        setup : function (callback, errback) {\n            this.SUPER(function () {\n\n                Ext.Ajax.request({\n                    url     : 'do_login.php',\n\n                    params  : { ... },\n\n                    success : function () {\n                        callback()\n                    },\n                    failure : function () {\n                        errback('Login failed')\n                    }\n                })\n\n            }, errback)\n        }\n    },\n\n    ....\n})\n</code></pre>\n\n<p>This method will be called <em>after</em> the <a href=\"#!/api/Siesta.Test-method-isReady\" rel=\"Siesta.Test-method-isReady\" class=\"docClass\">isReady</a> method has reported that the test is ready to start.</p>\n\n<p>If the setup has failed for some reason, then an errback should be called and a failing assertion will be added to the test\n(though the test will be launched anyway). A text of the failed assertion can be given as the 1st argument for the errback.</p>\n\n<p>Note, that the setup is supposed to be completed within the <a href=\"#!/api/Siesta.Test-cfg-isReadyTimeout\" rel=\"Siesta.Test-cfg-isReadyTimeout\" class=\"docClass\">isReadyTimeout</a> timeout, otherwise it will be\nconsidered failed and the test will be launched with a failed assertion.</p>\n\n<p>If you need to perform a setup at an earlier point, check the <a href=\"#!/api/Siesta.Test-method-earlySetup\" rel=\"Siesta.Test-method-earlySetup\" class=\"docClass\">earlySetup</a> method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the setup has completed successfully</p>\n</div></li><li><span class='pre'>errback</span> : Function<div class='sub-desc'><p>A function to call when the setup has completed with an error</p>\n</div></li></ul></div></div></div><div id='method-simulateActivateWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-simulateActivateWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-simulateActivateWindow' class='name expandable'>simulateActivateWindow</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method activates the main browser window reverts focus to the window object of the test. ...</div><div class='long'><p>This method activates the main browser window reverts focus to the window object of the test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-simulateDeactivateWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-simulateDeactivateWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-simulateDeactivateWindow' class='name expandable'>simulateDeactivateWindow</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method mimics the deactivation of a browser window by opening a new window. ...</div><div class='long'><p>This method mimics the deactivation of a browser window by opening a new window. Useful if you want to test\nhow your application behaves when your application is not active.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-snooze' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-snooze' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-snooze' class='name expandable'>snooze</a>( <span class='pre'>snoozeUntilDate, fn, reason</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method allows you to \"snooze\" the failing test (make it a todo test until certain date. ...</div><div class='long'><p>This method allows you to \"snooze\" the failing test (make it a <a href=\"#!/api/Siesta.Test-method-todo\" rel=\"Siesta.Test-method-todo\" class=\"docClass\">todo test</a> until certain date.\nAfter that date, test will become \"normal\" again. Use with care :)</p>\n\n<pre><code>        t.snooze('2014-10-10', function (todo) {\n\n            var treePanel    = new Ext.tree.Panel()\n\n            todo.is(treePanel.getView().store, treePanel.store, 'NodeStore and TreeStore have been merged and there is only 1 store now');\n        })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>snoozeUntilDate</span> : String/Date<div class='sub-desc'><p>The date until which we don't want to hear about this test. Can be provided as <code>Date</code> instance or a string, recognized by <code>Date</code> constructor</p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>The function body of the test, will receive a new test instance as 1st argument</p>\n</div></li><li><span class='pre'>reason</span> : String<div class='sub-desc'><p>The reason or explanation why this test is \"snoozed\"</p>\n</div></li></ul></div></div></div><div id='method-spyOn' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-spyOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-spyOn' class='name expandable'>spyOn</a>( <span class='pre'>object, propertyName</span> ) : <a href=\"#!/api/Siesta.Test.BDD.Spy\" rel=\"Siesta.Test.BDD.Spy\" class=\"docClass\">Siesta.Test.BDD.Spy</a><span class=\"signature\"></span></div><div class='description'><div class='short'>This method installs a \"spy\" instead of normal function in some object. ...</div><div class='long'><p>This method installs a \"spy\" instead of normal function in some object. The \"spy\" is basically another function,\nwhich tracks the calls to itself. With spies, one can verify that some function was called and that\nit was called with certain arguments.</p>\n\n<p>By default, spy will call the original method and return a value from it. To enable different behavior, you can use one of these methods:</p>\n\n<ul>\n<li><a href=\"#!/api/Siesta.Test.BDD.Spy-method-returnValue\" rel=\"Siesta.Test.BDD.Spy-method-returnValue\" class=\"docClass\">returnValue</a> - return a specific value</li>\n<li><a href=\"#!/api/Siesta.Test.BDD.Spy-method-callThrough\" rel=\"Siesta.Test.BDD.Spy-method-callThrough\" class=\"docClass\">callThrough</a> - call the original method and return a value from it</li>\n<li><a href=\"#!/api/Siesta.Test.BDD.Spy-method-stub\" rel=\"Siesta.Test.BDD.Spy-method-stub\" class=\"docClass\">stub</a> - call the original method and return a value from it</li>\n<li><a href=\"#!/api/Siesta.Test.BDD.Spy-method-callFake\" rel=\"Siesta.Test.BDD.Spy-method-callFake\" class=\"docClass\">callFake</a> - call the provided function and return a value from it</li>\n<li><p><a href=\"#!/api/Siesta.Test.BDD.Spy-method-throwError\" rel=\"Siesta.Test.BDD.Spy-method-throwError\" class=\"docClass\">throwError</a> - throw a specific exception object</p>\n\n<pre><code>  const spy = t.spyOn(obj, 'process')\n  // or, if you need to call some method instead\n  const spy = t.spyOn(obj, 'process').and.callFake(() =&gt; {\n      // is called instead of `process` method\n  })\n\n  // call the method\n  obj.process('fast', 1)\n\n  t.expect(spy).toHaveBeenCalled();\n  t.expect(spy).toHaveBeenCalledWith('fast', 1);\n</code></pre></li>\n</ul>\n\n\n<p>See also <a href=\"#!/api/Siesta.Test.BDD-method-createSpy\" rel=\"Siesta.Test.BDD-method-createSpy\" class=\"docClass\">createSpy</a>, <a href=\"#!/api/Siesta.Test.BDD-method-createSpyObj\" rel=\"Siesta.Test.BDD-method-createSpyObj\" class=\"docClass\">createSpyObj</a>, <a href=\"#!/api/Siesta.Test.BDD.Expectation-method-toHaveBeenCalled\" rel=\"Siesta.Test.BDD.Expectation-method-toHaveBeenCalled\" class=\"docClass\">toHaveBeenCalled</a>,\n<a href=\"#!/api/Siesta.Test.BDD.Expectation-method-toHaveBeenCalledWith\" rel=\"Siesta.Test.BDD.Expectation-method-toHaveBeenCalledWith\" class=\"docClass\">toHaveBeenCalledWith</a></p>\n\n<p>See also the <a href=\"#!/api/Siesta.Test.BDD.Spy\" rel=\"Siesta.Test.BDD.Spy\" class=\"docClass\">Siesta.Test.BDD.Spy</a> class for additional details.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>An object which property is being spied</p>\n</div></li><li><span class='pre'>propertyName</span> : String<div class='sub-desc'><p>A name of the property over which to install the spy.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Siesta.Test.BDD.Spy\" rel=\"Siesta.Test.BDD.Spy\" class=\"docClass\">Siesta.Test.BDD.Spy</a></span><div class='sub-desc'><p>spy Created spy instance</p>\n</div></li></ul></div></div></div><div id='method-subTest' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-subTest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-subTest' class='name expandable'>subTest</a>( <span class='pre'>desc, code, callback, [timeout]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method starts a new sub test. ...</div><div class='long'><p>This method starts a new sub test. Sub tests have separate order of assertions. In the browser UI,\nsub tests are presented with the \"parent\" node of the assertions tree. Sub tests are useful if you want to test\nseveral asynchronous processes in parallel, and would like to see assertions from every process separated.</p>\n\n<p>Sub tests may have their own sub tests, the number of nesting levels is not limited.</p>\n\n<p>Sub test can contain asynchronous methods as any other tests. Sub tests are considered completed\nonly when all of its asynchronous methods have completed <em>and</em> all of its sub-tests are completed too.</p>\n\n<p>For example:</p>\n\n<pre><code>t.subTest('Load 1st store', function (t) {\n    var async   = t.beginAsync()\n\n    store1.load({\n        callback : function () {\n            t.endAsync(async);\n            t.isGreater(store1.getCount(), 0, \"Store1 has been loaded\")\n        }\n    })\n})\n\nt.subTest('Load 2nd store', function (t) {\n    var async   = t.beginAsync()\n\n    store2.load({\n        callback : function () {\n            t.endAsync(async);\n            t.isGreater(store2.getCount(), 0, \"Store2 has been loaded\")\n        }\n    })\n})\n</code></pre>\n\n<p>Note, that sub test starts right away, w/o waiting for any previous sub tests to complete. If you'd like to run several sub-tests\nsequentially, use <a href=\"#!/api/Siesta.Test-method-chain\" rel=\"Siesta.Test-method-chain\" class=\"docClass\">chain</a> method in combination with <a href=\"#!/api/Siesta.Test-method-getSubTest\" rel=\"Siesta.Test-method-getSubTest\" class=\"docClass\">getSubTest</a> method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The name of the sub test. Will be shown as the name of the parent node in assertion tree.</p>\n</div></li><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>The test function to execute. It will receive a test instance as 1st argument. This test instance <em>must</em> be\nused for assertions inside of the test function</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to execute after the sub test completes (either successfully or not)</p>\n</div></li><li><span class='pre'>timeout</span> : Number (optional)<div class='sub-desc'><p>A maximum duration (in ms) for this sub test. If test will not complete within this time,\nit will be considered failed. If not provided, the <a href=\"#!/api/Siesta.Project-cfg-subTestTimeout\" rel=\"Siesta.Project-cfg-subTestTimeout\" class=\"docClass\">Siesta.Project.subTestTimeout</a> value is used.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-swipe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Touch' rel='Siesta.Test.UserAgent.Touch' class='defined-in docClass'>Siesta.Test.UserAgent.Touch</a><br/><a href='source/Touch.html#Siesta-Test-UserAgent-Touch-method-swipe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Touch-method-swipe' class='name expandable'>swipe</a>( <span class='pre'>target, direction, callback, [scope], [options]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a swipe operation between either two points or on a single DOM element. ...</div><div class='long'><p>This method will simulate a swipe operation between either two points or on a single DOM element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>Target for this action</p>\n</div></li><li><span class='pre'>direction</span> : String<div class='sub-desc'><p>Either 'left', 'right', 'up' or 'down'</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call after the swing operation is completed</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any options that will be used when simulating the event. For information about possible\nconfig options, please see: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent\">https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent</a></p>\n</div></li></ul></div></div></div><div id='method-switchTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-switchTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-switchTo' class='name expandable'>switchTo</a>( <span class='pre'>[win], callback</span> ) : Window<span class=\"signature\"></span></div><div class='description'><div class='short'>Switches the target of all Siesta interactive commands (like \"click/type\" etc) to a different\nwindow (usually a popup). ...</div><div class='long'><p>Switches the target of all Siesta interactive commands (like \"click/type\" etc) to a different\nwindow (usually a popup). You can use <a href=\"#!/api/Siesta.Test.Browser-method-switchToMain\" rel=\"Siesta.Test.Browser-method-switchToMain\" class=\"docClass\">switchToMain</a> method to switch back to main window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>win</span> : String/RegExp/Object/Window/HTMLIFrameElement (optional)<div class='sub-desc'><p>A new window which should be a target for all interactive commands.\nIf this argument is specified as <code>null</code> a first opened popup is used.\nCan be specified as the:</p>\n\n<ul>\n<li>Window - A global window instance</li>\n<li>Object - Object with the following properties\n\n<ul>\n<li> url   : String/RegExp - The first popup, opened with matching url will be used</li>\n<li> title : String/RegExp - The first popup, opened with matching title will be used</li>\n</ul>\n</li>\n<li>String - corresponds to the <code>title</code> property of the Object branch</li>\n</ul>\n\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Function to call once the switch has complete (will also wait until the target page\ncompletes loading)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Window</span><div class='sub-desc'><p>Previously active window reference</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-switchToMain' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-switchToMain' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-switchToMain' class='name expandable'>switchToMain</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Switches all interactive commands back to main test window. ...</div><div class='long'><p>Switches all interactive commands back to main test window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Function to call once the switch has complete.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-tap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Touch' rel='Siesta.Test.UserAgent.Touch' class='defined-in docClass'>Siesta.Test.UserAgent.Touch</a><br/><a href='source/Touch.html#Siesta-Test-UserAgent-Touch-method-tap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Touch-method-tap' class='name expandable'>tap</a>( <span class='pre'>target, [callback], [scope], [options], [offset]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method taps the passed target, which can be of several different types, see Siesta.Test.ActionTarget ...</div><div class='long'><p>This method taps the passed target, which can be of several different types, see <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>Target for this action</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call after action.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any options that will be used when simulating the event. For information about possible\nconfig options, please see: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent\">https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent</a></p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or\n[\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul></div></div></div><div id='method-tearDown' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-tearDown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-tearDown' class='name expandable'>tearDown</a>( <span class='pre'>callback, errback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method can perform any asynchronous finalization code your tests need. ...</div><div class='long'><p>This method can perform any asynchronous finalization code your tests need. It is called after the test has\nbeen finished (or finalized externally by any reason, for example if user re-starts the test).\nThis method receives a callback and errback, either of those should be called once the tear down has completed\n(or has failed). Typical usage for this method can be for example to clear the database or release some other resource.</p>\n\n<p><strong>Note</strong> though, that if test suite has experienced a hard failure, this method may not be called.</p>\n\n<pre><code>Class('My.Test.Class', {\n\n    isa         : <a href=\"#!/api/Siesta.Test.Browser\" rel=\"Siesta.Test.Browser\" class=\"docClass\">Siesta.Test.Browser</a>,\n\n    override : {\n\n        tearDown : function (callback, errback) {\n            Ext.Ajax.request({\n                url     : 'clear_the_db.php',\n\n                params  : { ... },\n\n                success : function () {\n                    callback()\n                },\n                failure : function () {\n                    errback(\"Error message\")\n                }\n            })\n        }\n    },\n\n    ....\n})\n</code></pre>\n\n<p>If the tearDown has failed for some reason, then an errback should be called and a failing assertion will be added to the test\n(though the test will be launched anyway). A text of the failed assertion can be given as the 1st argument for the errback.</p>\n\n<p>Note, that the tear down process is supposed to be completed within the <a href=\"#!/api/Siesta.Test-cfg-isReadyTimeout\" rel=\"Siesta.Test-cfg-isReadyTimeout\" class=\"docClass\">isReadyTimeout</a> timeout, after this\ntimeout a failing assertion will be added to the test and test suite will just continue execution.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the tear down process has completed successfully</p>\n</div></li><li><span class='pre'>errback</span> : Function<div class='sub-desc'><p>A function to call when the tear down process has failed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>errorMessage</span> : String (optional)<div class='sub-desc'><p>An error message which will be added as a failing assertion to the test.</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-throwsOk' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-throwsOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-throwsOk' class='name expandable'>throwsOk</a>( <span class='pre'>func, expected, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes if the func function throws an exception during executing, and the\nstringified exception passes...</div><div class='long'><p>This assertion passes if the <code>func</code> function throws an exception during executing, and the\nstringified exception passes the 'like' assertion (with 'expected' parameter).</p>\n\n<p>It has synonyms - <code>throws_ok</code> and <code>throws</code>.</p>\n\n<pre><code> t.throwsOk(function(){\n     throw \"oopsie\";\n }, 'oopsie', 'Some description text');\n</code></pre>\n\n<p>See also <a href=\"#!/api/Siesta.Test-method-livesOk\" rel=\"Siesta.Test-method-livesOk\" class=\"docClass\">Siesta.Test.livesOk</a> method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>The function which should throw an exception</p>\n</div></li><li><span class='pre'>expected</span> : String/RegExp<div class='sub-desc'><p>The regex against which to test the stringified exception, can be also a plain string</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-throwsOkAsync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-throwsOkAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-throwsOkAsync' class='name expandable'>throwsOkAsync</a>( <span class='pre'>expected, [desc], [timeout]</span> ) : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>This assertion passes if an exception with certain message is thrown, during the time since this method has been call...</div><div class='long'><p>This assertion passes if an exception with certain message is thrown, during the time since this method has been called\nand until the <code>done</code> function has been called. The <code>done</code> function is returned from this method. It should be called once\nthe code, that is expected to throw exception, has completed. <code>done</code> function can be called asynchronously.</p>\n\n<p>If <code>done</code> is not called for more than <code>timeout</code> time, this assertions finalizes forcefully.</p>\n\n<p>For example:</p>\n\n<pre><code>var done\n\nt.chain(\n    function (next) {\n        done = t.throwsOkAsync('oops', 'Correct exception thrown', 25000)\n        next()\n    },\n    // the exception is expected from the click handler\n    { click : '.some-button' },\n    function (next) {\n        done()\n        next()\n    },\n)\n</code></pre>\n\n<p>See also <a href=\"#!/api/Siesta.Test.Browser-method-livesOkAsync\" rel=\"Siesta.Test.Browser-method-livesOkAsync\" class=\"docClass\">livesOkAsync</a> method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>expected</span> : String/RegExp<div class='sub-desc'><p>The regex against which to test the stringified exception, can be also a plain string</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li><li><span class='pre'>timeout</span> : Number (optional)<div class='sub-desc'><p>The timeout after which this assertion will be finalized forcefully. Default value is <a href=\"#!/api/Siesta.Project-cfg-defaultTimeout\" rel=\"Siesta.Project-cfg-defaultTimeout\" class=\"docClass\">Siesta.Project.defaultTimeout</a></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>A function which should be called when the code block, which is expected to throw the exception, is completed</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-todo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-todo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-todo' class='name expandable'>todo</a>( <span class='pre'>why, code</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>With this method you can mark a group of assertions as \"todo\", assuming they most likely will fail,\nbut it's still wo...</div><div class='long'><p>With this method you can mark a group of assertions as \"todo\", assuming they most likely will fail,\nbut it's still worth to try to run them.\nThe supplied <code>code</code> function will be run, it will receive a new test instance as the 1st argument,\nwhich should be used for assertion checks (and not the primary test instance, received from <code>StartTest</code>).</p>\n\n<p>Assertions, failed inside of the <code>code</code> block will be still treated by project as \"green\".\nAssertions, passed inside of the <code>code</code> block will be treated by project as bonus ones and highlighted.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Test.ExtJS-method-knownBugIn\" rel=\"Siesta.Test.ExtJS-method-knownBugIn\" class=\"docClass\">Siesta.Test.ExtJS.knownBugIn</a> and <a href=\"#!/api/Siesta.Test.ExtJS-method-snooze\" rel=\"Siesta.Test.ExtJS-method-snooze\" class=\"docClass\">Siesta.Test.ExtJS.snooze</a> methods. Note, that this method will start a new <a href=\"#!/api/Siesta.Test-method-subTest\" rel=\"Siesta.Test-method-subTest\" class=\"docClass\">sub test</a>.</p>\n\n<p>For example:</p>\n\n<pre><code>        t.todo('Scheduled for 4.1.x release', function (todo) {\n\n            var treePanel    = new Ext.tree.Panel()\n\n            todo.is(treePanel.getView().store, treePanel.store, 'NodeStore and TreeStore have been merged and there is only 1 store now');\n        })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>why</span> : String<div class='sub-desc'><p>The reason/description for the todo</p>\n</div></li><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>A function, wrapping the \"todo\" assertions. This function will receive a special test class instance\nwhich should be used for assertion checks</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-touchDragBy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Touch' rel='Siesta.Test.UserAgent.Touch' class='defined-in docClass'>Siesta.Test.UserAgent.Touch</a><br/><a href='source/Touch.html#Siesta-Test-UserAgent-Touch-method-touchDragBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Touch-method-touchDragBy' class='name expandable'>touchDragBy</a>( <span class='pre'>source, delta, callback, [scope], [options], dragOnly, [offset]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a drag and drop operation from a point (or DOM element) and move by a delta. ...</div><div class='long'><p>This method will simulate a drag and drop operation from a point (or DOM element) and move by a delta.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p><a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> value as the drag starting point</p>\n</div></li><li><span class='pre'>delta</span> : Array<div class='sub-desc'><p>The amount to drag from the source coordinate, expressed as [ x, y ]. E.g. [ 50, 10 ] will drag 50px to the right and 10px down.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call after the drag operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any optionsthat will be used when simulating the event. For information about possible\nconfig options, please see: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent\">https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent</a></p>\n</div></li><li><span class='pre'>dragOnly</span> : Boolean<div class='sub-desc'><p>true to skip the mouseup and not finish the drop operation.</p>\n</div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul></div></div></div><div id='method-touchDragTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Touch' rel='Siesta.Test.UserAgent.Touch' class='defined-in docClass'>Siesta.Test.UserAgent.Touch</a><br/><a href='source/Touch.html#Siesta-Test-UserAgent-Touch-method-touchDragTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Touch-method-touchDragTo' class='name expandable'>touchDragTo</a>( <span class='pre'>source, target, callback, [scope], [options], dragOnly, [sourceOffset], [targetOffset]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a drag and drop operation between either two points or two DOM elements. ...</div><div class='long'><p>This method will simulate a drag and drop operation between either two points or two DOM elements.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p><a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> value for the drag starting point</p>\n</div></li><li><span class='pre'>target</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p><a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> value for the drag end point</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call after the drag operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any optionsthat will be used when simulating the event. For information about possible\nconfig options, please see: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent\">https://developer.mozilla.org/en-US/docs/DOM/event.initMouseEvent</a></p>\n</div></li><li><span class='pre'>dragOnly</span> : Boolean<div class='sub-desc'><p>true to skip the mouseup and not finish the drop operation.</p>\n</div></li><li><span class='pre'>sourceOffset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the source. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li><li><span class='pre'>targetOffset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul></div></div></div><div id='method-type' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Keyboard' rel='Siesta.Test.UserAgent.Keyboard' class='defined-in docClass'>Siesta.Test.UserAgent.Keyboard</a><br/><a href='source/Keyboard.html#Siesta-Test-UserAgent-Keyboard-method-type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Keyboard-method-type' class='name expandable'>type</a>( <span class='pre'>el, text, callback, scope, [options], [clearExisting]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate keyboard typing on either a provided DOM element, or, if omitted, on the currently focuced ...</div><div class='long'><p>This method will simulate keyboard typing on either a provided DOM element, or, if omitted, on the currently focuced DOM element.\nSimulation of certain special keys such as ENTER, ESC, LEFT etc is supported.\nYou can type these special keys by using the all uppercase name the key inside square brackets: <code>[ENTER]</code>, <code>[BACKSPACE]</code>.\nSee <a href=\"#!/api/Siesta.Test.UserAgent.KeyCodes\" rel=\"Siesta.Test.UserAgent.KeyCodes\" class=\"docClass\">Siesta.Test.UserAgent.KeyCodes</a> for a list of key names.</p>\n\n<p>For example:</p>\n\n<pre><code>t.type(el, 'Foo bar[ENTER]', function () {\n    ...\n})\n</code></pre>\n\n<p>To type the <code>[ENTER]</code> as plain text and not as a special character - use double square brackets: <code>[[ENTER]]</code></p>\n\n<p>To specify a control key like \"shift/control/alt\" of to be pressed during typing, use the <code>options</code> argument, for example:</p>\n\n<pre><code>t.type(el, 'Foo bar[ENTER]', callback, scope, { shiftKey : true, ctrlKey : true, altKey : true });\n</code></pre>\n\n<p>This method returns a <code>Promise</code> which is resolved once the click has completed:</p>\n\n<pre><code> t.type('#someEl', 'someText').then(function () {\n     return t.type('#anotherEl', 'someText')\n }).then(function () {\n     return t.type('#yetAnotherEl', 'someText')\n })\n</code></pre>\n\n<p>See also <a href=\"#!/api/Siesta.Test-method-chain\" rel=\"Siesta.Test-method-chain\" class=\"docClass\">chain</a> method for slimer chaining notation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to type into. If not provided, currently focused element will be used as target.</p>\n</div></li><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to type, including any names of special keys in square brackets.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to be called after the type operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>any extra options used to configure the DOM key events (like holding shiftKey, ctrlKey, altKey etc).</p>\n</div></li><li><span class='pre'>clearExisting</span> : Boolean (optional)<div class='sub-desc'><p>true to clear existing text in the target before typing</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-unlike' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-unlike' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-unlike' class='name expandable'>unlike</a>( <span class='pre'>string, regex, [desc]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is the opposite of 'like', it adds failed assertion, when the string matches the passed regex. ...</div><div class='long'><p>This method is the opposite of 'like', it adds failed assertion, when the string matches the passed regex.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>string</span> : String<div class='sub-desc'><p>The string to check for \"unlikeness\"</p>\n</div></li><li><span class='pre'>regex</span> : String/RegExp<div class='sub-desc'><p>The regex against which to test the string, can be also a plain string</p>\n</div></li><li><span class='pre'>desc</span> : String (optional)<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-verifyGlobals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-verifyGlobals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-verifyGlobals' class='name expandable'>verifyGlobals</a>( <span class='pre'>name1, name2, nameN</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method accepts a variable number of names of expected properties in the global scope and then performs a globals...</div><div class='long'><p>This method accepts a variable number of names of expected properties in the global scope and then performs a globals check.</p>\n\n<p>It will scan all globals properties in the scope of test and compare them with the list of expected globals. Expected globals can be provided with:\n<a href=\"#!/api/Siesta.Test.More-method-expectGlobals\" rel=\"Siesta.Test.More-method-expectGlobals\" class=\"docClass\">expectGlobals</a> method or <a href=\"#!/api/Siesta.Project-cfg-expectedGlobals\" rel=\"Siesta.Project-cfg-expectedGlobals\" class=\"docClass\">expectedGlobals</a> configuration option of project.</p>\n\n<p>You can enable this assertion to automatically happen at the end of each test, using <a href=\"#!/api/Siesta.Project-cfg-autoCheckGlobals\" rel=\"Siesta.Project-cfg-autoCheckGlobals\" class=\"docClass\">autoCheckGlobals</a> option of the project.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name1</span> : String/RegExp<div class='sub-desc'><p>The name of global property or the regular expression to match several properties</p>\n</div></li><li><span class='pre'>name2</span> : String/RegExp<div class='sub-desc'><p>The name of global property or the regular expression to match several properties</p>\n</div></li><li><span class='pre'>nameN</span> : String/RegExp<div class='sub-desc'><p>The name of global property or the regular expression to match several properties</p>\n</div></li></ul></div></div></div><div id='method-waitFor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-waitFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-waitFor' class='name expandable'>waitFor</a>( <span class='pre'>condition, callback, scope, timeout, [interval]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for passed checker method to return true (or any non-false value, like for example DOM element or array), and c...</div><div class='long'><p>Waits for passed checker method to return true (or any non-false value, like for example DOM element or array), and calls the callback when this happens.\nAs an additional feature, the callback will receive the result from the checker method as the 1st argument.</p>\n\n<pre><code>t.waitFor(\n    function () { return document.getElementById('someEl') },\n    function (el) {\n        // waited for element #someEl to appear\n        // element will be available in the callback as 1st argument \"el\"\n    }\n)\n</code></pre>\n\n<p>You can also call this method with a single Object having the following properties: <code>method</code>, <code>callback</code>, <code>scope</code>, <code>timeout</code>, <code>interval</code>, <code>description</code>:</p>\n\n<pre><code>t.waitFor({\n    method      : function () { return document.getElementById('someEl') },\n    callback    : function (el) {\n        // waited for element #someEl to appear\n        // element will be available in the callback as 1st argument \"el\"\n    }\n})\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>condition</span> : Function/Number/Object<div class='sub-desc'><p>Either a function which should return true (or any other \"truthy\" value) when a certain condition has been fulfilled,\nor a number of ms to wait before calling the callback. Can be also an object with the following properties:</p>\n<ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the condition has been met. Will receive a result from checker function.</p>\n</div></li><li><span class='pre'>method</span> : Function<div class='sub-desc'><p>A condition checker function.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback.</p>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>The maximum amount of time (in milliseconds) to wait for the condition to be fulfilled.</p>\n</div></li><li><span class='pre'>interval</span> : Number<div class='sub-desc'><p>The polling interval (in milliseconds)</p>\n</div></li><li><span class='pre'>description</span> : String<div class='sub-desc'><p>The assertion description</p>\n</div></li></ul></div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the condition has been met. Will receive a result from checker function.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time (in milliseconds) to wait for the condition to be fulfilled.\nDefaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value. If condition is not fullfilled within this time, a failed assertion will be added to the test.</p>\n</div></li><li><span class='pre'>interval</span> : Int (optional)<div class='sub-desc'><p>The polling interval (in milliseconds)</p>\n<p>Defaults to: <code>100</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>A promise which will be resolved when wait completes (either successfully or by timeout). In case of successfull resolution\npromise will be resolved to the result from the checker function. Additionally it has a <code>force</code> property as noted below.</p>\n<ul><li><span class='pre'>force</span> : Function<div class='sub-desc'><p>A function, that will force this wait operation to immediately complete (and call the callback).\nNo call to checker will be performed and callback will not receive a result from it.</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForContentLike' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForContentLike' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForContentLike' class='name expandable'>waitForContentLike</a>( <span class='pre'>el, text, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the innerHTML of the passed element contains the text passed ...</div><div class='long'><p>Waits until the innerHTML of the passed element contains the text passed</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to match</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForContentNotLike' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForContentNotLike' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForContentNotLike' class='name expandable'>waitForContentNotLike</a>( <span class='pre'>el, text, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the innerHTML of the passed element does not contain the text passed ...</div><div class='long'><p>Waits until the innerHTML of the passed element does not contain the text passed</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to match</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForElementEmpty' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForElementEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForElementEmpty' class='name expandable'>waitForElementEmpty</a>( <span class='pre'>el, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the innerHTML of the passed element is empty (whitespace will be trimmed) ...</div><div class='long'><p>Waits until the innerHTML of the passed element is empty (whitespace will be trimmed)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForElementNotEmpty' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForElementNotEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForElementNotEmpty' class='name expandable'>waitForElementNotEmpty</a>( <span class='pre'>el, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the innerHTML of the passed element contains some non-whitespace text. ...</div><div class='long'><p>Waits until the innerHTML of the passed element contains some non-whitespace text.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to query</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForElementNotTop' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForElementNotTop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForElementNotTop' class='name expandable'>waitForElementNotTop</a>( <span class='pre'>el, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the passed element is not the 'top' element in the DOM and calls the provided callback with the element f...</div><div class='long'><p>Waits until the passed element is not the 'top' element in the DOM and calls the provided callback with the element found.</p>\n\n<p>The callback will receive the actual top element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to look for.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForElementNotVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForElementNotVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForElementNotVisible' class='name expandable'>waitForElementNotVisible</a>( <span class='pre'>el, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the passed element is becomes not \"visible\" in the DOM and call the provided callback. ...</div><div class='long'><p>Waits until the passed element is becomes not \"visible\" in the DOM and call the provided callback.\nPlease note, that \"visible\" means element will just have a DOM node, and still may be hidden by another visible element.</p>\n\n<p>The callback will receive the passed element as the 1st argument.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Test.Element-method-waitForElementNotTop\" rel=\"Siesta.Test.Element-method-waitForElementNotTop\" class=\"docClass\">waitForElementNotTop</a> method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to look for.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForElementTop' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForElementTop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForElementTop' class='name expandable'>waitForElementTop</a>( <span class='pre'>el, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the passed element is the 'top' element in the DOM and call the provided callback. ...</div><div class='long'><p>Waits until the passed element is the 'top' element in the DOM and call the provided callback.</p>\n\n<p>The callback will receive the passed element as the 1st argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to look for.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForElementVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForElementVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForElementVisible' class='name expandable'>waitForElementVisible</a>( <span class='pre'>el, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the passed element becomes \"visible\" in the DOM and calls the provided callback. ...</div><div class='long'><p>Waits until the passed element becomes \"visible\" in the DOM and calls the provided callback.\nPlease note, that \"visible\" means element will just have a DOM node, and still may be hidden by another visible element.</p>\n\n<p>The callback will receive the passed element as the 1st argument.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Test.Element-method-waitForElementTop\" rel=\"Siesta.Test.Element-method-waitForElementTop\" class=\"docClass\">waitForElementTop</a> method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element to look for.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForFn' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-waitForFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-waitForFn' class='name expandable'>waitForFn</a>( <span class='pre'>fn, callback, scope, timeout, [interval]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for the passed checker method to return true (or any non-false value, like for example DOM element or array), a...</div><div class='long'><p>Waits for the passed checker method to return true (or any non-false value, like for example DOM element or array), and calls the callback when this happens.\nThis is just a convenience synonym for the <a href=\"#!/api/Siesta.Test.More-method-waitFor\" rel=\"Siesta.Test.More-method-waitFor\" class=\"docClass\">waitFor</a> method.</p>\n\n<pre><code>     t.waitForFn(function() { return true; }, callback)\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>The checker function.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the condition has been met. Will receive a result from checker function.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time (in milliseconds) to wait for the condition to be fulfilled.\nDefaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value. If condition is not fullfilled within this time, a failed assertion will be added to the test.</p>\n</div></li><li><span class='pre'>interval</span> : Int (optional)<div class='sub-desc'><p>The polling interval (in milliseconds)</p>\n<p>Defaults to: <code>100</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>An object with the following properties:</p>\n<ul><li><span class='pre'>force</span> : Function<div class='sub-desc'><p>A function, that will force this wait operation to immediately complete (and call the callback).\nNo call to checker will be performed and callback will not receive a result from it.</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-waitForMs' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-waitForMs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-waitForMs' class='name expandable'>waitForMs</a>( <span class='pre'>method, callback, scope, timeout, [interval]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for the number of a number millseconds and calls the callback when after waiting. ...</div><div class='long'><p>Waits for the number of a number millseconds and calls the callback when after waiting. This is just a convenience synonym for the <a href=\"#!/api/Siesta.Test.More-method-waitFor\" rel=\"Siesta.Test.More-method-waitFor\" class=\"docClass\">waitFor</a> method.</p>\n\n<pre><code>     t.waitForMs(1500, callback)\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>method</span> : Number<div class='sub-desc'><p>The number of ms to wait before calling the callback.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the condition has been met. Will receive a result from checker function.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time (in milliseconds) to wait for the condition to be fulfilled.\nDefaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value. If condition is not fullfilled within this time, a failed assertion will be added to the test.</p>\n</div></li><li><span class='pre'>interval</span> : Int (optional)<div class='sub-desc'><p>The polling interval (in milliseconds)</p>\n<p>Defaults to: <code>100</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>An object with the following properties:</p>\n<ul><li><span class='pre'>force</span> : Function<div class='sub-desc'><p>A function, that will force this wait operation to immediately complete (and call the callback).\nNo call to checker will be performed and callback will not receive a result from it.</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-waitForPageLoad' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-waitForPageLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-waitForPageLoad' class='name expandable'>waitForPageLoad</a>( <span class='pre'>callback, scope</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Only useful along with enablePageRedirect option\n\nWait for the page load to occur and runs the callback. ...</div><div class='long'><p>Only useful along with enablePageRedirect option</p>\n\n<p>Wait for the page load to occur and runs the callback. The callback will receive a \"window\" object.\nShould be used when you are doing a redirect / refresh of the test page:</p>\n\n<pre><code> t.waitForPageLoad(function (window) {\n     ...\n })\n</code></pre>\n\n<p>Note, that method obviously must be called before the new page has completed loading, otherwise it will\nwait indefinitely and fail (since there will be no page load). So, to avoid the race conditions, one\nshould always start waiting for page load <em>before</em> the action, that causes it.</p>\n\n<p>Consider the following example (where click on the <code>&gt;&gt; #loginPanel button</code> trigger a page redirect):</p>\n\n<pre><code>     // this code does not reliably - it contains a race condition\n     // in Chrome, page refresh may happen too fast (even synchronously),\n     // so, by the time the `waitForPageLoad` action will start, the page load event will already happen\n     // and `waitForPageLoad` will wait indefinitely\n     { click : '&gt;&gt; #loginPanel button' },\n     { waitFor : 'PageLoad'}\n</code></pre>\n\n<p>&nbsp;</p>\n\n<pre><code>     // Need to start waiting first, and only then - click\n     // we'll use \"trigger\" config of the `wait` action for that\n     {\n         waitFor     : 'PageLoad',\n         trigger     : {\n             click : '&gt;&gt; #loginPanel button'\n         }\n     }\n     // or, same action using function step:\n     function (next) {\n    t.waitForPageLoad(next)\n\n    t.click('&gt;&gt; #loginPanel button', function () {})\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'></div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForScrollChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForScrollChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForScrollChange' class='name expandable'>waitForScrollChange</a>( <span class='pre'>el, side, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the passed scroll property of the element has changed. ...</div><div class='long'><p>Waits until the passed scroll property of the element has changed.</p>\n\n<p>The callback will receive the new <code>scroll</code> value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>side</span> : String<div class='sub-desc'><p>'left' or 'top'</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForScrollLeftChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForScrollLeftChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForScrollLeftChange' class='name expandable'>waitForScrollLeftChange</a>( <span class='pre'>el, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the scrollLeft property of the element has changed. ...</div><div class='long'><p>Waits until the <code>scrollLeft</code> property of the element has changed.</p>\n\n<p>The callback will receive the new <code>scrollLeft</code> value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForScrollTopChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForScrollTopChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForScrollTopChange' class='name expandable'>waitForScrollTopChange</a>( <span class='pre'>el, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the scrollTop property of the element has changed\n\nThe callback will receive the new scrollTop value. ...</div><div class='long'><p>Waits until the scrollTop property of the element has changed</p>\n\n<p>The callback will receive the new <code>scrollTop</code> value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForSelector' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForSelector' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForSelector' class='name expandable'>waitForSelector</a>( <span class='pre'>selector, [root], callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for a certain CSS selector to be found in the DOM, and then calls the callback supplied. ...</div><div class='long'><p>Waits for a certain CSS selector to be found in the DOM, and then calls the callback supplied.\nThe callback will receive the results of jQuery selector.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The CSS selector to check for</p>\n</div></li><li><span class='pre'>root</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> (optional)<div class='sub-desc'><p>The root element in which to detect the selector.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test-cfg-waitForTimeout\" rel=\"Siesta.Test-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForSelectorAt' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForSelectorAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForSelectorAt' class='name expandable'>waitForSelectorAt</a>( <span class='pre'>xy, selector, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for a certain CSS selector to be found at the passed XY coordinate, and calls the callback when found. ...</div><div class='long'><p>Waits for a certain CSS selector to be found at the passed XY coordinate, and calls the callback when found.\nThe callback will receive the element from the passed XY coordinates.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xy</span> : Array<div class='sub-desc'><p>The x and y coordinates to query</p>\n</div></li><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The CSS selector to check for</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test-cfg-waitForTimeout\" rel=\"Siesta.Test-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForSelectorAtCursor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForSelectorAtCursor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForSelectorAtCursor' class='name expandable'>waitForSelectorAtCursor</a>( <span class='pre'>selector, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for a certain CSS selector to be found at current cursor position, and calls the callback when found. ...</div><div class='long'><p>Waits for a certain CSS selector to be found at current cursor position, and calls the callback when found.\nThe callback will receive the element found.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The CSS selector to check for</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test-cfg-waitForTimeout\" rel=\"Siesta.Test-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForSelectorNotFound' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForSelectorNotFound' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForSelectorNotFound' class='name expandable'>waitForSelectorNotFound</a>( <span class='pre'>selector, [root], callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for a certain CSS selector to not be found in the DOM, and then calls the callback supplied. ...</div><div class='long'><p>Waits for a certain CSS selector to not be found in the DOM, and then calls the callback supplied.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The CSS selector to check for</p>\n</div></li><li><span class='pre'>root</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> (optional)<div class='sub-desc'><p>The root element in which to detect the selector.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test-cfg-waitForTimeout\" rel=\"Siesta.Test-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForSelectors' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitForSelectors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitForSelectors' class='name expandable'>waitForSelectors</a>( <span class='pre'>selectors, [root], callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits till all the CSS selectors from the provided array to be found in the DOM, and then calls the callback supplied. ...</div><div class='long'><p>Waits till all the CSS selectors from the provided array to be found in the DOM, and then calls the callback supplied.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selectors</span> : Array[String]<div class='sub-desc'><p>The array of CSS selectors to check for</p>\n</div></li><li><span class='pre'>root</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> (optional)<div class='sub-desc'><p>The root element in which to detect the selector.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the CSS selector has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test-cfg-waitForTimeout\" rel=\"Siesta.Test-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForTarget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-waitForTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-waitForTarget' class='name expandable'>waitForTarget</a>( <span class='pre'>target, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until the passed action target is detected. ...</div><div class='long'><p>Waits until the passed action target is detected. This can be a string such as a component query, CSS query or a composite query.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : String/<a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The target presence to wait for</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the target has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForTextNotPresent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-waitForTextNotPresent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-waitForTextNotPresent' class='name expandable'>waitForTextNotPresent</a>( <span class='pre'>text, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will wait for the absence of the passed string. ...</div><div class='long'><p>This method will wait for the absence of the passed string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to wait for</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitForTextPresent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Browser'>Siesta.Test.Browser</span><br/><a href='source/Browser2.html#Siesta-Test-Browser-method-waitForTextPresent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-waitForTextPresent' class='name expandable'>waitForTextPresent</a>( <span class='pre'>text, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will wait for the presence of the passed string. ...</div><div class='long'><p>This method will wait for the presence of the passed string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to wait for</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-waitUntilInView' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Element' rel='Siesta.Test.Element' class='defined-in docClass'>Siesta.Test.Element</a><br/><a href='source/Element2.html#Siesta-Test-Element-method-waitUntilInView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Element-method-waitUntilInView' class='name expandable'>waitUntilInView</a>( <span class='pre'>el, callback, scope, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits until element is inside in the visible viewport and then calls the supplied callback ...</div><div class='long'><p>Waits until element is inside in the visible viewport and then calls the supplied callback</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a><div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul><li>maxtimeoutchanged</li></ul></div></div></div><div id='method-wheel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.UserAgent.Mouse' rel='Siesta.Test.UserAgent.Mouse' class='defined-in docClass'>Siesta.Test.UserAgent.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-UserAgent-Mouse-method-wheel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.UserAgent.Mouse-method-wheel' class='name expandable'>wheel</a>( <span class='pre'>[el], [callback], [scope], [options], options, [offset]</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will simulate a wheel event on the specified DOM element. ...</div><div class='long'><p>This method will simulate a wheel event on the specified DOM element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> (optional)<div class='sub-desc'><p>One of the <a href=\"#!/api/Siesta.Test.ActionTarget\" rel=\"Siesta.Test.ActionTarget\" class=\"docClass\">Siesta.Test.ActionTarget</a> values to convert to a DOM element</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call after the action.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any options to use for the simulated DOM event</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n<ul><li><span class='pre'>deltaX</span> : Object<div class='sub-desc'><p>a double representing the horizontal scroll amount.</p>\n</div></li><li><span class='pre'>deltaY</span> : Object<div class='sub-desc'><p>a double representing the vertical scroll amount. Not supported in native events simulation.</p>\n</div></li><li><span class='pre'>deltaZ</span> : Object<div class='sub-desc'><p>a double representing scroll amount for the z-axis. Not supported in native events simulation.</p>\n</div></li></ul></div></li><li><span class='pre'>offset</span> : Array (optional)<div class='sub-desc'><p>An X,Y offset relative to the target. Example: [20, 20] for 20px or [\"50%\", \"100%-2\"] to click in the center horizontally and 2px from the bottom edge.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>Returns a promise resolved once the action has completed</p>\n</div></li></ul></div></div></div><div id='method-xdescribe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-xdescribe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-xdescribe' class='name expandable'>xdescribe</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is a no-op method, allowing you to quickly ignore some suites. ...</div><div class='long'><p>This is a no-op method, allowing you to quickly ignore some suites.</p>\n</div></div></div><div id='method-xit' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.BDD' rel='Siesta.Test.BDD' class='defined-in docClass'>Siesta.Test.BDD</a><br/><a href='source/BDD.html#Siesta-Test-BDD-method-xit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.BDD-method-xit' class='name expandable'>xit</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is a no-op method, allowing you to quickly ignore some specs. ...</div><div class='long'><p>This is a no-op method, allowing you to quickly ignore some specs.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-beforetestfinalize' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-beforetestfinalize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-beforetestfinalize' class='name expandable'>beforetestfinalize</a>( <span class='pre'>event, test</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This event is fired before each individual test case ends (no any corresponding Harness actions will have been run yet). ...</div><div class='long'><p>This event is fired before each individual test case ends (no any corresponding Harness actions will have been run yet).</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Project\" rel=\"Siesta.Project\" class=\"docClass\">project</a>, so you can observe it on the project as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that is about to finalize</p>\n</div></li></ul></div></div></div><div id='event-testfailedwithexception' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-testfailedwithexception' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-testfailedwithexception' class='name expandable'>testfailedwithexception</a>( <span class='pre'>event, test, exception</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This event is fired when an individual test case has thrown an exception. ...</div><div class='long'><p>This event is fired when an individual test case has thrown an exception.</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Project\" rel=\"Siesta.Project\" class=\"docClass\">project</a>, so you can observe it on the project as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that just threw an exception</p>\n</div></li><li><span class='pre'>exception</span> : Object<div class='sub-desc'><p>The exception thrown</p>\n</div></li></ul></div></div></div><div id='event-testfinalize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-testfinalize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-testfinalize' class='name expandable'>testfinalize</a>( <span class='pre'>event, test</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This event is fired when an individual test case ends (either because it has completed correctly or thrown an excepti...</div><div class='long'><p>This event is fired when an individual test case ends (either because it has completed correctly or thrown an exception).</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Project\" rel=\"Siesta.Project\" class=\"docClass\">project</a>, so you can observe it on the project as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that just has completed</p>\n</div></li></ul></div></div></div><div id='event-teststart' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-teststart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-teststart' class='name expandable'>teststart</a>( <span class='pre'>event, test</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This event is fired when an individual test case starts. ...</div><div class='long'><p>This event is fired when an individual test case starts. When <em>started</em>, the test will be waiting for\nthe <a href=\"#!/api/Siesta.Test-method-isReady\" rel=\"Siesta.Test-method-isReady\" class=\"docClass\">isReady</a> condition to be fullfilled and the <a href=\"#!/api/Siesta.Test-method-setup\" rel=\"Siesta.Test-method-setup\" class=\"docClass\">setup</a> method to complete.\nAfter that the test will be <em>launched</em> (and execute the <code>StartTest</code> function).</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Project\" rel=\"Siesta.Project\" class=\"docClass\">project</a>, you can observe it on the project as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that just has started</p>\n</div></li></ul></div></div></div><div id='event-testupdate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-testupdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-testupdate' class='name expandable'>testupdate</a>( <span class='pre'>event, test, result</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This event is fired when an individual test case receives a new result (assertion or diagnostic message). ...</div><div class='long'><p>This event is fired when an individual test case receives a new result (assertion or diagnostic message).</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Project\" rel=\"Siesta.Project\" class=\"docClass\">project</a>, so you can observe it on the project as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that just has started</p>\n</div></li><li><span class='pre'>result</span> : Siesta.Result<div class='sub-desc'><p>The new result. Instance of Siesta.Result.Assertion or Siesta.Result.Diagnostic classes</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});