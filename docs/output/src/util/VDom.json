{
    "classData": [
        {
            "comment": "/**\r\n * @class Neo.util.VDom\r\n * @extends Neo.core.Base\r\n */",
            "meta": {
                "filename": "VDom.mjs",
                "lineno": 3,
                "columnno": 0,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {}
            },
            "kind": "class",
            "name": "VDom",
            "augments": [
                "Neo.core.Base"
            ],
            "memberof": "Neo.util",
            "longname": "Neo.util.VDom",
            "scope": "static",
            "$longname": "Neo.util.VDom",
            "$kind": "class",
            "id": 1941,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n         * @member {String} className='Neo.util.VDom'\r\n         * @private\r\n         */",
            "meta": {
                "filename": "VDom.mjs",
                "lineno": 13,
                "columnno": 8,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {}
            },
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.util.VDom'",
            "access": "private",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 1942,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     * Search vdom child nodes by id or opts object for a given vdom tree\r\n     * @param {Object} vdom\r\n     * @param {Object|String} opts Either an object containing vdom node attributes or a string based id\r\n     * @param {Number} [index] Internal flag, do not use it\r\n     * @param {Object} [parentNode] Internal flag, do not use it\r\n     * @returns {Object}\r\n     *     {Number} index\r\n     *     {String} parentId\r\n     *     {Object} vdom\r\n     */",
            "meta": {
                "range": [
                    779,
                    4344
                ],
                "filename": "VDom.mjs",
                "lineno": 27,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061306",
                    "name": "VDom.findVdomChild",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "opts",
                        "index",
                        "parentNode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Search vdom child nodes by id or opts object for a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either an object containing vdom node attributes or a string based id",
                    "name": "opts"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "description": "Internal flag, do not use it",
                    "name": "index"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "optional": true,
                    "description": "Internal flag, do not use it",
                    "name": "parentNode"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "{Number} index\r    {String} parentId\r    {Object} vdom"
                }
            ],
            "name": "findVdomChild",
            "longname": "VDom.findVdomChild",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.findVdomChild",
            "$kind": "method",
            "id": 1943,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     * Convenience shortcut for findVdomChild(vdom, {flag: flag});\r\n     * @param {Object} vdom\r\n     * @param {String} flag The flag reference specified on the target vdom child node\r\n     * @returns {Object} vdom\r\n     */",
            "meta": {
                "range": [
                    4586,
                    4718
                ],
                "filename": "VDom.mjs",
                "lineno": 120,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061648",
                    "name": "VDom.getByFlag",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "flag"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Convenience shortcut for findVdomChild(vdom, {flag: flag});",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "The flag reference specified on the target vdom child node",
                    "name": "flag"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "vdom"
                }
            ],
            "name": "getByFlag",
            "longname": "VDom.getByFlag",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getByFlag",
            "$kind": "method",
            "id": 1944,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     * Get the ids of all child nodes of the given vdom tree\r\n     * @param vdom\r\n     * @param [childIds=[]]\r\n     * @returns {Array} childIds\r\n     */",
            "meta": {
                "range": [
                    4889,
                    5229
                ],
                "filename": "VDom.mjs",
                "lineno": 131,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061671",
                    "name": "VDom.getChildIds",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "childIds"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Get the ids of all child nodes of the given vdom tree",
            "params": [
                {
                    "name": "vdom"
                },
                {
                    "optional": true,
                    "defaultvalue": "[]",
                    "name": "childIds"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "childIds"
                }
            ],
            "name": "getChildIds",
            "longname": "VDom.getChildIds",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getChildIds",
            "$kind": "method",
            "id": 1945,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Object} vdom\r\n     * @param {Number} index\r\n     * @returns {Array}\r\n     */",
            "meta": {
                "range": [
                    5347,
                    5665
                ],
                "filename": "VDom.mjs",
                "lineno": 151,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061721",
                    "name": "VDom.getColumnNodes",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "name": "getColumnNodes",
            "longname": "VDom.getColumnNodes",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getColumnNodes",
            "$kind": "method",
            "id": 1946,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Object} vdom\r\n     * @param {Number} index\r\n     * @returns {Array}\r\n     */",
            "meta": {
                "range": [
                    5783,
                    5894
                ],
                "filename": "VDom.mjs",
                "lineno": 171,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061769",
                    "name": "VDom.getColumnNodesIds",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "name": "getColumnNodesIds",
            "longname": "VDom.getColumnNodesIds",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getColumnNodesIds",
            "$kind": "method",
            "id": 1947,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Object} vdom\r\n     * @param {String} flag\r\n     * @param {Array} [matchArray]\r\n     * @return {Array} an array of vdom nodes which match the flag\r\n     */",
            "meta": {
                "range": [
                    6090,
                    6620
                ],
                "filename": "VDom.mjs",
                "lineno": 182,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061790",
                    "name": "VDom.getFlags",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "flag",
                        "matchArray"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "flag"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "optional": true,
                    "name": "matchArray"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "an array of vdom nodes which match the flag"
                }
            ],
            "name": "getFlags",
            "longname": "VDom.getFlags",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getFlags",
            "$kind": "method",
            "id": 1948,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     * Insert a given nodeToInsert after a targetNode inside a given vdom tree\r\n     * @param {Object} vdom The vdom tree containing the targetNode\r\n     * @param {Object} nodeToInsert The new vdom to insert\r\n     * @param {Object|String} targetNodeId Either a vdom node or a vdom node id\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    6963,
                    7102
                ],
                "filename": "VDom.mjs",
                "lineno": 211,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061861",
                    "name": "VDom.insertAfterNode",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "nodeToInsert",
                        "targetNodeId"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Insert a given nodeToInsert after a targetNode inside a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The vdom tree containing the targetNode",
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The new vdom to insert",
                    "name": "nodeToInsert"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either a vdom node or a vdom node id",
                    "name": "targetNodeId"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "insertAfterNode",
            "longname": "VDom.insertAfterNode",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.insertAfterNode",
            "$kind": "method",
            "id": 1949,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     * Insert a given nodeToInsert before a targetNode inside a given vdom tree\r\n     * @param {Object} vdom The vdom tree containing the targetNode\r\n     * @param {Object} nodeToInsert The new vdom to insert\r\n     * @param {Object|String} targetNodeId Either a vdom node or a vdom node id\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    7446,
                    7585
                ],
                "filename": "VDom.mjs",
                "lineno": 222,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061877",
                    "name": "VDom.insertBeforeNode",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "nodeToInsert",
                        "targetNodeId"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Insert a given nodeToInsert before a targetNode inside a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The vdom tree containing the targetNode",
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The new vdom to insert",
                    "name": "nodeToInsert"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either a vdom node or a vdom node id",
                    "name": "targetNodeId"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "insertBeforeNode",
            "longname": "VDom.insertBeforeNode",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.insertBeforeNode",
            "$kind": "method",
            "id": 1950,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     * Insert a given nodeToInsert before a targetNode inside a given vdom tree\r\n     * @param {Object} vdom The vdom tree containing the targetNode\r\n     * @param {Object} nodeToInsert The new vdom to insert\r\n     * @param {Object|String} targetNodeId Either a vdom node or a vdom node id\r\n     * @param {Boolean} insertBefore true inserts the new node at the same index, index+1 otherwise\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    8030,
                    8535
                ],
                "filename": "VDom.mjs",
                "lineno": 234,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061893",
                    "name": "VDom.insertNode",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "nodeToInsert",
                        "targetNodeId",
                        "insertBefore"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Insert a given nodeToInsert before a targetNode inside a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The vdom tree containing the targetNode",
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The new vdom to insert",
                    "name": "nodeToInsert"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either a vdom node or a vdom node id",
                    "name": "targetNodeId"
                },
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true inserts the new node at the same index, index+1 otherwise",
                    "name": "insertBefore"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "insertNode",
            "longname": "VDom.insertNode",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.insertNode",
            "$kind": "method",
            "id": 1951,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     * Search vdom child nodes by id or opts object for a given vdom tree\r\n     * @param {Object} [vdom]\r\n     * @param {Object|String} opts Either an object containing vdom node attributes or a string based id\r\n     * @returns {Boolean} true in case the node was found & removed\r\n     */",
            "meta": {
                "range": [
                    8842,
                    9081
                ],
                "filename": "VDom.mjs",
                "lineno": 257,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061959",
                    "name": "VDom.removeVdomChild",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Search vdom child nodes by id or opts object for a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "optional": true,
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either an object containing vdom node attributes or a string based id",
                    "name": "opts"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the node was found & removed"
                }
            ],
            "name": "removeVdomChild",
            "longname": "VDom.removeVdomChild",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.removeVdomChild",
            "$kind": "method",
            "id": 1952,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     * Replaces a child node inside a vdom tree by a given id\r\n     * @param {Object} vdom\r\n     * @param {String} id\r\n     * @param {Object} newChildNode\r\n     * @returns {Boolean} true in case the node was found and replaced\r\n     */",
            "meta": {
                "range": [
                    9335,
                    9985
                ],
                "filename": "VDom.mjs",
                "lineno": 275,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100061994",
                    "name": "VDom.replaceVdomChild",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "id",
                        "newChildNode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Replaces a child node inside a vdom tree by a given id",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "id"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "newChildNode"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the node was found and replaced"
                }
            ],
            "name": "replaceVdomChild",
            "longname": "VDom.replaceVdomChild",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.replaceVdomChild",
            "$kind": "method",
            "id": 1953,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\r\n     * Neo.vdom.Helper will create ids for each vnode, so we need to sync them into the vdom\r\n     * @param {Neo.vdom.VNode} vnode\r\n     * @param {Object} vdom\r\n     */",
            "meta": {
                "range": [
                    10172,
                    10905
                ],
                "filename": "VDom.mjs",
                "lineno": 306,
                "columnno": 4,
                "path": "C:\\Users\\CZ 3\\Desktop\\COVID-19\\src\\util",
                "code": {
                    "id": "astnode100062073",
                    "name": "VDom.syncVdomIds",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vnode",
                        "vdom"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Neo.vdom.Helper will create ids for each vnode, so we need to sync them into the vdom",
            "params": [
                {
                    "type": {
                        "names": [
                            "Neo.vdom.VNode"
                        ]
                    },
                    "name": "vnode"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                }
            ],
            "name": "syncVdomIds",
            "longname": "VDom.syncVdomIds",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.syncVdomIds",
            "$kind": "method",
            "id": 1954,
            "neoClassName": "Neo.util.VDom"
        }
    ]
}