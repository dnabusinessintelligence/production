{
    "classData": [
        {
            "comment": "/**\r\n * The worker manager lives inside the main thread and creates the App, Data & VDom worker.\r\n * Also responsible for sending messages from the main thread to the different workers.\r\n * @class Neo.worker.Manager\r\n * @extends Neo.core.Base\r\n * @singleton\r\n */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 8,
                "columnno": 0,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "description": "The worker manager lives inside the main thread and creates the App, Data & VDom worker.\rAlso responsible for sending messages from the main thread to the different workers.",
            "kind": "class",
            "name": "Manager",
            "augments": [
                "Neo.core.Base"
            ],
            "tags": [
                {
                    "originalTitle": "singleton",
                    "title": "singleton",
                    "text": ""
                }
            ],
            "memberof": "Neo.worker",
            "longname": "Neo.worker.Manager",
            "scope": "static",
            "$longname": "Neo.worker.Manager",
            "$kind": "class",
            "id": 2020,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n         * @member {String} className='Neo.worker.Manager'\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 21,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.worker.Manager'",
            "access": "private",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 2021,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n         * @member {String} ntype='worker-manager'\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 26,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "kind": "member",
            "name": "ntype",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'worker-manager'",
            "access": "private",
            "longname": "ntype",
            "scope": "global",
            "$longname": "ntype",
            "$kind": "property",
            "id": 2022,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n         * @member {boolean} singleton=true\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 31,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "kind": "member",
            "name": "singleton",
            "type": {
                "names": [
                    "boolean"
                ]
            },
            "defaultvalue": true,
            "access": "private",
            "longname": "singleton",
            "scope": "global",
            "$longname": "singleton",
            "$kind": "property",
            "id": 2023,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n         * The base path for the worker file URLs, can e.g. get set inside the index.html.\r\n         * @member {String|null} basePath=Neo.config.workerBasePath || 'worker/'\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 37,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "description": "The base path for the worker file URLs, can e.g. get set inside the index.html.",
            "kind": "member",
            "name": "basePath",
            "type": {
                "names": [
                    "String",
                    "null"
                ]
            },
            "defaultvalue": "Neo.config.workerBasePath",
            "access": "private",
            "longname": "basePath",
            "scope": "global",
            "$longname": "basePath",
            "$kind": "property",
            "id": 2024,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n         * @member {String[]|Neo.core.Base[]|null} mixins=[Observable, RemoteMethodAccess]\r\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 41,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "kind": "member",
            "name": "mixins",
            "type": {
                "names": [
                    "Array.<String>",
                    "Array.<Neo.core.Base>",
                    "null"
                ]
            },
            "defaultvalue": "[Observable, RemoteMethodAccess]\r",
            "description": "RemoteMethodAccess]",
            "longname": "mixins",
            "scope": "global",
            "$longname": "mixins",
            "$kind": "property",
            "id": 2025,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n         * True in case the current browser supports window.SharedWorker.\r\n         * @member {Boolean} sharedWorkersEnabled=false\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 47,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "description": "True in case the current browser supports window.SharedWorker.",
            "kind": "member",
            "name": "sharedWorkersEnabled",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "defaultvalue": false,
            "access": "private",
            "longname": "sharedWorkersEnabled",
            "scope": "global",
            "$longname": "sharedWorkersEnabled",
            "$kind": "property",
            "id": 2026,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n         * Internal flag to stop the worker communication in case their creation fails\r\n         * @member {Boolean} stopCommunication=false\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 53,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "description": "Internal flag to stop the worker communication in case their creation fails",
            "kind": "member",
            "name": "stopCommunication",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "defaultvalue": false,
            "access": "private",
            "longname": "stopCommunication",
            "scope": "global",
            "$longname": "stopCommunication",
            "$kind": "property",
            "id": 2027,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n         * True in case the current browser supports window.Worker.\r\n         * The neo.mjs framework is not able to run without web workers.\r\n         * @member {Boolean} sharedWorkersEnabled=false\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 60,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "description": "True in case the current browser supports window.Worker.\rThe neo.mjs framework is not able to run without web workers.",
            "kind": "member",
            "name": "sharedWorkersEnabled",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "defaultvalue": false,
            "access": "private",
            "longname": "sharedWorkersEnabled",
            "scope": "global",
            "$longname": "sharedWorkersEnabled",
            "$kind": "property",
            "id": 2028,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n         * Contains the fileNames for the App, Data & Vdom workers\r\n         * @member {Object} workers\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 66,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {}
            },
            "description": "Contains the fileNames for the App, Data & Vdom workers",
            "kind": "member",
            "name": "workers",
            "type": {
                "names": [
                    "Object"
                ]
            },
            "access": "private",
            "longname": "workers",
            "scope": "global",
            "$longname": "workers",
            "$kind": "property",
            "id": 2029,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Object} config\r\n     */",
            "meta": {
                "range": [
                    2860,
                    4066
                ],
                "filename": "Manager.mjs",
                "lineno": 83,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100065756",
                    "name": "Manager",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "config"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "config"
                }
            ],
            "name": "Manager",
            "longname": "Manager",
            "kind": "class",
            "scope": "global",
            "$longname": "Manager",
            "$kind": "constructor",
            "id": 2030,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     *\r\n     */",
            "meta": {
                "range": [
                    4100,
                    4423
                ],
                "filename": "Manager.mjs",
                "lineno": 114,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100065875",
                    "name": "Manager#detectFeatures",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "name": "detectFeatures",
            "longname": "Manager#detectFeatures",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "params": [],
            "$longname": "Manager#detectFeatures",
            "$kind": "method",
            "id": 2031,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {String|Worker} name\r\n     * @returns {Worker}\r\n     */",
            "meta": {
                "range": [
                    4519,
                    4618
                ],
                "filename": "Manager.mjs",
                "lineno": 133,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100065910",
                    "name": "Manager#getWorker",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "name"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "String",
                            "Worker"
                        ]
                    },
                    "name": "name"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Worker"
                        ]
                    }
                }
            ],
            "name": "getWorker",
            "longname": "Manager#getWorker",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#getWorker",
            "$kind": "method",
            "id": 2032,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     * Creates a web worker using the passed options as well as adding error & message event listeners.\r\n     * @param {Object} opts\r\n     * @returns {Worker}\r\n     */",
            "meta": {
                "range": [
                    4804,
                    5359
                ],
                "filename": "Manager.mjs",
                "lineno": 142,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100065928",
                    "name": "Manager#createWorker",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Creates a web worker using the passed options as well as adding error & message event listeners.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "opts"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Worker"
                        ]
                    }
                }
            ],
            "name": "createWorker",
            "longname": "Manager#createWorker",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#createWorker",
            "$kind": "method",
            "id": 2033,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     * Calls createWorker for each worker inside the this.workers config.\r\n     */",
            "meta": {
                "range": [
                    5460,
                    6266
                ],
                "filename": "Manager.mjs",
                "lineno": 158,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100065996",
                    "name": "Manager#createWorkers",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Calls createWorker for each worker inside the this.workers config.",
            "name": "createWorkers",
            "longname": "Manager#createWorkers",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "params": [],
            "$longname": "Manager#createWorkers",
            "$kind": "method",
            "id": 2034,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     * Handler method for worker error events\r\n     * @param {Object} e\r\n     */",
            "meta": {
                "range": [
                    6365,
                    6565
                ],
                "filename": "Manager.mjs",
                "lineno": 190,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100066098",
                    "name": "Manager#onWorkerError",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "e"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Handler method for worker error events",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "e"
                }
            ],
            "name": "onWorkerError",
            "longname": "Manager#onWorkerError",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#onWorkerError",
            "$kind": "method",
            "id": 2035,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     * Handler method for worker message events\r\n     * @param {Object} e\r\n     */",
            "meta": {
                "range": [
                    6666,
                    8626
                ],
                "filename": "Manager.mjs",
                "lineno": 200,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100066118",
                    "name": "Manager#onWorkerMessage",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "e"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Handler method for worker message events",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "e"
                }
            ],
            "name": "onWorkerMessage",
            "longname": "Manager#onWorkerMessage",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#onWorkerMessage",
            "$kind": "method",
            "id": 2036,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {String} path\r\n     */",
            "meta": {
                "range": [
                    8689,
                    8901
                ],
                "filename": "Manager.mjs",
                "lineno": 269,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100066340",
                    "name": "Manager#loadApplication",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "path"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "path"
                }
            ],
            "name": "loadApplication",
            "longname": "Manager#loadApplication",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#loadApplication",
            "$kind": "method",
            "id": 2037,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     * Sends a message to each worker defined inside the this.workers config.\r\n     * @param msg\r\n     */",
            "meta": {
                "range": [
                    9025,
                    9159
                ],
                "filename": "Manager.mjs",
                "lineno": 281,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100066362",
                    "name": "Manager#broadcast",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "msg"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Sends a message to each worker defined inside the this.workers config.",
            "params": [
                {
                    "name": "msg"
                }
            ],
            "name": "broadcast",
            "longname": "Manager#broadcast",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#broadcast",
            "$kind": "method",
            "id": 2038,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {String} replyId\r\n     */",
            "meta": {
                "range": [
                    9225,
                    9570
                ],
                "filename": "Manager.mjs",
                "lineno": 291,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100066388",
                    "name": "Manager#resolveDomOperationPromise",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "replyId"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "replyId"
                }
            ],
            "name": "resolveDomOperationPromise",
            "longname": "Manager#resolveDomOperationPromise",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#resolveDomOperationPromise",
            "$kind": "method",
            "id": 2039,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {String} dest app, data or vdom\r\n     * @param {Object} opts configs for Neo.worker.Message\r\n     * @param {Array} [transfer] An optional array of Transferable objects to transfer ownership of.\r\n     * If the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\r\n     * and becomes available only to the worker it was sent to.\r\n     * @returns {Neo.worker.Message}\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    10050,
                    10581
                ],
                "filename": "Manager.mjs",
                "lineno": 314,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100066422",
                    "name": "Manager#sendMessage",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "dest",
                        "opts",
                        "transfer"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "app, data or vdom",
                    "name": "dest"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "configs for Neo.worker.Message",
                    "name": "opts"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "optional": true,
                    "description": "An optional array of Transferable objects to transfer ownership of.\rIf the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\rand becomes available only to the worker it was sent to.",
                    "name": "transfer"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Neo.worker.Message"
                        ]
                    }
                }
            ],
            "access": "private",
            "name": "sendMessage",
            "longname": "Manager#sendMessage",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#sendMessage",
            "$kind": "method",
            "id": 2040,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {String} dest app, data or vdom\r\n     * @param {Object} opts configs for Neo.worker.Message\r\n     * @param {Array} [transfer] An optional array of Transferable objects to transfer ownership of.\r\n     * If the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\r\n     * and becomes available only to the worker it was sent to.\r\n     * @returns {Promise<any>}\r\n     */",
            "meta": {
                "range": [
                    11038,
                    11401
                ],
                "filename": "Manager.mjs",
                "lineno": 341,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\worker",
                "code": {
                    "id": "astnode100066474",
                    "name": "Manager#promiseMessage",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "dest",
                        "opts",
                        "transfer"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "app, data or vdom",
                    "name": "dest"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "configs for Neo.worker.Message",
                    "name": "opts"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "optional": true,
                    "description": "An optional array of Transferable objects to transfer ownership of.\rIf the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\rand becomes available only to the worker it was sent to.",
                    "name": "transfer"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Promise.<any>"
                        ]
                    }
                }
            ],
            "name": "promiseMessage",
            "longname": "Manager#promiseMessage",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#promiseMessage",
            "$kind": "method",
            "id": 2041,
            "neoClassName": "Neo.worker.Manager"
        }
    ]
}