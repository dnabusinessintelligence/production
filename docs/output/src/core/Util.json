{
    "classData": [
        {
            "comment": "/**\r\n * @class Neo.core.Util\r\n * @extends Neo.core.Base\r\n */",
            "meta": {
                "filename": "Util.mjs",
                "lineno": 3,
                "columnno": 0,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {}
            },
            "kind": "class",
            "name": "Util",
            "augments": [
                "Neo.core.Base"
            ],
            "memberof": "Neo.core",
            "longname": "Neo.core.Util",
            "scope": "static",
            "$longname": "Neo.core.Util",
            "$kind": "class",
            "id": 631,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n         * A regex to remove camel case syntax\r\n         * @member {RegExp} decamelRegEx=/([a-z])([A-Z])/g\r\n         * @private\r\n         * @static\r\n         */",
            "meta": {
                "filename": "Util.mjs",
                "lineno": 15,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {}
            },
            "description": "A regex to remove camel case syntax",
            "kind": "member",
            "name": "decamelRegEx",
            "type": {
                "names": [
                    "RegExp"
                ]
            },
            "defaultvalue": "/([a-z])([A-Z])/g",
            "access": "private",
            "scope": "static",
            "longname": "decamelRegEx",
            "$longname": "decamelRegEx",
            "$kind": "property",
            "id": 632,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n         * @member {String} className='Neo.core.Util'\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Util.mjs",
                "lineno": 23,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {}
            },
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.core.Util'",
            "access": "private",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 633,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n         * @member {String} ntype='core-util'\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Util.mjs",
                "lineno": 28,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {}
            },
            "kind": "member",
            "name": "ntype",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'core-util'",
            "access": "private",
            "longname": "ntype",
            "scope": "global",
            "$longname": "ntype",
            "$kind": "property",
            "id": 634,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Converts a syles object which can use camelcase syntax into a styles string\r\n     * @param {Object} styles The styles object\r\n     * @returns {String} The styles string (DOM ready)\r\n     */",
            "meta": {
                "range": [
                    906,
                    1205
                ],
                "filename": "Util.mjs",
                "lineno": 36,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023052",
                    "name": "Util.createStyles",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "styles"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Converts a syles object which can use camelcase syntax into a styles string",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The styles object",
                    "name": "styles"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "The styles string (DOM ready)"
                }
            ],
            "name": "createStyles",
            "longname": "Util.createStyles",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.createStyles",
            "$kind": "method",
            "id": 635,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Makes the first character of a string uppercase\r\n     * @param {String} string\r\n     * @returns {Boolean|String} Returns false for non string inputs\r\n     */",
            "meta": {
                "range": [
                    1388,
                    1506
                ],
                "filename": "Util.mjs",
                "lineno": 53,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023098",
                    "name": "Util.capitalize",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "string"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Makes the first character of a string uppercase",
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "string"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean",
                            "String"
                        ]
                    },
                    "description": "Returns false for non string inputs"
                }
            ],
            "name": "capitalize",
            "longname": "Util.capitalize",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.capitalize",
            "$kind": "method",
            "id": 636,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Transforms all uppercase characters of a string into lowercase.\r\n     * Does not touch special characters.\r\n     * @param {String} value The input containing uppercase characters\r\n     * @returns {String} The lowercase output\r\n     */",
            "meta": {
                "range": [
                    1766,
                    1869
                ],
                "filename": "Util.mjs",
                "lineno": 63,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023122",
                    "name": "Util.decamel",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Transforms all uppercase characters of a string into lowercase.\rDoes not touch special characters.",
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "The input containing uppercase characters",
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "The lowercase output"
                }
            ],
            "name": "decamel",
            "longname": "Util.decamel",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.decamel",
            "$kind": "method",
            "id": 637,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Transforms a styles string into a styles object using camelcase syntax\r\n     * @param {String} string The styles string to parse\r\n     * @returns {Object} The camelcase styles object\r\n     */",
            "meta": {
                "range": [
                    2086,
                    3037
                ],
                "filename": "Util.mjs",
                "lineno": 72,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023139",
                    "name": "Util.createStyleObject",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "string"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Transforms a styles string into a styles object using camelcase syntax",
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "The styles string to parse",
                    "name": "string"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The camelcase styles object"
                }
            ],
            "name": "createStyleObject",
            "longname": "Util.createStyleObject",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.createStyleObject",
            "$kind": "method",
            "id": 638,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Returns true if the passed value is an array\r\n     * @param {Object} value The value to test\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    3191,
                    3258
                ],
                "filename": "Util.mjs",
                "lineno": 107,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023237",
                    "name": "Util.isArray",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if the passed value is an array",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The value to test",
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isArray",
            "longname": "Util.isArray",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.isArray",
            "$kind": "method",
            "id": 639,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Returns true if the passed value is a boolean\r\n     * @param {Object} value The value to test\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    3413,
                    3489
                ],
                "filename": "Util.mjs",
                "lineno": 116,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023248",
                    "name": "Util.isBoolean",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if the passed value is a boolean",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The value to test",
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isBoolean",
            "longname": "Util.isBoolean",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.isBoolean",
            "$kind": "method",
            "id": 640,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Returns true if the passed value is not undefined\r\n     * @param {Object} value The value to test\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    3648,
                    3726
                ],
                "filename": "Util.mjs",
                "lineno": 125,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023258",
                    "name": "Util.isDefined",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if the passed value is not undefined",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The value to test",
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isDefined",
            "longname": "Util.isDefined",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.isDefined",
            "$kind": "method",
            "id": 641,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Returns true if the passed value is an empty Array, Object or String\r\n     * @param {Array|Object|String} value The value to test\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    3917,
                    4247
                ],
                "filename": "Util.mjs",
                "lineno": 134,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023268",
                    "name": "Util.isEmpty",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if the passed value is an empty Array, Object or String",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object",
                            "String"
                        ]
                    },
                    "description": "The value to test",
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isEmpty",
            "longname": "Util.isEmpty",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.isEmpty",
            "$kind": "method",
            "id": 642,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Returns true if the passed value is a function\r\n     * @param {Function} value The value to test\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    4405,
                    4483
                ],
                "filename": "Util.mjs",
                "lineno": 155,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023316",
                    "name": "Util.isFunction",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if the passed value is a function",
            "params": [
                {
                    "type": {
                        "names": [
                            "function"
                        ]
                    },
                    "description": "The value to test",
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isFunction",
            "longname": "Util.isFunction",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.isFunction",
            "$kind": "method",
            "id": 643,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Returns true if the passed value is a number. Returns false for non-finite numbers\r\n     * @param {Number} value The value to test\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    4675,
                    4767
                ],
                "filename": "Util.mjs",
                "lineno": 164,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023326",
                    "name": "Util.isNumber",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if the passed value is a number. Returns false for non-finite numbers",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "The value to test",
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isNumber",
            "longname": "Util.isNumber",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.isNumber",
            "$kind": "method",
            "id": 644,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Returns true if the passed value is an object\r\n     * @param {Object} value The value to test\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    4922,
                    5039
                ],
                "filename": "Util.mjs",
                "lineno": 173,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023340",
                    "name": "Util.isObject",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if the passed value is an object",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The value to test",
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isObject",
            "longname": "Util.isObject",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.isObject",
            "$kind": "method",
            "id": 645,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Returns true if the passed value is a string\r\n     * @param {String} value The value to test\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    5193,
                    5267
                ],
                "filename": "Util.mjs",
                "lineno": 182,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023361",
                    "name": "Util.isString",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if the passed value is a string",
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "The value to test",
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isString",
            "longname": "Util.isString",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.isString",
            "$kind": "method",
            "id": 646,
            "neoClassName": "Neo.core.Util"
        },
        {
            "comment": "/**\r\n     * Converts any iterable (strings, numeric indices and a length property) into a true array\r\n     * @param {Object|String} iterable\r\n     * @param {Number} [start=0] start index\r\n     * @param {Number} [end=iterable.length] end index\r\n     * @returns {Array}\r\n     */",
            "meta": {
                "range": [
                    5557,
                    5889
                ],
                "filename": "Util.mjs",
                "lineno": 193,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\core",
                "code": {
                    "id": "astnode100023371",
                    "name": "Util.toArray",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "iterable",
                        "start",
                        "end"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Converts any iterable (strings, numeric indices and a length property) into a true array",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "name": "iterable"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": 0,
                    "description": "start index",
                    "name": "start"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": "iterable.length",
                    "description": "end index",
                    "name": "end"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "name": "toArray",
            "longname": "Util.toArray",
            "kind": "function",
            "memberof": "Util",
            "scope": "static",
            "$longname": "Util.toArray",
            "$kind": "method",
            "id": 647,
            "neoClassName": "Neo.core.Util"
        }
    ]
}