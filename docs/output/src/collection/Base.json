{
    "classData": [
        {
            "comment": "/**\r\n * @class Neo.collection.Base\r\n * @extends Neo.core.Base\r\n */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 16,
                "columnno": 0,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "kind": "class",
            "name": "Base",
            "augments": [
                "Neo.core.Base"
            ],
            "memberof": "Neo.collection",
            "longname": "Neo.collection.Base",
            "scope": "static",
            "$longname": "Neo.collection.Base",
            "$kind": "class",
            "id": 1,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * True automatically applies the core/Observable.mjs mixin\r\n         * @member {Boolean} observable=true\r\n         * @static\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 27,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "True automatically applies the core/Observable.mjs mixin",
            "kind": "member",
            "name": "observable",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "defaultvalue": true,
            "scope": "static",
            "longname": "observable",
            "$longname": "observable",
            "$kind": "property",
            "id": 2,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * @member {String} className='Neo.collection.Base'\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 35,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.collection.Base'",
            "access": "private",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 3,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * @member {String} ntype='collection'\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 40,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "kind": "member",
            "name": "ntype",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'collection'",
            "access": "private",
            "longname": "ntype",
            "scope": "global",
            "$longname": "ntype",
            "$kind": "property",
            "id": 4,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * When filtering the collection for the first time, allItems will become a new collection for the unfiltered\r\n         * state, using this id as the sourceCollectionId\r\n         * @member {Neo.collection.Base|null} allItems\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 47,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "When filtering the collection for the first time, allItems will become a new collection for the unfiltered\rstate, using this id as the sourceCollectionId",
            "kind": "member",
            "name": "allItems",
            "type": {
                "names": [
                    "Neo.collection.Base",
                    "null"
                ]
            },
            "access": "private",
            "longname": "allItems",
            "scope": "global",
            "$longname": "allItems",
            "$kind": "property",
            "id": 5,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * True to sort the collection items when adding / inserting new ones\r\n         * @member {Boolean} autoSort\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 52,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "True to sort the collection items when adding / inserting new ones",
            "kind": "member",
            "name": "autoSort",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "longname": "autoSort",
            "scope": "global",
            "$longname": "autoSort",
            "$kind": "property",
            "id": 6,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * Use 'primitive' for default filters, use 'advanced' for filters using a filterBy method\r\n         * which need to iterate over other collection items\r\n         * @member {String} filterMode='primitive'\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 58,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "Use 'primitive' for default filters, use 'advanced' for filters using a filterBy method\rwhich need to iterate over other collection items",
            "kind": "member",
            "name": "filterMode",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'primitive'",
            "longname": "filterMode",
            "scope": "global",
            "$longname": "filterMode",
            "$kind": "property",
            "id": 7,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * An Array containing Neo.util.Filter config objects or instances\r\n         * @member {Array} filters_=[]\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 63,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "An Array containing Neo.util.Filter config objects or instances",
            "kind": "member",
            "name": "filters_",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": "[]\r",
            "longname": "filters_",
            "scope": "global",
            "$longname": "filters_",
            "$kind": "property",
            "id": 8,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * The unique(!) key property of each collection item\r\n         * @member {Array} items_=[]\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 68,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "The unique(!) key property of each collection item",
            "kind": "member",
            "name": "items_",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": "[]\r",
            "longname": "items_",
            "scope": "global",
            "$longname": "items_",
            "$kind": "property",
            "id": 9,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * The unique(!) key property of each collection item\r\n         * @member {string} keyProperty='id'\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 73,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "The unique(!) key property of each collection item",
            "kind": "member",
            "name": "keyProperty",
            "type": {
                "names": [
                    "string"
                ]
            },
            "defaultvalue": "'id'",
            "longname": "keyProperty",
            "scope": "global",
            "$longname": "keyProperty",
            "$kind": "property",
            "id": 10,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * A map containing the key & reference of each collection item for faster access\r\n         * @member {Map} map_=null\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 78,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "A map containing the key & reference of each collection item for faster access",
            "kind": "member",
            "name": "map_",
            "type": {
                "names": [
                    "Map"
                ]
            },
            "defaultvalue": null,
            "longname": "map_",
            "scope": "global",
            "$longname": "map_",
            "$kind": "property",
            "id": 11,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * An internal Array of the sort directions for faster access\r\n         * @member {Array} sortDirections=null\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 84,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "An internal Array of the sort directions for faster access",
            "kind": "member",
            "name": "sortDirections",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": null,
            "access": "private",
            "longname": "sortDirections",
            "scope": "global",
            "$longname": "sortDirections",
            "$kind": "property",
            "id": 12,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * An internal Array of the sort properties for faster access\r\n         * @member {Array} sortProperties=null\r\n         * @private\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 90,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "An internal Array of the sort properties for faster access",
            "kind": "member",
            "name": "sortProperties",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": null,
            "access": "private",
            "longname": "sortProperties",
            "scope": "global",
            "$longname": "sortProperties",
            "$kind": "property",
            "id": 13,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * An Array containing Neo.util.Sorter config objects or instances\r\n         * @member {Array} sorters_=[]\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 95,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "An Array containing Neo.util.Sorter config objects or instances",
            "kind": "member",
            "name": "sorters_",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": "[]\r",
            "longname": "sorters_",
            "scope": "global",
            "$longname": "sorters_",
            "$kind": "property",
            "id": 14,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n         * The id of another collection instance to use as this data source\r\n         * @member {String|null} sourceId_=null\r\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 100,
                "columnno": 8,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "The id of another collection instance to use as this data source",
            "kind": "member",
            "name": "sourceId_",
            "type": {
                "names": [
                    "String",
                    "null"
                ]
            },
            "defaultvalue": null,
            "longname": "sourceId_",
            "scope": "global",
            "$longname": "sourceId_",
            "$kind": "property",
            "id": 15,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param config\r\n     */",
            "meta": {
                "range": [
                    3461,
                    4212
                ],
                "filename": "Base.mjs",
                "lineno": 107,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000106",
                    "name": "Base",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "config"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "name": "config"
                }
            ],
            "name": "Base",
            "longname": "Base",
            "kind": "class",
            "scope": "global",
            "$longname": "Base",
            "$kind": "constructor",
            "id": 16,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Adds one or more items to the end of the collection and returns the new length of the collection.\r\n     * @param {Array|Object} item The item(s) to add\r\n     * @returns {Number} the collection count\r\n     */",
            "meta": {
                "range": [
                    4445,
                    4533
                ],
                "filename": "Base.mjs",
                "lineno": 133,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000193",
                    "name": "Base#add",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Adds one or more items to the end of the collection and returns the new length of the collection.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "description": "The item(s) to add",
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "add",
            "longname": "Base#add",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#add",
            "$kind": "method",
            "id": 17,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Array} value\r\n     * @param {Array} oldValue\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    4645,
                    5001
                ],
                "filename": "Base.mjs",
                "lineno": 144,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000211",
                    "name": "Base#afterSetFilters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "private",
            "name": "afterSetFilters",
            "longname": "Base#afterSetFilters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#afterSetFilters",
            "$kind": "method",
            "id": 18,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Array} value\r\n     * @param {Array} oldValue\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    5113,
                    5443
                ],
                "filename": "Base.mjs",
                "lineno": 165,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000260",
                    "name": "Base#afterSetItems",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "private",
            "name": "afterSetItems",
            "longname": "Base#afterSetItems",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#afterSetItems",
            "$kind": "method",
            "id": 19,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Array} value\r\n     * @param {Array} oldValue\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    5555,
                    5962
                ],
                "filename": "Base.mjs",
                "lineno": 184,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000309",
                    "name": "Base#afterSetSorters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "private",
            "name": "afterSetSorters",
            "longname": "Base#afterSetSorters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#afterSetSorters",
            "$kind": "method",
            "id": 20,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Number|String} value\r\n     * @param {Number|String} oldValue\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    6090,
                    6789
                ],
                "filename": "Base.mjs",
                "lineno": 207,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000367",
                    "name": "Base#afterSetSourceId",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Number",
                            "String"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "private",
            "name": "afterSetSourceId",
            "longname": "Base#afterSetSourceId",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#afterSetSourceId",
            "$kind": "method",
            "id": 21,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Saves the sort property & direction multiplier of each sorter inside 2 arrays for faster access when sorting\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    6949,
                    7277
                ],
                "filename": "Base.mjs",
                "lineno": 235,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000440",
                    "name": "Base#applySorterConfigs",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Saves the sort property & direction multiplier of each sorter inside 2 arrays for faster access when sorting",
            "access": "private",
            "name": "applySorterConfigs",
            "longname": "Base#applySorterConfigs",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#applySorterConfigs",
            "$kind": "method",
            "id": 22,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Map|null} value\r\n     * @param {Map|null} oldValue\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    7395,
                    7477
                ],
                "filename": "Base.mjs",
                "lineno": 253,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000490",
                    "name": "Base#beforeSetMap",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Map",
                            "null"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Map",
                            "null"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "private",
            "name": "beforeSetMap",
            "longname": "Base#beforeSetMap",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#beforeSetMap",
            "$kind": "method",
            "id": 23,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Array} value\r\n     * @param {Array} oldValue\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    7589,
                    8895
                ],
                "filename": "Base.mjs",
                "lineno": 263,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000503",
                    "name": "Base#beforeSetFilters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "private",
            "name": "beforeSetFilters",
            "longname": "Base#beforeSetFilters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#beforeSetFilters",
            "$kind": "method",
            "id": 24,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Array} value\r\n     * @param {Array} oldValue\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    9007,
                    10182
                ],
                "filename": "Base.mjs",
                "lineno": 312,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000665",
                    "name": "Base#beforeSetSorters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "private",
            "name": "beforeSetSorters",
            "longname": "Base#beforeSetSorters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#beforeSetSorters",
            "$kind": "method",
            "id": 25,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param opts\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    10253,
                    11339
                ],
                "filename": "Base.mjs",
                "lineno": 357,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000815",
                    "name": "Base#cacheUpdate",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "name": "opts"
                }
            ],
            "access": "private",
            "name": "cacheUpdate",
            "longname": "Base#cacheUpdate",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#cacheUpdate",
            "$kind": "method",
            "id": 26,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Removes all items and clears the map\r\n     */",
            "meta": {
                "range": [
                    11410,
                    11522
                ],
                "filename": "Base.mjs",
                "lineno": 389,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100000984",
                    "name": "Base#clear",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes all items and clears the map",
            "name": "clear",
            "longname": "Base#clear",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#clear",
            "$kind": "method",
            "id": 27,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Clears all current filters and optionally restores the original ones in case they existed.\r\n     * @param {boolean} [restoreOriginalFilters=false]\r\n     */",
            "meta": {
                "range": [
                    11703,
                    11856
                ],
                "filename": "Base.mjs",
                "lineno": 400,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100001011",
                    "name": "Base#clearFilters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "restoreOriginalFilters"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Clears all current filters and optionally restores the original ones in case they existed.",
            "params": [
                {
                    "type": {
                        "names": [
                            "boolean"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": false,
                    "name": "restoreOriginalFilters"
                }
            ],
            "name": "clearFilters",
            "longname": "Base#clearFilters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#clearFilters",
            "$kind": "method",
            "id": 28,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Clears all current sorters and optionally restores the original ones in case they existed.\r\n     * Without restoreInitialState as true this will not affect the current sorting of this collection.\r\n     * @param {boolean} [restoreOriginalSorters=false]\r\n     */",
            "meta": {
                "range": [
                    12142,
                    12295
                ],
                "filename": "Base.mjs",
                "lineno": 409,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100001035",
                    "name": "Base#clearSorters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "restoreOriginalSorters"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Clears all current sorters and optionally restores the original ones in case they existed.\rWithout restoreInitialState as true this will not affect the current sorting of this collection.",
            "params": [
                {
                    "type": {
                        "names": [
                            "boolean"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": false,
                    "name": "restoreOriginalSorters"
                }
            ],
            "name": "clearSorters",
            "longname": "Base#clearSorters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#clearSorters",
            "$kind": "method",
            "id": 29,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @returns {Neo.collection.Base} The cloned collection\r\n     */",
            "meta": {
                "range": [
                    12390,
                    13228
                ],
                "filename": "Base.mjs",
                "lineno": 417,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100001059",
                    "name": "Base#clone",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "returns": [
                {
                    "type": {
                        "names": [
                            "Neo.collection.Base"
                        ]
                    },
                    "description": "The cloned collection"
                }
            ],
            "name": "clone",
            "longname": "Base#clone",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#clone",
            "$kind": "method",
            "id": 30,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Clears the map & items array before the super call\r\n     */",
            "meta": {
                "range": [
                    13313,
                    13457
                ],
                "filename": "Base.mjs",
                "lineno": 451,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100001185",
                    "name": "Base#destroy",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Clears the map & items array before the super call",
            "name": "destroy",
            "longname": "Base#destroy",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#destroy",
            "$kind": "method",
            "id": 31,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    13500,
                    16599
                ],
                "filename": "Base.mjs",
                "lineno": 463,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100001218",
                    "name": "Base#doSort",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "access": "private",
            "name": "doSort",
            "longname": "Base#doSort",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#doSort",
            "$kind": "method",
            "id": 32,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Resumes the collection events.\r\n     * If you started an update using the startSilentUpdateMode flag,\r\n     * you must use the endSilentUpdateMode param for this call.\r\n     * Using the endSilentUpdateMode param will not fire a mutation event.\r\n     * @param {Boolean} [endSilentUpdateMode]\r\n     * @see {@link Neo.collection.Base#startUpdate startUpdate}\r\n     */",
            "meta": {
                "range": [
                    16989,
                    17533
                ],
                "filename": "Base.mjs",
                "lineno": 562,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100001534",
                    "name": "Base#endUpdate",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "endSilentUpdateMode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Resumes the collection events.\rIf you started an update using the startSilentUpdateMode flag,\ryou must use the endSilentUpdateMode param for this call.\rUsing the endSilentUpdateMode param will not fire a mutation event.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "optional": true,
                    "name": "endSilentUpdateMode"
                }
            ],
            "see": [
                "{@link Neo.collection.Base#startUpdate startUpdate}"
            ],
            "name": "endUpdate",
            "longname": "Base#endUpdate",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#endUpdate",
            "$kind": "method",
            "id": 33,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    17576,
                    20441
                ],
                "filename": "Base.mjs",
                "lineno": 585,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100001606",
                    "name": "Base#filter",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "access": "private",
            "name": "filter",
            "longname": "Base#filter",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#filter",
            "$kind": "method",
            "id": 34,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns all items which match the property and value\r\n     * @param {Object|String} property\r\n     * @param {String|Number} value\r\n     * @returns {Array} Returns an empty Array in case no items are found\r\n     */",
            "meta": {
                "range": [
                    20680,
                    21648
                ],
                "filename": "Base.mjs",
                "lineno": 678,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100001951",
                    "name": "Base#find",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "property",
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns all items which match the property and value",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "name": "property"
                },
                {
                    "type": {
                        "names": [
                            "String",
                            "Number"
                        ]
                    },
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "Returns an empty Array in case no items are found"
                }
            ],
            "name": "find",
            "longname": "Base#find",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#find",
            "$kind": "method",
            "id": 35,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns all items in the collection for which the passed function returns true\r\n     * @param {function} fn The function to run for each item inside the start-end range. Return true for a match.\r\n     * @param {Object} fn.item The current collection item\r\n     * @param {Object} [scope=this] The scope in which the passed function gets executed\r\n     * @param {Number} [start=0] The start index\r\n     * @param {Number} [end=this.getCount()] The end index (up to, last value excluded)\r\n     * @returns {Array} Returns an empty Array in case no items are found\r\n     */",
            "meta": {
                "range": [
                    22241,
                    22616
                ],
                "filename": "Base.mjs",
                "lineno": 720,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002060",
                    "name": "Base#findBy",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "fn",
                        "scope",
                        "start",
                        "end"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns all items in the collection for which the passed function returns true",
            "params": [
                {
                    "type": {
                        "names": [
                            "function"
                        ]
                    },
                    "description": "The function to run for each item inside the start-end range. Return true for a match.",
                    "name": "fn"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The current collection item",
                    "name": "fn.item"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": "this",
                    "description": "The scope in which the passed function gets executed",
                    "name": "scope"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": 0,
                    "description": "The start index",
                    "name": "start"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": "this.getCount()",
                    "description": "The end index (up to, last value excluded)",
                    "name": "end"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "Returns an empty Array in case no items are found"
                }
            ],
            "name": "findBy",
            "longname": "Base#findBy",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#findBy",
            "$kind": "method",
            "id": 36,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the first item inside the collection\r\n     * @returns {Object}\r\n     */",
            "meta": {
                "range": [
                    22721,
                    22769
                ],
                "filename": "Base.mjs",
                "lineno": 741,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002125",
                    "name": "Base#first",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the first item inside the collection",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    }
                }
            ],
            "name": "first",
            "longname": "Base#first",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#first",
            "$kind": "method",
            "id": 37,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the object associated to the key, or undefined if there is none.\r\n     * @param key\r\n     * @returns {Object|undefined}\r\n     */",
            "meta": {
                "range": [
                    22931,
                    22983
                ],
                "filename": "Base.mjs",
                "lineno": 750,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002135",
                    "name": "Base#get",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the object associated to the key, or undefined if there is none.",
            "params": [
                {
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object",
                            "undefined"
                        ]
                    }
                }
            ],
            "name": "get",
            "longname": "Base#get",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#get",
            "$kind": "method",
            "id": 38,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the item for a given index\r\n     * @param {Number} index\r\n     * @returns {Object|undefined}\r\n     */",
            "meta": {
                "range": [
                    23118,
                    23175
                ],
                "filename": "Base.mjs",
                "lineno": 759,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002148",
                    "name": "Base#getAt",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the item for a given index",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object",
                            "undefined"
                        ]
                    }
                }
            ],
            "name": "getAt",
            "longname": "Base#getAt",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#getAt",
            "$kind": "method",
            "id": 39,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the length of the internal items array\r\n     * @returns {Number}\r\n     */",
            "meta": {
                "range": [
                    23282,
                    23337
                ],
                "filename": "Base.mjs",
                "lineno": 767,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002159",
                    "name": "Base#getCount",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the length of the internal items array",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    }
                }
            ],
            "name": "getCount",
            "longname": "Base#getCount",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#getCount",
            "$kind": "method",
            "id": 40,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @return {Number}\r\n     */",
            "meta": {
                "range": [
                    23396,
                    23462
                ],
                "filename": "Base.mjs",
                "lineno": 775,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002169",
                    "name": "Base#getCountMutations",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    }
                }
            ],
            "name": "getCountMutations",
            "longname": "Base#getCountMutations",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#getCountMutations",
            "$kind": "method",
            "id": 41,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the first matching filter for the given property config\r\n     * @param {String} property\r\n     * @return {Neo.collection.Filter|null}\r\n     */",
            "meta": {
                "range": [
                    23638,
                    23947
                ],
                "filename": "Base.mjs",
                "lineno": 784,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002177",
                    "name": "Base#getFilter",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "property"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the first matching filter for the given property config",
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "property"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Neo.collection.Filter",
                            "null"
                        ]
                    }
                }
            ],
            "name": "getFilter",
            "longname": "Base#getFilter",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#getFilter",
            "$kind": "method",
            "id": 42,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the key for a given index\r\n     * @param {Number} index\r\n     * @returns {Number|String|undefined}\r\n     */",
            "meta": {
                "range": [
                    24088,
                    24200
                ],
                "filename": "Base.mjs",
                "lineno": 803,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002220",
                    "name": "Base#getKeyAt",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the key for a given index",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String",
                            "undefined"
                        ]
                    }
                }
            ],
            "name": "getKeyAt",
            "longname": "Base#getKeyAt",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#getKeyAt",
            "$kind": "method",
            "id": 43,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns a shallow copy of a portion of the items array\r\n     * @param {Number} [start] Zero-based index at which to begin extraction.\r\n     * @param {Number} [end] Zero-based index before which to end extraction (extracts up to but not including end).\r\n     * @returns {Array}\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\r\n     */",
            "meta": {
                "range": [
                    24618,
                    24694
                ],
                "filename": "Base.mjs",
                "lineno": 815,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002241",
                    "name": "Base#getRange",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "start",
                        "end"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns a shallow copy of a portion of the items array",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "description": "Zero-based index at which to begin extraction.",
                    "name": "start"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "description": "Zero-based index before which to end extraction (extracts up to but not including end).",
                    "name": "end"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "tags": [
                {
                    "originalTitle": "link",
                    "title": "link",
                    "text": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice",
                    "value": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"
                }
            ],
            "name": "getRange",
            "longname": "Base#getRange",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#getRange",
            "$kind": "method",
            "id": 44,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the Source Collection in case the sourceCollectionId config was set\r\n     * @returns {Neo.collection.Base|undefined}\r\n     */",
            "meta": {
                "range": [
                    24853,
                    24930
                ],
                "filename": "Base.mjs",
                "lineno": 823,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002256",
                    "name": "Base#getSource",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the Source Collection in case the sourceCollectionId config was set",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Neo.collection.Base",
                            "undefined"
                        ]
                    }
                }
            ],
            "name": "getSource",
            "longname": "Base#getSource",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#getSource",
            "$kind": "method",
            "id": 45,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * Returns a boolean asserting whether a value has been associated to the key in the Collection or not\r\n     * @param {Number|String} key\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    25134,
                    25186
                ],
                "filename": "Base.mjs",
                "lineno": 833,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002272",
                    "name": "Base#has",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns a boolean asserting whether a value has been associated to the key in the Collection or not",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String"
                        ]
                    },
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "has",
            "longname": "Base#has",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#has",
            "$kind": "method",
            "id": 46,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns a boolean asserting whether an item exists in the Collection or not\r\n     * @param {Object} item\r\n     * @returns {Boolean}\r\n     */",
            "meta": {
                "range": [
                    25352,
                    25428
                ],
                "filename": "Base.mjs",
                "lineno": 842,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002285",
                    "name": "Base#hasItem",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns a boolean asserting whether an item exists in the Collection or not",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "hasItem",
            "longname": "Base#hasItem",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#hasItem",
            "$kind": "method",
            "id": 47,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the index for a given key or item\r\n     * @param {Number|String|Object} key\r\n     * @returns {Number} index (-1 in case no match is found)\r\n     */",
            "meta": {
                "range": [
                    25609,
                    25713
                ],
                "filename": "Base.mjs",
                "lineno": 851,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002302",
                    "name": "Base#indexOf",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the index for a given key or item",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String",
                            "Object"
                        ]
                    },
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "index (-1 in case no match is found)"
                }
            ],
            "name": "indexOf",
            "longname": "Base#indexOf",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#indexOf",
            "$kind": "method",
            "id": 48,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the index for a given item\r\n     * @param {Object} item\r\n     * @returns {Number} index (-1 in case no match is found)\r\n     */",
            "meta": {
                "range": [
                    25874,
                    25943
                ],
                "filename": "Base.mjs",
                "lineno": 860,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002328",
                    "name": "Base#indexOfItem",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the index for a given item",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "index (-1 in case no match is found)"
                }
            ],
            "name": "indexOfItem",
            "longname": "Base#indexOfItem",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#indexOfItem",
            "$kind": "method",
            "id": 49,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the index for a given key\r\n     * @param {Number|String} key\r\n     * @returns {Number} index (-1 in case no match is found)\r\n     */",
            "meta": {
                "range": [
                    26109,
                    26189
                ],
                "filename": "Base.mjs",
                "lineno": 869,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002341",
                    "name": "Base#indexOfKey",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the index for a given key",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String"
                        ]
                    },
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "index (-1 in case no match is found)"
                }
            ],
            "name": "indexOfKey",
            "longname": "Base#indexOfKey",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#indexOfKey",
            "$kind": "method",
            "id": 50,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Inserts an item or an array of items at the specified index\r\n     * @param {Number} index\r\n     * @param {Array|Object} item\r\n     * @returns {Number} the collection count\r\n     */",
            "meta": {
                "range": [
                    26395,
                    26494
                ],
                "filename": "Base.mjs",
                "lineno": 879,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002360",
                    "name": "Base#insert",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index",
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Inserts an item or an array of items at the specified index",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                },
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "insert",
            "longname": "Base#insert",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#insert",
            "$kind": "method",
            "id": 51,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @returns {Boolean} true in case the collection is filtered\r\n     */",
            "meta": {
                "range": [
                    26595,
                    26650
                ],
                "filename": "Base.mjs",
                "lineno": 888,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002379",
                    "name": "Base#isFiltered",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the collection is filtered"
                }
            ],
            "name": "isFiltered",
            "longname": "Base#isFiltered",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#isFiltered",
            "$kind": "method",
            "id": 52,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Object} item\r\n     * @returns {boolean}\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    26757,
                    27159
                ],
                "filename": "Base.mjs",
                "lineno": 898,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002387",
                    "name": "Base#isFilteredItem",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "boolean"
                        ]
                    }
                }
            ],
            "access": "private",
            "name": "isFilteredItem",
            "longname": "Base#isFilteredItem",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#isFilteredItem",
            "$kind": "method",
            "id": 53,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @returns {Boolean} true in case the collection is sorted\r\n     */",
            "meta": {
                "range": [
                    27258,
                    27309
                ],
                "filename": "Base.mjs",
                "lineno": 919,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002435",
                    "name": "Base#isSorted",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the collection is sorted"
                }
            ],
            "name": "isSorted",
            "longname": "Base#isSorted",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#isSorted",
            "$kind": "method",
            "id": 54,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Returns the last item inside the collection\r\n     * @returns {Object}\r\n     */",
            "meta": {
                "range": [
                    27413,
                    27477
                ],
                "filename": "Base.mjs",
                "lineno": 927,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002443",
                    "name": "Base#last",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the last item inside the collection",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    }
                }
            ],
            "name": "last",
            "longname": "Base#last",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#last",
            "$kind": "method",
            "id": 55,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Object} opts\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    27557,
                    27610
                ],
                "filename": "Base.mjs",
                "lineno": 936,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002458",
                    "name": "Base#onFilterChange",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "opts"
                }
            ],
            "access": "private",
            "name": "onFilterChange",
            "longname": "Base#onFilterChange",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#onFilterChange",
            "$kind": "method",
            "id": 56,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Object} opts\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    27690,
                    27958
                ],
                "filename": "Base.mjs",
                "lineno": 945,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002468",
                    "name": "Base#onMutate",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "opts"
                }
            ],
            "access": "private",
            "name": "onMutate",
            "longname": "Base#onMutate",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#onMutate",
            "$kind": "method",
            "id": 57,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {Object} opts\r\n     * @private\r\n     */",
            "meta": {
                "range": [
                    28038,
                    28127
                ],
                "filename": "Base.mjs",
                "lineno": 962,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002500",
                    "name": "Base#onSorterChange",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "opts"
                }
            ],
            "access": "private",
            "name": "onSorterChange",
            "longname": "Base#onSorterChange",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#onSorterChange",
            "$kind": "method",
            "id": 58,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Removes the last element from the items array and returns this element.\r\n     * @returns {Object} The removed element from the collection; undefined if the collection is empty.\r\n     */",
            "meta": {
                "range": [
                    28338,
                    28454
                ],
                "filename": "Base.mjs",
                "lineno": 971,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002515",
                    "name": "Base#pop",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes the last element from the items array and returns this element.",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The removed element from the collection; undefined if the collection is empty."
                }
            ],
            "name": "pop",
            "longname": "Base#pop",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#pop",
            "$kind": "method",
            "id": 59,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Adds one or more items to the end of the collection and returns the new items count\r\n     * @param {Array|Object} item The item(s) to add\r\n     * @returns {Number} the collection count\r\n     */",
            "meta": {
                "range": [
                    28673,
                    28724
                ],
                "filename": "Base.mjs",
                "lineno": 981,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002539",
                    "name": "Base#push",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Adds one or more items to the end of the collection and returns the new items count",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "description": "The item(s) to add",
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "push",
            "longname": "Base#push",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#push",
            "$kind": "method",
            "id": 60,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Removes a given key, item or Array containing keys|items\r\n     * @param {Number|String|Object|Array} key\r\n     * @returns {Number} the collection count\r\n     */",
            "meta": {
                "range": [
                    28910,
                    29022
                ],
                "filename": "Base.mjs",
                "lineno": 990,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002550",
                    "name": "Base#remove",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes a given key, item or Array containing keys|items",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String",
                            "Object",
                            "Array"
                        ]
                    },
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "remove",
            "longname": "Base#remove",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#remove",
            "$kind": "method",
            "id": 61,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Removes the item at the given index\r\n     * @param {Number} index\r\n     * @returns {Number} the collection count\r\n     */",
            "meta": {
                "range": [
                    29169,
                    29258
                ],
                "filename": "Base.mjs",
                "lineno": 1000,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002575",
                    "name": "Base#removeAt",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes the item at the given index",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "removeAt",
            "longname": "Base#removeAt",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#removeAt",
            "$kind": "method",
            "id": 62,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Reverses the items array in place.\r\n     * Intended for collections without sorters.\r\n     * @returns {Array} items\r\n     */",
            "meta": {
                "range": [
                    29408,
                    29465
                ],
                "filename": "Base.mjs",
                "lineno": 1010,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002592",
                    "name": "Base#reverse",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Reverses the items array in place.\rIntended for collections without sorters.",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "items"
                }
            ],
            "name": "reverse",
            "longname": "Base#reverse",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#reverse",
            "$kind": "method",
            "id": 63,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Removes the first element from the items array and returns this element.\r\n     * @returns {Object} The removed element from the collection; undefined if the collection is empty.\r\n     */",
            "meta": {
                "range": [
                    29677,
                    29776
                ],
                "filename": "Base.mjs",
                "lineno": 1018,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002603",
                    "name": "Base#shift",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes the first element from the items array and returns this element.",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The removed element from the collection; undefined if the collection is empty."
                }
            ],
            "name": "shift",
            "longname": "Base#shift",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#shift",
            "$kind": "method",
            "id": 64,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     *\r\n     * @param {function} callback Function to test for each item, taking three parameters:\r\n     * @param {Object}   callback.item The current collection item being processed\r\n     * @param {Number}  [callback.index] The index of the current item being processed\r\n     * @param {Array}   [callback.items] The items array of the collection\r\n     *\r\n     * @param {Object} [scope] Value to use as \"this\" when executing the callback\r\n     * @returns {boolean} true if the callback function returns a truthy value for any collection item, otherwise false\r\n     */",
            "meta": {
                "range": [
                    30362,
                    30427
                ],
                "filename": "Base.mjs",
                "lineno": 1033,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002622",
                    "name": "Base#some",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "args"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "function"
                        ]
                    },
                    "description": "Function to test for each item, taking three parameters:",
                    "name": "callback"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The current collection item being processed",
                    "name": "callback.item"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "description": "The index of the current item being processed",
                    "name": "callback.index"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "optional": true,
                    "description": "The items array of the collection",
                    "name": "callback.items"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "optional": true,
                    "description": "Value to use as \"this\" when executing the callback",
                    "name": "scope"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "boolean"
                        ]
                    },
                    "description": "true if the callback function returns a truthy value for any collection item, otherwise false"
                }
            ],
            "name": "some",
            "longname": "Base#some",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#some",
            "$kind": "method",
            "id": 65,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Removes items from and/or adds items to this collection\r\n     * If the toRemoveArray is used, then the index is not used for removing, the entries are found by key and removed from where they are.\r\n     * If index is not passed, toAddArray is appended to the Collection.\r\n     * @param {Number|null} index\r\n     * @param {Number|Array} [removeCountOrToRemoveArray]\r\n     * @param {Array| Object} [toAddArray]\r\n     * @returns {Object} An object containing the addedItems & removedItems arrays\r\n     */",
            "meta": {
                "range": [
                    30954,
                    34715
                ],
                "filename": "Base.mjs",
                "lineno": 1046,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100002637",
                    "name": "Base#splice",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index",
                        "removeCountOrToRemoveArray",
                        "toAddArray"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes items from and/or adds items to this collection\rIf the toRemoveArray is used, then the index is not used for removing, the entries are found by key and removed from where they are.\rIf index is not passed, toAddArray is appended to the Collection.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "null"
                        ]
                    },
                    "name": "index"
                },
                {
                    "type": {
                        "names": [
                            "Number",
                            "Array"
                        ]
                    },
                    "optional": true,
                    "name": "removeCountOrToRemoveArray"
                },
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "optional": true,
                    "name": "toAddArray"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "An object containing the addedItems & removedItems arrays"
                }
            ],
            "name": "splice",
            "longname": "Base#splice",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#splice",
            "$kind": "method",
            "id": 66,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Prevents the collection from firing events until endUpdate gets called.\r\n     * If you start an update using the startSilentUpdateMode param,\r\n     * the mutation event will not fire after using endUpdate()\r\n     * (you must use the endSilentUpdateMode param for the endUpdate call in case you used\r\n     * startSilentUpdateMode here)\r\n     * @param {Boolean} [startSilentUpdateMode]\r\n     * @see {@link Neo.collection.Base#endUpdate endUpdate}\r\n     */",
            "meta": {
                "range": [
                    35194,
                    35364
                ],
                "filename": "Base.mjs",
                "lineno": 1159,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100003112",
                    "name": "Base#startUpdate",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "startSilentUpdateMode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Prevents the collection from firing events until endUpdate gets called.\rIf you start an update using the startSilentUpdateMode param,\rthe mutation event will not fire after using endUpdate()\r(you must use the endSilentUpdateMode param for the endUpdate call in case you used\rstartSilentUpdateMode here)",
            "params": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "optional": true,
                    "name": "startSilentUpdateMode"
                }
            ],
            "see": [
                "{@link Neo.collection.Base#endUpdate endUpdate}"
            ],
            "name": "startUpdate",
            "longname": "Base#startUpdate",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#startUpdate",
            "$kind": "method",
            "id": 67,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n     * Adds one or more elements to the beginning of the collection and returns the new items count\r\n     * @param {Array|Object} item The item(s) to add\r\n     * @returns {Number} the collection count\r\n     */",
            "meta": {
                "range": [
                    35592,
                    35681
                ],
                "filename": "Base.mjs",
                "lineno": 1172,
                "columnno": 4,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {
                    "id": "astnode100003131",
                    "name": "Base#unshift",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Adds one or more elements to the beginning of the collection and returns the new items count",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "description": "The item(s) to add",
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "unshift",
            "longname": "Base#unshift",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#unshift",
            "$kind": "method",
            "id": 68,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\r\n * The mutate event fires after every splice call (invoked by all methods which change the content of the items array).\r\n * @event mutate\r\n * @param {Object[]} addedItems\r\n * @param {Boolean} preventBubbleUp private\r\n * @param {Object[]} removedItems\r\n * @returns {Object}\r\n */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 1178,
                "columnno": 0,
                "path": "G:\\Covid-19\\COVID-19\\src\\collection",
                "code": {}
            },
            "description": "The mutate event fires after every splice call (invoked by all methods which change the content of the items array).",
            "kind": "event",
            "name": "mutate",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array.<Object>"
                        ]
                    },
                    "name": "addedItems"
                },
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "private",
                    "name": "preventBubbleUp"
                },
                {
                    "type": {
                        "names": [
                            "Array.<Object>"
                        ]
                    },
                    "name": "removedItems"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    }
                }
            ],
            "longname": "event:mutate",
            "scope": "global",
            "$longname": "event:mutate",
            "$kind": "event",
            "id": 69,
            "neoClassName": "Neo.collection.Base"
        }
    ]
}